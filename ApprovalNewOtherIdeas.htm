<script src="/group/ThinkBox/Style%20Library/ThinkBox_Script/pagination.js" type="text/javascript"></script>

<!-- NikhilD commented below code-->
<style>
    #pageloaddiv {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 1000;
        background: url('/group/thinkbox/Style%20Library/Images/loader.gif') no-repeat center center;
    }

    body, input {
        font-family: Calibri,Arial;
        margin: 0px;
        padding: 0px;
    }

    a {
        color: #0254eb;
    }

        a:visited {
            color: #0254eb;
        }

    #header h2 {
        color: #fff;
        background-color: #00a1e6;
        margin: 0px;
        padding: 5px;
    }

    .comment {
        width: 400px;
        background-color: #f0f0f0;
        margin: 10px;
    }

    a.morelink {
        text-decoration: none;
        outline: none;
    }

    .morecontent span {
        display: none;
    }

    .more1 {
        text-indent: -10000px;
        display: inline-table;
        width: 30px;
        height: 15px;
        background-image: url('../VIdeaImages/down_arrow_1.png');
        background-repeat: no-repeat;
        background-position: left top;
    }

    .less1 {
        text-indent: -10000px;
        display: inline-table;
        width: 30px;
        height: 15px;
        background-image: url('../VIdeaImages/up_arrow_1.png');
        background-repeat: no-repeat;
        background-position: left top;
    }
</style>


<div class="col-md-12 col-xs-12 approver-top-check">
    <div class="col-md-6 col-xs-6 PNONE pull-right">
        <label>Ideator View</label>
        <input type="radio" name="role" value="ideator" onclick="location.href = '../Pages/myideaDetails.aspx?roleFlag=true';">
        <label>Approver View</label>
        <input type="radio" name="role" value="approver" checked>
    </div>
</div>

<div class="post-idea-container">

    <div class="tabs tabspd">
        <ul class="nav nav-pills">

            <li class="active"><a data-toggle="pill" href="#NewIdea" value="New Idea">New Idea</a></li>
            <li><a data-toggle="pill" href="#OtherIdea" value="Other Idea">Other Idea</a></li>
            <input type="hidden" value="" id='hdnNewOtherIdeas'>
        </ul>
    </div>
    <div class="tab-content">

        <div style="overflow: hidden;" class="modal fade approver-form-position" id="IdeaModalOnlyDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">

                        <div id="myOnlyIdeaContent"></div>

                    </div>
                </div>
            </div>
        </div>




        <div class="modal fade" id="showInvestmentDetails" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header" id="showinvestmentHeader">
                        <button type="button" class="close" data-dismiss="modal">
                            &times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="popupSmBox overflowHidden">

                            <div class="overflowHidden">
                                <button type="button" class="close" data-dismiss="modal">
                                    <img src="/group/thinkbox/Style Library/Images/close_btn.png" /></button>
                            </div>
                            <div class="dividerLine">
                            </div>
                            <div class="popupSmBoxContent text-left overflowHidden">
                                <div id="showinvestmentContent" class="no-data">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" id="showinvestmentFooter" style="text-align: center">
                    </div>
                </div>
            </div>
        </div>




        <div class="modal fade approver-form-position" id="IdeaModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div id="pageloaddivpopup">
                <!-- <img id="img-spinner" src="https://workspace2.vodafone.com/Group/V-Ideas/VIdeaImages/loadingstyle.gif"  alt="Loading" /> -->

            </div>
            <div class="modal-dialog" role="document">
                <!-- Modal content-->
                <div class="modal-content">

                    <div class="modal-body">

                        <div class='popupBigBox'>

                            <div class='overflowHidden'>
                                <button type='button' class='close' data-dismiss='modal'>
                                    <img src='/Group/Thinkbox/Style Library/Images/close_btn.png'></button>
                            </div>
                            <div class='dividerLine'>
                            </div>
                            <div class='popupSmBoxContent text-left' style='height: 450px; overflow-y: auto; overflow-x: hidden;'>

                                <div id="myIdeaContent"></div>


                                <div class="pop-form approvel-form">

                                    <input type="hidden" value="" id='hdnIdeaID'>
                                    <input type="hidden" value="" id='hdnIdeaStatus'>
                                    <input type="hidden" value="" id='hdnRaisedBy'>



                                    <div id="Ideas" class="tab-pane fade in active">

                                        <ul style="width: 259px; float: left;" class="nav nav-pills om swapImg_1_Approval">
                                            <li class="active"><a id="roundPrivate" name="ideaPrivatePublic" class="active_1" value="Private" data-toggle="tab">Private</a></li>
                                            <li><a id="roundPublic" class="active_2" value="Public" name="ideaPrivatePublic" data-toggle="tab">Public</a></li>
                                        </ul>
                                        <span id="idPrivateMessage" class="msg-public-private" style="display: none;">Your idea is Private and not visible to others.</span>
                                        <span id="idPublicMessage" class="msg-public-private" style="display: none;">Your idea is Public and visible to others.</span>
                                    </div>

                                    <input type="hidden" value="Private" id='hdnPrivatePublic'>

                                    <div id='popupStatus'>

                                        <div class="col-xs-12 col-md-12 PNONE ">
                                            <div class="col-xs-2 col-md-2 PNONE radio-inline active">
                                                <input type='radio' id="rdo_Approve" name='optradio' value='Approve' />
                                                <label class='radio-inline active'>Approve</label>
                                            </div>
                                            <div class="col-xs-2 col-md-2 PNONE radio-inline">
                                                <input type='radio' id="rdo_Reject" name='optradio' value='Reject' />
                                                <label class='radio-inline'>Reject </label>
                                            </div>
                                            <div class="col-xs-2 col-md-2 PNONE radio-inline">
                                                <input type='radio' name='optradio' value='Rework' />
                                                <label class='radio-inline'>Rework</label>
                                            </div>
                                            <div class="col-xs-2 col-md-2 PNONE radio-inline">
                                                <input type='radio' name='optradio' value='On Hold' /><label class='radio-inline'>On Hold</label>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="col-xs-12 col-md-12 PNONE ">

                                        <label>*Comments </label>
                                        <div class="input-round width-100">

                                            <textarea class="form-control" id="txtComments" rows='3' required></textarea>
                                            <b id="valtxtComments" style="color: red; display: none">Comment is Mandatory.</b>

                                        </div>
                                        <div class="char-count" id="countComment">600 characters left</div>
                                    </div>

                                    <div id="divL1Approval" class="approvel-form">

                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                            <!--NikhilD commented below Code-->
                                            <!--<div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*Improvement lever: </label>
                                                <div class="input-round">
                                                    <div class="input-top">
                                                        <select id="list_CategoryL1ImprovementLever"></select>
                                                        <b id="vallist_CategoryL1ImprovementLever" style="color: red; display: none">Please Enter Category Improvement Lever.</b>
                                                    </div>
                                                </div>
                                            </div>-->
                                            <!--NikhilD commented above Code-->
                                            <div class="col-xs-6 col-md-6 PNONE ">
                                                <label>Time required for </br>implementation: </label>
                                                <div class="input-round">
                                                    <div class="input-top">

                                                        <select id="list_CategoryL1ImplementationLevel"></select>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                            <div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*Opportunity type: </label>
                                                <div class="input-round">
                                                    <div class="input-top">

                                                        <select id="list_CategoryL1OpportunityType"></select>
                                                        <b id="vallist_CategoryL1OpportunityType" style="color: red; display: none">Please Enter Category Opportunity Type.</b>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*CI/Non-CI:</label>
                                                <div class="input-round">
                                                    <div class="input-top">
                                                        <select id="list_CI_NonCI">
                                                            <option value="Select">Please Select</option>
                                                            <option value="CI">CI</option>
                                                            <option value="Non-CI">Non-CI</option>
                                                        </select>
                                                        <b id="valCINonCI" style="color: red; display: none">Please Select CI/NonCI.</b>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>




                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">

                                            <label style="width: 275px;">Estimated cost involved in implementation:</label>
                                            <div class="input-round width-100">

                                                <textarea id="txt_L1EffortCostInvolved" rows='3' required></textarea>

                                            </div>
                                        </div>

                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                            <label>
                                                *Expected date of
                                                <br>
                                                completion:
                                            </label>
                                            <div class="input-round">

                                                <input id="dtL1ExpectedDateCompletion" type="text" class="form-control" onkeypress='validate(event)' onpaste='JavaScript:return RestrictCopyPaste();' />
                                                <b id="valdtL1ExpectedDateCompletion" style="color: red; display: none">Please Enter Expected Date Completion.</b>
                                                <b id="valdtExpectedDateCompletion" style="color: red; display: none">Expected date should not be less than current date.</b>

                                            </div>
                                        </div>

                                    </div>


                                    <div id="divL2Approval" class="approvel-form">
                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                            <!--NikhilD commented below code to remove improvement lever2-->
                                            <!--<div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*Improvement lever: </label>
                                                <div class="input-round">
                                                    <div class="input-top">

                                                        <select id="list_CategoryL2ImprovementLever"></select>
                                                        <b id="vallist_CategoryL2ImprovementLever" style="color: red; display: none">Please Enter Category Improvement Lever.</b>
                                                    </div>
                                                </div>
                                            </div>-->
                                            <!--NikhilD commented above code to remove improvement lever2-->

                                            <div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*Time required for </br>implementation: </label>
                                                <div class="input-round">
                                                    <div class="input-top">

                                                        <select id="list_CategoryL2ImplementationLevel"></select>
                                                        <b id="vallist_CategoryL2ImplementationLevel" style="color: red; display: none">Please Enter Time required for implementation</b>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-xs-6 col-md-6 PNONE ">
                                                <label>*CI/Non-CI: </label>
                                                <div class="input-round">
                                                    <div class="input-top">
                                                        <select id="list_CI_NonCI_L2">
                                                            <option value="Select">Please Select</option>
                                                            <option value="CI">CI</option>
                                                            <option value="Non-CI">Non-CI</option>
                                                        </select>
                                                        <b id="valCINonCIL2" style="color: red; display: none">Please Select CI/NonCI.</b>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-xs-6 col-md-6 PNONE MRT-SM">
                                                <label>*Opportunity type: </label>
                                                <div class="input-round">
                                                    <div class="input-top">

                                                        <select id="list_CategoryL2OpportunityType"></select>
                                                        <b id="vallist_CategoryL2OpportunityType" style="color: red; display: none">Please Enter Category Opportunity Type.</b>
                                                    </div>
                                                </div>
                                            </div>

                                            <br />
                                            <div class="col-xs-12 col-md-12 PNONE ">

                                                <label style="width: 275px;">*Estimated cost involved in implementation:</label>
                                                <div class="input-round width-100">

                                                    <textarea id="txt_L2EffortCostInvolved" rows='3' required></textarea>
                                                    <b id="valtxt_L2EffortCostInvolved" style="color: red; display: none">Please Enter Estimated cost involved in implementation.</b>

                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                <label>
                                                    *Actual date of
                                                    <br>
                                                    completion:
                                                </label>
                                                <div class="input-round">

                                                    <input id="dtL2ActualDateCompletion" type="text" class="form-control" onkeypress='validate(event)' onpaste='JavaScript:return RestrictCopyPaste();' />
                                                    <b id="valdtL2ExpectedDateCompletion" style="color: red; display: none">Actual date should not be Greater than current date.</b>
                                                    <b id="valdtL2FinancialDate" style="color: red; display: none">Please Enter Current Financial Year Value</b>
                                                </div>
                                            </div>

                                        </div>
                                    </div>

                                    <div id="divCICoreFinancialApproval">
                                        <div id="CFBenefitTypes" class="col-xs-12 col-md-12 PNONE MRT-SM ">

                                            <label>Benefit type : </label>

                                            <div class="col-xs-2 col-md-2 PNONE benefit-type">
                                                <input name="chkcheckbox" type="checkbox" value="Hard">
                                                <label>Hard </label>
                                            </div>

                                            <div class="col-xs-2 col-md-2 PNONE benefit-type">
                                                <input name="chkcheckbox" type="checkbox" value="Soft">
                                                <label>soft </label>
                                            </div>

                                            <div class="col-xs-2 col-md-2 PNONE benefit-type">
                                                <input name="chkcheckbox" type="checkbox" value="Partner">
                                                <label>Partner </label>
                                            </div>
                                            <b id="errorCFBenefitTypes" style="color: red; display: none">Please Select Benefit Type.</b>
                                        </div>


                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">

                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                <div class="col-xs-6 col-md-6 PNONE ">
                                                    <label>Total Hard benefits</br>(EURO):	 </label>
                                                    <div class="input-round">

                                                        <input class="form-control" maxlength="5" id="HardTotalBenefits" type="text" onchange="return isNumberKey(event)" onkeypress="return isNumberKey(event)" onpaste="JavaScript:return RestrictCopyPaste();" disabled="">
                                                        <span id="valHardTotalBenefits" style="color: red; display: none">Please Enter valid data for Hard Total Benefits. </span>
                                                        <span id="errorTotalHardBenefits" style="color: red; display: none; font-weight: bold;">Please Enter Hard Total Benefits.</span>
                                                    </div>

                                                </div>

                                                <label>*Idea Category:</label>
                                                <select id="list_IdeaCategory" class="form-control">
                                                    <option></option>
                                                </select>

                                                <div class="col-xs-6 col-md-6 padding-left25">
                                                    <label>Total Partner benefits</br>(EURO):</label>
                                                    <div class="input-round">

                                                        <input class="form-control" maxlength="5" id="PartnerTotalBenefits" type="text" onchange="return isNumberKey(event)" onkeypress="return isNumberKey(event)" onpaste="JavaScript:return RestrictCopyPaste();" disabled="">
                                                        <span id="valPartnerTotalBenefits" style="color: red; display: none">Please Enter valid data for Partner Total Benefits.</span>
                                                        <span id="errorTotalPartnerBenefit" style="color: red; display: none; font-weight: bold;">Please Enter Partner Total Benefits.</span>
                                                    </div>

                                                </div>
                                            </div>


                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                <div class="col-xs-6 col-md-6 PNONE ">
                                                    <label>
                                                        *Efforts saved<br>
                                                        (Hrs/month) :
                                                    </label>
                                                    <div class="input-round">

                                                        <input class="form-control" maxlength="5" id="EffortsSaved" type="text" onkeypress="return isNumberKey(event)" onchange="CalculationOnEffortsSaved()" onpaste="JavaScript:return RestrictCopyPaste();" disabled="">
                                                        <span id="valEffortsSaved" style="color: red; display: none"></span>
                                                        <span id="errorEffortsSaved" style="color: red; display: none; font-weight: bold;">Please Enter Efforts Saved.</span>
                                                    </div>

                                                </div>

                                                <div class="col-xs-6 col-md-6  padding-left25 ">
                                                    <label>*Per hour cost(EURO):</label>
                                                    <div class="input-round">

                                                        <input class="form-control" maxlength="10" id="PerhourEurocost" type="text" onkeypress="return isNumberKey(event)" onpaste="JavaScript:return RestrictCopyPaste();">
                                                        <span id="errorPerHourCost" style="color: red; display: none; font-weight: bold;">Please Enter Per Hour Euro Cost.</span>
                                                    </div>

                                                </div>
                                            </div>


                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                <div class="col-xs-6 col-md-6 PNONE ">
                                                    <label>*Opportunity type: </label>
                                                    <div class="input-round">
                                                        <div class="input-top">

                                                            <select id="list_OpportunityType"></select>
                                                            <b id="errorlist_OpportunityType" style="color: red; display: none">Please Enter Opportunity Type.</b>
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="col-xs-6 col-md-6 padding-left25 ">
                                                    <label>Category Benefits: </label>
                                                    <div class="input-round">
                                                        <div class="input-top">
                                                            <select id="list_CategoryBenefits" class="form-control">
                                                                <option value="OT">One Time</option>
                                                                <option value="R">Recurring</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>



                                            </div>

                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM">

                                                <div class="col-xs-6 col-md-6 PNONE ">
                                                    <label>
                                                        *Actual date of
                                                        <br>
                                                        completion:
                                                    </label>
                                                    <div class="input-round">

                                                        <input id="dtActualDateOfCompletion" type="text" class="form-control" onkeypress='validate(event)' onpaste='JavaScript:return RestrictCopyPaste();' />
                                                        <b id="valdtActualDateOfCompletion" style="color: red; display: none">Actual Date Of Completion is not a date.</b>
                                                        <span id="errorAtualDateOfComp" style="color: red; display: none; font-weight: bold">Please Enter Actual Date Of Completion.</span>

                                                    </div>

                                                </div>

                                            </div>


                                            <!---------Last section------------->

                                            <div class="col-xs-12 col-md-12 PNONE MRT-SM bottom-section-set">
                                                <div class="col-xs-6 col-md-6 PNONE">
                                                    <!---------start left section------------->
                                                    <label>&nbsp; </label>
                                                    <span class="color-yellow">Financial Year  </span>
                                                    <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                        <label>Benefit period:</label>
                                                        <div class="input-round">

                                                            <input class="form-control small-txt" id="finBenefitPeriod" type="text" disabled="" value="0">
                                                        </div>
                                                        <!--<button type='button' onclick='AllCalculations()'>Calculate</button>-->
                                                        <div type='button' id="btnCalculate" onclick='AllCalculations()' class="bttnComman bttnPurple calculate-btn">Calculate <span class="leftTop"></span><span class="rightTop"></span><span class="rightBottom"></span><span class="leftBottom"></span></div>
                                                    </div>
                                                    <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                        <label>
                                                            Soft Benefits<br>
                                                            Saved (EURO):
                                                        </label>
                                                        <div class="input-round">

                                                            <input class="form-control" id="finSoftBenefitSaved" type="text" disabled="" placeholder="0" value="0">
                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                        <label>*Implementation Cost (EURO):</label>
                                                        <div class="input-round">

                                                            <input class="form-control" value="0" maxlength="5" id="finHardBenefitSaved" type="text" onkeypress="return isNumberKey(event)" onpaste="JavaScript:return RestrictCopyPaste();">
                                                            <b id="valfinHardBenefitSaved" style="color: red; display: none">Please Enter valid data for Implementation Cost.</b>
                                                            <span id="errorImplementation" style="color: red; display: none; font-weight: bold;">Please Enter Implementation Cost.</span>
                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                        <label>Total benefits(EURO): </label>
                                                        <div class="input-round">

                                                            <input class="form-control" value="0" id="finTotalBenefits" type="text" disabled="">
                                                        </div>
                                                    </div>

                                                </div>
                                                <!---End left form section---->

                                                <div class="col-xs-6 col-md-6 PNONE">
                                                    <div class="border-left">

                                                        <label>&nbsp; </label>
                                                        <span class="color-yellow">Annualized </span>
                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>Benefit period: </label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthBenefitPeriod" type="text" disabled="">
                                                            </div>

                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>
                                                                Soft Benefits<br>
                                                                Saved (EURO):
                                                            </label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthSoftBenefitSaved" type="text" disabled="">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>
                                                                *Other Benefits<br>
                                                                Saved (EURO):</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthOtherBenefitSaved" type="text" onkeypress="return isNumberKey(event)" onpaste="JavaScript:return RestrictCopyPaste();">
                                                                <span id="errorOtherBenefits" style="color: red; display: none; font-weight: bold;">Please Enter Other Benefit Saved.</span>
                                                            </div>

                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>Spill over benefits</br>(EURO):</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" maxlength="5" id="monthHardBenefitSaved" onkeypress="return isNumberKey(event)" type="text" onpaste="JavaScript:return RestrictCopyPaste();">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>Total benefits(EURO):</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthTotalBenefits" type="text" disabled="">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>Hours saved in year:	</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthHoursSavedInYear" type="text" disabled="">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>Man months saved:</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthFTESaved" type="text" disabled="">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM">
                                                            <label>FTE saved:</label>
                                                            <div class="input-round">

                                                                <input class="form-control" value="0" id="monthHeadCountSaved" type="text" disabled="">
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-md-12 PNONE MRT-SM exitRunRate" style="display: none">
                                                            <label>Exit Run Rate:</label>
                                                            <div class="input-round">
                                                                <input class="form-control" value="0" id="exitRunRate" type="text" disabled="">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!---End border-left div---->
                                                </div>
                                                <!---End right form section---->



                                            </div>
                                        </div>
                                        <!------divCICoreFinancialApproval end--------->


                                    </div>



                                    <div class="col-xs-12 col-md-12 text-center">
                                        <div style="margin-bottom: 25px;" id="tag_&quot;+IdeaId+&quot;" onclick="SubmitIdea()" class="bttnComman bttnPurple">Submit <span class="leftTop"></span><span class="rightTop"></span><span class="rightBottom"></span><span class="leftBottom"></span></div>
                                    </div>

                                </div>
                                <!----------popform closed--------------->


                            </div>
                            <!----------popbox closed--------------->
                        </div>
                        <!----------popbox closed--------------->
                    </div>
                    <!----------model body closed--------------->


                </div>

            </div>
            <!----------modal end--------------->
        </div>



        <div id="NewIdea" class="tab-pane fade active filter-panel">

            <div class="mycallenges-wrapper pi-wrapper bg-inner-grey" style="overflow: hidden; padding-right: 0px; height: 415px!important;">

                <div class="padding-outer">
                    <div class='filter-panel filter-wrapper'>
					
					<div id='MyIdeaTable' style="width:50%;float:left" >
                        
                            <label id="lblUserVertical">Vertical</label>

                            <div class="input-round">

                                <select id="UserVertical" class="UserVertical">
                                </select>
                            </div>

                            <label id="lblUserServiceLine">ServiceLine</label>

                            <div class="input-round">
                                <select id="UserServiceLine" class="UserServiceLine">
                                </select>
                            </div>
						</div>
						 <div style="float:left">
							<label id="lblTextID">Text/ID</label>
							<div class="input-round">
								<input style="width: 85px!important;" type="text" class="form-control" id="txtSearch" />
							</div> &nbsp;
							<input type="button" id="filter" class="bttnComman bttnPurple MNONE pull-right" onclick='GetFilteredData()' value="Search" />
						</div>
						 
                    </div>
						
                </div>

                <div id="NewIdeasTable" class="apperover-child approval-idea-childset" style="padding-right: 0">
                </div>
            </div>

        </div>


        <div id="OtherIdea" class="tab-pane fade filter-panel">

            <div class="mycallenges-wrapper pi-wrapper bg-inner-grey" style="overflow: hidden; padding-right: 0px; height: 415px!important;">
                <div class="padding-outer">
                    <div id='OtherIdeaTable' class='filter-panel filter-wrapper'>
                        <div class="col-md-12 col-xs-12 PNONE filter-hide">
                            <div class="col-md-4 col-xs-4 MRNONE">
                                <div class="ddlwrapper">
                                    <span class="ig-top-left"></span><span class="ig-top-right"></span>
                                    <div class="input-round width-100">
                                        <div class="input-top">
                                        </div>
                                        <select id="list_CategoryOther">
                                        </select>
                                    </div>


                                </div>

                            </div>
                            <div class="col-md-4 col-xs-4 MRNONE">

                                <div class="input-round width-100" style="width: 81%">
                                    <div class="input-top">
                                    </div>
                                    <select id="list_Status">
                                    </select>
                                </div>

                            </div>

                            <div class="col-md-4 col-xs-4 MRNONE">
                                <div class="input-round width-100">
                                    <select id="list_PendingWith">
                                        <option value="Reject">Reject</option>
                                        <option value="On Hold">On Hold</option>
                                        <option value="Completed">Completed</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12 col-xs-12 PNONE MRT-SM">
                            <div class="col-md-12 col-xs-12">
                                <div style="width: 217px;" class="error-wrapper col-md-5 col-lg-5 col-sm-5 PNONE">
                                    <label>Date Range</label>
                                    <div class="input-round">
                                        <span class="calender-position">
                                            <div class="input-round">
                                                <input id="fromDateOther" class="form-control" type="text" onkeypress='validate(event)' onpaste='JavaScript:return RestrictCopyPaste();' />

                                            </div>

                                        </span>
                                        <div class="error-msg" id="valfromDateOther" style="width: 135px; display: none;"></div>
                                    </div>

                                </div>

                                <div style="width: 175px;" class="error-wrapper col-md-4 col-lg-4 col-sm-4 PNONE">
                                    <label>To</label>
                                    <span class="calender-position">
                                        <div class="input-round">
                                            <input id="toDateOther" class="form-control" type="text" onkeypress='validate(event)' onpaste='JavaScript:return RestrictCopyPaste();' />
                                        </div>

                                    </span>
                                    <div class="error-msg" id="valtoDateOther" style="width: 190px; float: left; display: none"></div>
                                </div>
                                <div class="error-wrapper col-md-2 col-lg-2 col-sm-2 PNONE ideastatus-hide">
                                    <select id="list_PendingWith" style="height: 35px">
                                        <option value="Reject">Reject</option>
                                        <option value="On Hold">On Hold</option>
										<option value="Completed">Completed</option>
                                    </select>
                                </div>

                                <div class="input-round">
                                    <input type="text" class="form-control" id="txtOtIdea" />
                                </div>

                                <div class="error-wrapper col-md-2 col-lg-2 col-sm-2 PNONE pull-right">
                                    <div type="button" id="Div1" class="bttnComman bttnPurple MNONE pull-right" onclick='GetOtherIdeasAll()'>Search</div>
                                </div>
                            </div>

                        </div>
                    </div>


                    <div id="OtherIdeasTable" class="apperover-child">
                    </div>

                </div>
            </div>

        </div>
    </div>
    <div id="pageloaddiv">
    </div>
</div>
<div id="ApprovalPaginationJS" class="paginationjs paginationjs-big"></div>
<b><a id="LoadAllNewIdeas" style="color: #9b2ba0;">Load Primary Vertical & ServiceLine</a></b>
<script>
var checkL3 = "";
	function GetFilteredData() {
	
				var approvalDetails = new Array();
                approvalDetails = GetAllApprovalDetails(approvalDetails);
                var i, len;
                len = approvalDetails.length;

                for (i = 0, len; i < len; i++) {
                    if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                        checkL3 = "exists";
                    }
                }
	
	
		if ((PrimaryVerticalName != "Technology SSC" || PrimaryVerticalName != "TSSI - Networks") && (!checkL3)) {
			GetNewIdeas();
			MyNewIdeas();
		} else {
			NewIdeasItemCount = false;
			$("#pageloaddiv").show();
			setTimeout(function() {
				GetFilteredDataNewIdeas();
				$("#pageloaddiv").hide();
			}, 2000);
		}
	}
	
    $('#LoadAllNewIdeas').click(function () {
        NewIdeasItemCount = true;
        GetPrimaryServiceLineAndPrimaryServiceLine();
        GetAllVerticalsandServiceLines();
        $("#pageloaddiv").show();
        setTimeout(function () {
            GetNewIdeas();
            MyNewIdeas();
            $("#pageloaddiv").hide();
        }, 2000);


    });

    $("#fromDateNew").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range

    });

    $("#toDateNew").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    $("#fromDateOther").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    $("#toDateOther").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    $("#dtL1ExpectedDateCompletion").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    var year = (new Date).getFullYear();
    $("#dtL2ActualDateCompletion").datepicker({

        maxDate: "+0D",
        minDate: new Date(year, 3, 1),
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    $("#dtActualDateOfCompletion").datepicker({
        showOn: "both",
        buttonImage: '../Style Library/Images/date.png',
        buttonImageOnly: true,
        buttonText: "Open calendar",
        changeMonth: true,//this option for allowing user to select month
        changeYear: true //this option for allowing user to select from year range
    });

    /* Other to date validation */
    $("#toDateOther").bind('change', function () {
        $("#valtoDateOther").hide()
        var toDateOther = $(this).val();

        var fromDateOther = new Date($('#fromDateOther').val());
        var currentDate = new Date();

        if (Date.parse(fromDateOther) > Date.parse(toDateOther)) {
            $(this).val('');
            $("#valtoDateOther").show();
            $("#valtoDateOther").text("To date should be greater than From date.");

            //alert("To date should be greater than From date.");
        }
        else if (Date.parse(toDateOther) > Date.parse(currentDate)) {
            $(this).val('');
            $("#valtoDateOther").show();
            $("#valtoDateOther").text("To date should not be greater than Current date.");
            //alert("To date should not be greater than Current date.");
        }
    });


    /* Other from date validation */
    $("#fromDateOther").bind('change', function () {
        $("#valfromDateOther").hide();
        var fromDateOther = $(this).val();

        var toDateOther = new Date($('#toDateOther').val());
        var currentDate = new Date();

        if (Date.parse(fromDateOther) > Date.parse(toDateOther)) {
            $(this).val('');
            $("#valfromDateOther").show();
            $("#valfromDateOther").text("From date should not be greater than To date.")
            //alert("From date should not be greater than To date.");
        }
        else if (Date.parse(fromDateOther) > Date.parse(currentDate)) {
            $(this).val('');
            $("#valfromDateOther").show();
            $("#valfromDateOther").text("From date should not be greater than Current date.")
            //alert("From date should not be greater than Current date.");
        }
    });

    /* New to date validation */
    $("#toDateNew").bind('change', function () {
        $("#valtoDateNew").hide();

        var toDateNew = $(this).val();

        var fromDateNew = new Date($('#fromDateNew').val());
        var currentDate = new Date();

        if (Date.parse(fromDateNew) > Date.parse(toDateNew)) {
            $(this).val('');
            $("#valtoDateNew").show();
            $("#valtoDateNew").text("To date should be greater than From date.")
            //alert("To date should be greater than From date.");
        }
        else if (Date.parse(toDateNew) > Date.parse(currentDate)) {
            $(this).val('');
            $("#valtoDateNew").show();
            $("#valtoDateNew").text("To date should not be greater than Current date.")
            //alert("To date should not be greater than Current date.");
        }
    });

    /* New from date validation */
    $("#fromDateNew").bind('change', function () {
        var fromDateNew = $(this).val();

        var toDateNew = new Date($('#toDateNew').val());
        var currentDate = new Date();

        if (Date.parse(fromDateNew) > Date.parse(toDateNew)) {
            $(this).val('');
            $("#valfromDateNew").show();
            $("#valfromDateNew").text("From date should not be greater than To date.");
            //alert("From date should not be greater than To date.");
        }
        else if (Date.parse(fromDateNew) > Date.parse(currentDate)) {
            $(this).val('');
            //alert("From date should not be greater than Current date.");
            $("#valfromDateNew").show();
            $("#valfromDateNew").text("From date should not be greater than Current date.");
        }
    });

    $("#dtL1ExpectedDateCompletion").bind('change', function () {
        $("#valdtExpectedDateCompletion").hide();

        var dtL1ExpectedDateCompletion = $(this).val();

        var currentDate = new Date()
        var month = currentDate.getMonth() + 1
        var day = currentDate.getDate()
        var year = currentDate.getFullYear()
        currentDate = (month + "/" + day + "/" + year);

        if (Date.parse(dtL1ExpectedDateCompletion) < Date.parse(currentDate)) {
            $(this).val('');
            $("#valdtExpectedDateCompletion").show();
            //alert("Expected date should not be less than current date.");
        }
    });

    $("#dtL2ActualDateCompletion").bind('change', function () {
        $("#valdtL2ExpectedDateCompletion").hide();
        $("#valdtL2FinancialDate").hide();
        var dtL2ExpectedDateCompletion = $(this).val();

        var currentDate = new Date()
        var month = currentDate.getMonth() + 1
        var day = currentDate.getDate()
        var year = currentDate.getFullYear()
        currentDate = (month + "/" + day + "/" + year);
        var minDate = new Date(year, 3, 1);

        if (Date.parse(dtL2ExpectedDateCompletion) > Date.parse(currentDate)) {
            $(this).val('');
            $("#valdtL2ExpectedDateCompletion").show();

        }
        if (Date.parse(dtL2ExpectedDateCompletion) < Date.parse(minDate)) {
            $(this).val('');
            $("#valdtL2FinancialDate").show();
        }
    });

</script>

<script type="text/javascript">
    var ActionClickedVerticalName;
    var ActionClickedServiceLine;
    var ActionClicked = false;
    var NewIdeasItemCount = false;
    var NewIdeascamlrowlimit = 0;
    var IsNewIdeasdataloaded = false;
    var NewIdeaLoadedData;
    var IsPaginationClicked = false;
    var NewArrGetFilteredDataNewIdeas = [];
    var itemCount = 0;
    var ItemcountOnPageLoad = 0;
    var GlobalResultcountOnPageLoad = 0;
    var GlobalResultcount = 0;
    var role;
    var acc;
    var em;
    var locat;
    var currentUser;
    var userEMail;
    var StatusComment;
    var query2 = "";
    //var roleApprover = thinkBox.cookies.getCookie("userRole");
    //var Vertical = thinkBox.cookies.getCookie("userVertical");
    //var Location = thinkBox.cookies.getCookie("userLocation");

    var roleApprover = localStorage.getItem("userRole");
    var Vertical = localStorage.getItem("userVertical");
    var Location = localStorage.getItem("userLocation");

    var arrGetnewIdeas = [];
    var arrGetFilteredDataNewIdeas = [];
    var arrGetFilteredOtherDataNewIdeas = [];
    var reachedPaginationEnd = false;
    var leaderEmail;
    var array = [];
    var dupes = {};
    var singles = [];
    var newarrayVertical = [];
    var newarrayServiceLine = [];
    var newarrayPrimaryVerticalName = [];
    var newarrayPrimaryServiceLineName = [];
    var PrimaryVerticalName;
    var PrimaryServiceLineName;
    var nextDayDateTime = ISODateStringChal(new Date(new Date().setDate(new Date().getDate() + 1)));
    var nextDayFilteredDateTime = ISODateStringChal(new Date(new Date().setDate(new Date().getDate() + 1)));
    var IdeasCachedData = [];
    var GetNewFilteredIdeasCachedData = [];
    var currentPageNo = 1;
    var currentArrayIndex = 0;
    var IsfilteredData = false;
    var IsClicked = false;

    //var currUserLocation = thinkBox.cookies.getCookie("userLocation");
    var currUserLocation = localStorage.getItem("userLocation");
    var conversionRate;

    var totalHardBenefitsLocalCurrency = 0;
    var totalPartnerBenefitsLocalCurrency = 0;
    var perHourCostLocalCurrency = 0;
    var softBenefitsSavedLocalCurrency = 0;
    var monthSoftBenefitSavedLocalCurrency = 0;
    var implementationCostLocalCurrency = 0;
    var otherBenefitsLocalCurrency = 0;
    var totalBenefitsLocalCurrency = 0;
    var spillOverBenefitsLocalCurrency = 0;
    var monthTotalBenefitsLocalCurrency = 0;


    function ISODateStringChal(d) {
        function pad(n) { return n < 10 ? '0' + n : n }
        return d.getUTCFullYear() + '-'
             + pad(d.getUTCMonth() + 1) + '-'
             + pad(d.getUTCDate()) + 'T'
             + pad(d.getUTCHours()) + ':'
             + pad(d.getUTCMinutes()) + ':'
             + pad(d.getUTCSeconds()) + 'Z'
    }


    /*NikhilD commented above code*/
    function convertToISODate(spUTCDateValue) {
        return (new Date(spUTCDateValue.replace(" ", "T"))).toISOString();
    }

    function CheckUndefinedORNull(value) {
        if (!value) {
            return "";
        }
        else {
            return value;
        }
    }

    $(document).ready(function () {
        //  $("#LoadAllNewIdeas").show();

        ActionClicked = localStorage.getItem("ActionClicked");
        ActionClickedVerticalName = localStorage.getItem("ActionClickedVerticalName");
        ActionClickedServiceLine = localStorage.getItem("ActionClickedServiceLine");

        if (ActionClicked == "true") {

            $('#UserVertical option').remove();
            $('#UserServiceLine option').remove();
            GetPrimaryServiceLineAndPrimaryServiceLine();
            GetAllVerticalsandServiceLines();

            GetFilteredData();

        }
        else {

            $('#pageloaddiv').hide();

            leaderEmail = checkIfLeaderApproval();
            /* Get All New Ideas */
            GetPrimaryServiceLineAndPrimaryServiceLine();
            GetAllVerticalsandServiceLines();

            GetNewIdeas();
            MyNewIdeas();
        }
        localStorage.setItem("ActionClicked", false);
        (function ($) {
            $.fn.extend(
            {
                limiter: function (limit, elem) {
                    $(this).on("keyup focus", function () {
                        setCount(this, elem);
                    });

                    function setCount(src, elem) {
                        var chars = src.value.length;
                        if (chars > limit) {
                            src.value = src.value.substr(0, limit);
                            chars = limit;
                        }
                        elem.html(limit - chars + " characters left");
                    }

                    setCount($(this)[0], elem);
                }

            });
        })(jQuery);

        var elem = $("#countComment");
        $("#txtComments").limiter(600, elem);
        var elem = $("#countL1EffortCostInvolved");
        $("#txt_L1EffortCostInvolved").limiter(600, elem);
        var elem = $("#countL2EffortCostInvolved");
        $("#txt_L2EffortCostInvolved").limiter(600, elem);

        /* Show More */

        var showChar = 290;
        var ellipsestext = "...";
        var moretext = "Expand";
        var lesstext = "less";
        $(".Expand").each(function () {

            var content = $(this).html();
            if (content.length > showChar) {
                var c = content.substr(0, showChar);
                var h = content.substr(showChar - 1, content.length - showChar);

                var html = '<div class="slide-up">' + content + '&nbsp;&nbsp;</div><span class="ellipseSpan"> ' + ellipsestext + '</span><div class="leaderslide-arrow text-center"><a href="" class="morelink more1">' + moretext + '</a></div>';
                $(this).html(html);
            }
        });


        $(".morelink").click(function () {
            if ($(this).hasClass("more1")) {
                $(this).parent().parent().find('div').first().removeClass("slide-up").addClass("slide-down");
                $(this).removeClass('more1').addClass('less1');
                $(this).parent().parent().find('span').hide();
            }
            else {
                $(this).removeClass('less1').addClass('more1');
                $(this).parent().parent().find('div').first().removeClass("slide-down").addClass("slide-up");
                $(this).parent().parent().find('span').show();

            }
            return false;
        });

        /* Get All Category */
        GetAllCategory();
        // GetAllVerticalsandServiceLines();


        $('.roundPrivate').css('width', '145px');
        $('.roundPublic').css('width', '114px');

        $('#roundPrivate').click(function (e) {
            $('#hdnPrivatePublic').val($(e.target).attr('value'));

            $('.roundPrivate').css('width', '145px');
            $('.roundPublic').css('width', '114px');
            $('ul.om').addClass('swapImg_1_Approval').removeClass('swapImg_2_Approval');
            $("#idPrivateMessage").show();
            $("#idPublicMessage").hide();
        });

        $('#roundPublic').click(function (e) {
            $('#hdnPrivatePublic').val($(e.target).attr('value'));

            $('.roundPrivate').css('width', '114px');
            $('.roundPublic').css('width', '145px');
            $('ul.om').addClass('swapImg_2_Approval').removeClass('swapImg_1_Approval');
            $("#idPrivateMessage").hide();
            $("#idPublicMessage").show();
        });

        /* Set jquery DatePicker to all dates */
        setTimeout(function () { }, 5000);

        $('#hdnNewOtherIdeas').val("New Idea");
        $('.nav-pills').on('click', function (e) {
            var tabNewOther = e.target;

            tabNewOther = $(e.target).attr('value');

            $('#hdnNewOtherIdeas').val(tabNewOther);

            if (tabNewOther == "New Idea") {
                $('#LoadAllNewIdeas').show();

                if (NewIdeaLoadedData != null && IsNewIdeasdataloaded == true) {
                    $(".paginationjs").pagination('destroy');
                    if (NewIdeaLoadedData.length > 0) {
                        $('.paginationjs').pagination({
                            dataSource: generateData(NewIdeaLoadedData.length, NewIdeaLoadedData),
                            pageSize: 5,
                            showPageNumbers: false,
                            showNavigator: true,
                            callback: function (data, pagination) {
                                var pgNumber = pagination.pageNumber;
                                var dtLen = NewIdeaLoadedData.length;
                                if (dtLen < 6) {
                                    $('.paginationjs li').hide();
                                }
                                if (pgNumber == pagination.totalPage) {
                                    $('.paginationjs li:last').hide();
                                }
                                if (pgNumber == 1) {
                                    $('.paginationjs li:first').hide();
                                }
                                $("<p class='pgNumber'>" + pgNumber + "</p>").insertAfter($('.paginationjs li:first'));
                                $("#NewIdeasTable").html(data);

                                $('.paginationjs-nav').hide();
                            }
                        })
                    }
                    else {
                        $('.paginationjs ').hide();
                    }
                }
                else {
                    $(".paginationjs").pagination('destroy');
                    GetNewIdeas();
                    MyNewIdeas();
                    ExpandCollapse();
                }
            }
            else if (tabNewOther == "Other Idea") {

                $('#LoadAllNewIdeas').hide();
                
                var approvalDetails = new Array();
                approvalDetails = GetAllApprovalDetails(approvalDetails);
                var i, len;
                len = approvalDetails.length;

                for (i = 0, len; i < len; i++) {
                    if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                        checkL3 = "exists";
                    }
                }

                if ((PrimaryVerticalName != "Technology SSC" || PrimaryVerticalName != "TSSI - Networks") && (!checkL3)) {
                    //$("#list_CategoryOther").hide();
                    //$("#list_Status").hide();
                    //$("#list_PendingWith").hide();
                    $(".filter-hide").hide();
                }
                else {
                    $(".ideastatus-hide").hide();
                    $(".filter-hide").show();
                }

                $(".paginationjs").pagination('destroy');
                $("#OtherIdeasTable").empty();
                ExpandCollapse();

                $("#fromDateOther").val('');
                $("#toDateOther").val('');
            }
        });



        /* Show Hide division(Approve, Rejected, Rework etc.) on popup window */
        $('.radio-inline').on('click', function () {
            var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });


            var status = $('#popupStatus input:radio:checked').val();

            var hdnIdeaID = $('#hdnIdeaID').val();
            var hdnIdeaStatus = $('#hdnIdeaStatus').val();


            if (status == "Approve") {
                GetAllImprovementLever();
                GetAllImplementationEfforts();
                GetAllOpportunityType();

                if (hdnIdeaStatus == "Rework from F1" || hdnIdeaStatus == "Rework from F2" || hdnIdeaStatus == "Rework from F3") {
                    $("#divL1Approval").hide();
                    $("#divL2Approval").hide();
                    $("#divCICoreFinancialApproval").show();
                    GetAndSetIdeasByIDForReworkFromFinacial(hdnIdeaID);
                }
                else if (hdnIdeaStatus.indexOf("L1") >= 0) {
                    $("#divL1Approval").show();
                    $("#divL2Approval").hide();
                    $("#divCICoreFinancialApproval").hide();
                }
                else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                    $("#divL2Approval").show();
                    $("#divL1Approval").hide();
                    $("#divCICoreFinancialApproval").hide();

                    GetAndSetIdeasByIDForL2(hdnIdeaID);

                }
                else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                    $("#divL1Approval").hide();
                    $("#divL2Approval").hide();
                    $("#divCICoreFinancialApproval").show();
                    $("#btnCalculate").prop('disabled', true);

                    ClearAllL3FinancialControls();
                    GetAndSetIdeasByIDForL3(hdnIdeaID);

                    document.getElementById("EffortsSaved").disabled = true;

                    document.getElementById("list_OpportunityType").disabled = true;
                    document.getElementById("dtActualDateOfCompletion").disabled = true;
                    document.getElementById("HardTotalBenefits").disabled = true;
                    document.getElementById("PartnerTotalBenefits").disabled = true;

                }
                else if (hdnIdeaStatus.indexOf("F1") >= 0 || hdnIdeaStatus.indexOf("F2") >= 0 || hdnIdeaStatus.indexOf("F3") >= 0) {
                    $("#divL1Approval").hide();
                    $("#divL2Approval").hide();
                    $("#divCICoreFinancialApproval").show();

                    ClearAllL3FinancialControls();
                    GetAndSetIdeasByIDForFinancial(hdnIdeaID);
                    DisabledAllL3FinancialControls();

                }
            }
            else if (status == "Reject") {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").hide();
            }
            else if (status == "Rework") {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").hide();
            }
            else if (status == "On Hold") {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").hide();
            }
        });

        $('input[name="chkcheckbox"]').click(function (e) {
            if (($(this).is(":not(:checked)") && $(e.target).attr('value') == "Hard") && ($(this).is(":not(:checked)") && $(e.target).attr('value') == "Soft") && ($(this).is(":not(:checked)") && $(e.target).attr('value') == "Partner")) {
                $("#btnCalculate").prop('disabled', true);
            }
            else if ($(this).is(":checked") && $(e.target).attr('value') == "Hard") {
                document.getElementById("HardTotalBenefits").disabled = false;
                $("#btnCalculate").prop('disabled', false);
            }
            else if ($(this).is(":not(:checked)") && $(e.target).attr('value') == "Hard") {
                $("#finHardBenefitSaved").val('');
                $("#HardTotalBenefits").val('');
                document.getElementById("HardTotalBenefits").disabled = true;
            }
            else if ($(this).is(":checked") && $(e.target).attr('value') == "Soft") {
                document.getElementById("EffortsSaved").disabled = false;
                document.getElementById("PerhourEurocost").disabled = false;
                document.getElementById("list_OpportunityType").disabled = false;
                document.getElementById("dtActualDateOfCompletion").disabled = false;
                $("#btnCalculate").prop('disabled', false);
            }
            else if ($(this).is(":not(:checked)") && $(e.target).attr('value') == "Soft") {
                $("#monthOtherBenefitSaved").val('');
                $("#EffortsSaved").val('');
                $("#PerhourEurocost").val('');
                $("#dtActualDateOfCompletion").val('');
                GetAllOpportunityType();

                $("#finBenefitPeriod").val('');
                $("#finSoftBenefitSaved").val('');
                $("#finHardBenefitSaved").val('');
                $("#finTotalBenefits").val('');
                $("#monthBenefitPeriod").val('');

                $("#monthSoftBenefitSaved").val('');
                $("#monthHardBenefitSaved").val('');
                $("#monthTotalBenefits").val('');

                $("#monthHoursSavedInYear").val('');
                $("#monthFTESaved").val('');
                $("#monthHeadCountSaved").val('');

                document.getElementById("EffortsSaved").disabled = true;
                document.getElementById("PerhourEurocost").disabled = true;
                document.getElementById("list_OpportunityType").disabled = false;
                document.getElementById("dtActualDateOfCompletion").disabled = false;
            }
            else if ($(this).is(":checked") && $(e.target).attr('value') == "Partner") {
                document.getElementById("PartnerTotalBenefits").disabled = false;
                $("#btnCalculate").prop('disabled', false);
            }
            else if ($(this).is(":not(:checked)") && $(e.target).attr('value') == "Partner") {
                $("#PartnerTotalBenefits").val('');
                document.getElementById("PartnerTotalBenefits").disabled = true;
            }
        });

    });

    function getUPValue(x, p) {
        var thisValue = $(x).SPFilterNode("PropertyData").filter(function () {
            return $(this).find("Name").text() == p;
        }).find("Values").text();
        return thisValue;
    }

    /* Calculation On Efforts Saved */
    function CalculationOnEffortsSaved() {
        $("#monthHoursSavedInYear").val($("#EffortsSaved").val() * 12);

        $("#monthHeadCountSaved").val(($("#monthHoursSavedInYear").val() / 1680).toFixed(2));

        $("#monthFTESaved").val((12 * $("#monthHeadCountSaved").val()).toFixed(2));
    }

    /* Calculation Per Hour Cost */
    function CalculationOnPerHourCost() {
        var EffortsSaved = $("#EffortsSaved").val();
        if (EffortsSaved != '') {
            var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();

            var actualDate = $("#dtActualDateOfCompletion").val().split(" ")[0];
            actualDate = actualDate + " 00:00:00";
            actualDate = new Date(actualDate);

            //get current date
            var today = new Date();
            //get current month
            var curMonth = today.getMonth();
            var fiscalYr = "";
            if (curMonth > 3) {
                var nextYr2 = today.getFullYear().toString();
                fiscalYr = (today.getFullYear() - 1).toString();
            }
            else {
                var nextYr1 = (today.getFullYear() + 1).toString();
                fiscalYr = today.getFullYear().toString();
            }

            currentFinacialYear = "03/31/" + fiscalYr + " 00:00:00";
            currentFinacialYear = new Date(currentFinacialYear);

            var date1 = new Date(actualDate);//Remember, months are 0 based in JS
            var date2 = new Date(currentFinacialYear);
            var year1 = date1.getFullYear();
            var year2 = date2.getFullYear();
            var month1 = date1.getMonth();
            var month2 = date2.getMonth();
            var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;

            var numberOfMonthDays;

            if (numberOfMonths == 0) {

                var numberOfDays = (currentFinacialYear - actualDate) / (60 * 60 * 24 * 1000);
                numberOfMonthDays = "0." + numberOfDays;
            }
            else {
                var firstDayNexMonth = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 1);
                var lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);
                var numberOfDays = (lastDay - actualDate) / (60 * 60 * 24 * 1000);

                var date1 = new Date(firstDayNexMonth);//Remember, months are 0 based in JS
                var date2 = new Date(currentFinacialYear);
                var year1 = date1.getFullYear();
                var year2 = date2.getFullYear();
                var month1 = date1.getMonth();
                var month2 = date2.getMonth();
                var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;


                numberOfMonthDays = numberOfMonths + "." + numberOfDays;
            }

            if (numberOfMonthDays > 12) {
                numberOfMonthDays = 12;
            }

            /* Financial */
            $("#finBenefitPeriod").val(numberOfMonthDays);
            $("#finSoftBenefitSaved").val($("#EffortsSaved").val() * $("#PerhourEurocost").val() * numberOfMonthDays);

            /* 12 month */
            $("#monthBenefitPeriod").val(12);
            $("#monthSoftBenefitSaved").val($("#monthBenefitPeriod").val() * $("#PerhourEurocost").val() * $("#EffortsSaved").val());


        }
        else {
            $("#valEffortsSaved").show();
            $("#valEffortsSaved").text("Please enter Efforts Saved(Hrs/month).");
            //alert("Please enter Efforts Saved(Hrs/month).");
        }
    }

    /* All Calculations */
    function AllCalculations() {
        if (validateAllCalculationsFields()) {

            if ($("#EffortsSaved").val() == '') {
                $("#monthHoursSavedInYear").val(0);
            }
            else {
                $("#monthHoursSavedInYear").val($("#EffortsSaved").val() * 12);
            }

            if ($("#monthHoursSavedInYear").val() == '0') {
                $("#monthHeadCountSaved").val(0);
            }
            else {
                $("#monthHeadCountSaved").val(($("#monthHoursSavedInYear").val() / 1680).toFixed(2));
            }

            if ($("#monthHeadCountSaved").val() == '0') {
                $("#monthFTESaved").val(0);
            }
            else {
                $("#monthFTESaved").val((12 * $("#monthHeadCountSaved").val()).toFixed(2));
            }

            if ($("#EffortsSaved").val() != '' && $("#HardTotalBenefits").val() != '') {
                var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
                var actualDate = $("#dtActualDateOfCompletion").val().split(" ")[0];
                actualDate = actualDate + " 00:00:00";
                actualDate = new Date(actualDate);

                //get current date
                var today = new Date();
                //get current month
                var curMonth = today.getMonth() + 1;
                var fiscalYr = "";
                if (curMonth >= 3) {
                    fiscalYr = (today.getFullYear() + 1).toString();

                }
                else {

                    fiscalYr = (today.getFullYear() - 1).toString();
                }

                currentFinacialYear = "03/31/" + fiscalYr + " 00:00:00";
                currentFinacialYear = new Date(currentFinacialYear);

                var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                var date2 = new Date(currentFinacialYear);
                var year1 = date1.getFullYear();
                var year2 = date2.getFullYear();
                var month1 = date1.getMonth();
                var month2 = date2.getMonth();
                var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;

                var numberOfMonthDays;

                if (numberOfMonths == 0) {

                    var numberOfDays = (currentFinacialYear - actualDate) / (60 * 60 * 24 * 1000);
                    numberOfDays = numberOfDays / 30;
                    numberOfDays = numberOfDays.toFixed(1);
                    numberOfMonthDays = numberOfDays;
                }
                else {
                    var firstDayNexMonth = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 1);
                    var lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);
                    var numberOfDays = (lastDay - actualDate) / (60 * 60 * 24 * 1000);

                    numberOfDays = numberOfDays / 30;
                    numberOfDays = numberOfDays.toFixed(1);
                    numberOfDays = numberOfDays.split('.');
                    numberOfDays = numberOfDays[1];

                    var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                    var date2 = new Date(currentFinacialYear);
                    var year1 = date1.getFullYear();
                    var year2 = date2.getFullYear();
                    var month1 = date1.getMonth();
                    var month2 = date2.getMonth();
                    var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;					

                    numberOfMonthDays = numberOfMonths + "." + numberOfDays;
                }

                if (numberOfMonthDays > 12) {
                    numberOfMonthDays = 12;
                }

                /* Financial */
                $("#finBenefitPeriod").val(numberOfMonthDays);
                $("#finSoftBenefitSaved").val(($("#EffortsSaved").val() * $("#PerhourEurocost").val() * numberOfMonthDays).toFixed(2));

                var finTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#finSoftBenefitSaved").val())) - parseFloat($("#finHardBenefitSaved").val());
                $("#finTotalBenefits").val(finTotalBenefits.toFixed(2));

                /* 12 month  monthHardBenefitSaved */
                $("#monthBenefitPeriod").val(12);
                $("#monthSoftBenefitSaved").val(($("#monthBenefitPeriod").val() * $("#PerhourEurocost").val() * $("#EffortsSaved").val()).toFixed(2));

                var monthTotalBenefits = (parseInt($("#HardTotalBenefits").val()) + parseInt($("#monthSoftBenefitSaved").val()) + parseInt($("#monthOtherBenefitSaved").val()) - parseFloat($("#finHardBenefitSaved").val()));
                $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

                var monthHardBenefitSaved = parseFloat($("#monthSoftBenefitSaved").val()) - parseFloat($("#finSoftBenefitSaved").val());
                $("#monthHardBenefitSaved").val(monthHardBenefitSaved.toFixed(2));
            }
            else if ($("#HardTotalBenefits").val() != '') {
                $("#monthBenefitPeriod").val(12);
                $("#finBenefitPeriod").val(0);
                $("#finSoftBenefitSaved").val(0);
                $("#monthSoftBenefitSaved").val(0);
                $("#monthHardBenefitSaved").val(0);
                if ($("#monthOtherBenefitSaved").val() == '')
                    $("#monthOtherBenefitSaved").val(0);

                var finTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#finSoftBenefitSaved").val())) - parseFloat($("#finHardBenefitSaved").val());
                $("#finTotalBenefits").val(finTotalBenefits.toFixed(2));

                var monthTotalBenefits = (parseFloat($("#finTotalBenefits").val()) + parseFloat($("#monthOtherBenefitSaved").val()));
                $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

                // var monthHardBenefitSaved = parseFloat($("#monthTotalBenefits").val()) - parseFloat($("#finTotalBenefits").val());
                $("#monthHardBenefitSaved").val(0);
            }
            else if ($("#EffortsSaved").val() != '') {
                $("#finHardBenefitSaved").val(0);
                $("#HardTotalBenefits").val(0);
                $("#finTotalBenefits").val(0);

                var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
                var actualDate = $("#dtActualDateOfCompletion").val().split(" ")[0];
                actualDate = actualDate + " 00:00:00";
                actualDate = new Date(actualDate);

                //get current date
                var today = new Date();
                //get current month
                var curMonth = today.getMonth() + 1;
                var fiscalYr = "";
                if (curMonth >= 3) {
                    fiscalYr = (today.getFullYear() + 1).toString();

                }
                else {

                    fiscalYr = (today.getFullYear() - 1).toString();
                }

                currentFinacialYear = "03/31/" + fiscalYr + " 00:00:00";
                currentFinacialYear = new Date(currentFinacialYear);

                var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                var date2 = new Date(currentFinacialYear);
                var year1 = date1.getFullYear();
                var year2 = date2.getFullYear();
                var month1 = date1.getMonth();
                var month2 = date2.getMonth();
                var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;


                var numberOfMonthDays;

                if (numberOfMonths == 0) {

                    var numberOfDays = (currentFinacialYear - actualDate) / (60 * 60 * 24 * 1000);
                    numberOfDays = numberOfDays / 30;
                    numberOfDays = numberOfDays.toFixed(1);
                    numberOfMonthDays = numberOfDays;
                }
                else {
                    var firstDayNexMonth = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 1);
                    var lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);
                    var numberOfDays = (lastDay - actualDate) / (60 * 60 * 24 * 1000);

                    numberOfDays = numberOfDays / 30;
                    numberOfDays = numberOfDays.toFixed(1);
                    numberOfDays = numberOfDays.split('.');
                    numberOfDays = numberOfDays[1];

                    var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                    var date2 = new Date(currentFinacialYear);
                    var year1 = date1.getFullYear();
                    var year2 = date2.getFullYear();
                    var month1 = date1.getMonth();
                    var month2 = date2.getMonth();
                    var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;


                    numberOfMonthDays = numberOfMonths + "." + numberOfDays;
                }

                if (numberOfMonthDays > 12) {
                    numberOfMonthDays = 12;
                }

                /* Financial */
                $("#finBenefitPeriod").val(numberOfMonthDays);
                $("#finSoftBenefitSaved").val(($("#EffortsSaved").val() * $("#PerhourEurocost").val() * numberOfMonthDays).toFixed(2));

                // finTotalBenefits
                /* 12 month */
                $("#monthBenefitPeriod").val(12);
                $("#monthSoftBenefitSaved").val(($("#monthBenefitPeriod").val() * $("#PerhourEurocost").val() * $("#EffortsSaved").val()).toFixed(2));

                var monthTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#monthSoftBenefitSaved").val()) + parseFloat($("#monthOtherBenefitSaved").val()));
                $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

                var monthHardBenefitSaved = parseFloat($("#monthSoftBenefitSaved").val()) - parseFloat($("#finSoftBenefitSaved").val());
                $("#monthHardBenefitSaved").val(monthHardBenefitSaved.toFixed(2));
            }

            var selCatBenValue = $('#list_CategoryBenefits :selected').text();
            if (selCatBenValue == "Recurring") {
                var exitRunRateValue = parseFloat($("#finTotalBenefits").val()) + parseFloat($("#monthHardBenefitSaved").val());
                $("#exitRunRate").val(exitRunRateValue.toFixed(2));
            }
            else {
                $("#exitRunRate").val(0);
                $("#monthHardBenefitSaved").val(0);
            }

        }
    }

    /* All Calculations On Submit*/
    function AllCalculationsOnSubmit() {
        if ($("#EffortsSaved").val() == '') {
            $("#monthHoursSavedInYear").val(0);
        }
        else {
            $("#monthHoursSavedInYear").val($("#EffortsSaved").val() * 12);
        }

        if ($("#monthHoursSavedInYear").val() == '0') {
            $("#monthHeadCountSaved").val(0);
        }
        else {
            $("#monthHeadCountSaved").val(($("#monthHoursSavedInYear").val() / 1680).toFixed(2));
        }

        if ($("#monthHeadCountSaved").val() == '0') {
            $("#monthFTESaved").val(0);
        }
        else {
            $("#monthFTESaved").val((12 * $("#monthHeadCountSaved").val()).toFixed(2));
        }

        if ($("#EffortsSaved").val() != '' && $("#HardTotalBenefits").val() != '') {
            var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
            var actualDate = $("#dtActualDateOfCompletion").val().split(" ")[0];
            actualDate = actualDate + " 00:00:00";
            actualDate = new Date(actualDate);

            //get current date
            var today = new Date();
            //get current month
            var curMonth = today.getMonth() + 1;
            var fiscalYr = "";
            if (curMonth >= 3) {
                fiscalYr = (today.getFullYear() + 1).toString();

            }
            else {

                fiscalYr = (today.getFullYear() - 1).toString();
            }

            currentFinacialYear = "03/31/" + fiscalYr + " 00:00:00";
            currentFinacialYear = new Date(currentFinacialYear);

            var date1 = new Date(actualDate);//Remember, months are 0 based in JS
            var date2 = new Date(currentFinacialYear);
            var year1 = date1.getFullYear();
            var year2 = date2.getFullYear();
            var month1 = date1.getMonth();
            var month2 = date2.getMonth();
            var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;

            var numberOfMonthDays;

            if (numberOfMonths == 0) {

                var numberOfDays = (currentFinacialYear - actualDate) / (60 * 60 * 24 * 1000);
                numberOfDays = numberOfDays / 30;
                numberOfDays = numberOfDays.toFixed(1);
                numberOfMonthDays = numberOfDays;
            }
            else {
                var firstDayNexMonth = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 1);
                var lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);
                var numberOfDays = (lastDay - actualDate) / (60 * 60 * 24 * 1000);

                numberOfDays = numberOfDays / 30;
                numberOfDays = numberOfDays.toFixed(1);
                numberOfDays = numberOfDays.split('.');
                numberOfDays = numberOfDays[1];

                var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                var date2 = new Date(currentFinacialYear);
                var year1 = date1.getFullYear();
                var year2 = date2.getFullYear();
                var month1 = date1.getMonth();
                var month2 = date2.getMonth();
                var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;					

                numberOfMonthDays = numberOfMonths + "." + numberOfDays;
            }

            if (numberOfMonthDays > 12) {
                numberOfMonthDays = 12;
            }

            /* Financial */
            $("#finBenefitPeriod").val(numberOfMonthDays);
            $("#finSoftBenefitSaved").val(($("#EffortsSaved").val() * $("#PerhourEurocost").val() * numberOfMonthDays).toFixed(2));

            var finTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#finSoftBenefitSaved").val())) - parseFloat($("#finHardBenefitSaved").val());
            $("#finTotalBenefits").val(finTotalBenefits.toFixed(2));

            /* 12 month  monthHardBenefitSaved */
            $("#monthBenefitPeriod").val(12);
            $("#monthSoftBenefitSaved").val(($("#monthBenefitPeriod").val() * $("#PerhourEurocost").val() * $("#EffortsSaved").val()).toFixed(2));

            var monthTotalBenefits = (parseInt($("#HardTotalBenefits").val()) + parseInt($("#monthSoftBenefitSaved").val()) + parseInt($("#monthOtherBenefitSaved").val()) - parseFloat($("#finHardBenefitSaved").val()));
            $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

            var monthHardBenefitSaved = parseFloat($("#monthSoftBenefitSaved").val()) - parseFloat($("#finSoftBenefitSaved").val());
            $("#monthHardBenefitSaved").val(monthHardBenefitSaved.toFixed(2));
        }
        else if ($("#HardTotalBenefits").val() != '') {
            $("#monthBenefitPeriod").val(12);
            $("#finBenefitPeriod").val(0);
            $("#finSoftBenefitSaved").val(0);
            $("#monthSoftBenefitSaved").val(0);
            $("#monthHardBenefitSaved").val(0);
            if ($("#monthOtherBenefitSaved").val() == '')
                $("#monthOtherBenefitSaved").val(0);

            var finTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#finSoftBenefitSaved").val())) - parseFloat($("#finHardBenefitSaved").val());
            $("#finTotalBenefits").val(finTotalBenefits.toFixed(2));

            var monthTotalBenefits = (parseFloat($("#finTotalBenefits").val()) + parseFloat($("#monthOtherBenefitSaved").val()));
            $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

            //var monthHardBenefitSaved = parseFloat($("#monthTotalBenefits").val()) - parseFloat($("#finTotalBenefits").val());
            $("#monthHardBenefitSaved").val(0);
        }
        else if ($("#EffortsSaved").val() != '') {
            $("#finHardBenefitSaved").val(0);
            $("#HardTotalBenefits").val(0);
            $("#finTotalBenefits").val(0);

            var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
            var actualDate = $("#dtActualDateOfCompletion").val().split(" ")[0];
            actualDate = actualDate + " 00:00:00";
            actualDate = new Date(actualDate);

            //get current date
            var today = new Date();
            //get current month
            var curMonth = today.getMonth() + 1;
            var fiscalYr = "";
            if (curMonth >= 3) {
                fiscalYr = (today.getFullYear() + 1).toString();

            }
            else {

                fiscalYr = (today.getFullYear() - 1).toString();
            }

            currentFinacialYear = "03/31/" + fiscalYr + " 00:00:00";
            currentFinacialYear = new Date(currentFinacialYear);

            var date1 = new Date(actualDate);//Remember, months are 0 based in JS
            var date2 = new Date(currentFinacialYear);
            var year1 = date1.getFullYear();
            var year2 = date2.getFullYear();
            var month1 = date1.getMonth();
            var month2 = date2.getMonth();
            var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;

            var numberOfMonthDays;

            if (numberOfMonths == 0) {

                var numberOfDays = (currentFinacialYear - actualDate) / (60 * 60 * 24 * 1000);
                numberOfDays = numberOfDays / 30;
                numberOfDays = numberOfDays.toFixed(1);
                numberOfMonthDays = numberOfDays;
            }
            else {
                var firstDayNexMonth = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 1);
                var lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);
                var numberOfDays = (lastDay - actualDate) / (60 * 60 * 24 * 1000);

                numberOfDays = numberOfDays / 30;
                numberOfDays = numberOfDays.toFixed(1);
                numberOfDays = numberOfDays.split('.');
                numberOfDays = numberOfDays[1];

                var date1 = new Date(actualDate);//Remember, months are 0 based in JS
                var date2 = new Date(currentFinacialYear);
                var year1 = date1.getFullYear();
                var year2 = date2.getFullYear();
                var month1 = date1.getMonth();
                var month2 = date2.getMonth();
                var numberOfMonths = numberOfMonths = (year2 - year1) * 12 + (month2 - month1); //(year2 - year1) * 12 + (month2 - month1) + 1;


                numberOfMonthDays = numberOfMonths + "." + numberOfDays;
            }

            if (numberOfMonthDays > 12) {
                numberOfMonthDays = 12;
            }

            /* Financial */
            $("#finBenefitPeriod").val(numberOfMonthDays);
            $("#finSoftBenefitSaved").val(($("#EffortsSaved").val() * $("#PerhourEurocost").val() * numberOfMonthDays).toFixed(2));

            finTotalBenefits
            /* 12 month */
            $("#monthBenefitPeriod").val(12);
            $("#monthSoftBenefitSaved").val(($("#monthBenefitPeriod").val() * $("#PerhourEurocost").val() * $("#EffortsSaved").val()).toFixed(2));

            var monthTotalBenefits = (parseFloat($("#HardTotalBenefits").val()) + parseFloat($("#monthSoftBenefitSaved").val()) + parseFloat($("#monthOtherBenefitSaved").val()));
            $("#monthTotalBenefits").val(monthTotalBenefits.toFixed(2));

            var monthHardBenefitSaved = parseFloat($("#monthSoftBenefitSaved").val()) - parseFloat($("#finSoftBenefitSaved").val());
            $("#monthHardBenefitSaved").val(monthHardBenefitSaved.toFixed(2));
        }
        var selCatBenValue = $('#list_CategoryBenefits :selected').text();
        if (selCatBenValue == "Recurring") {
            var exitRunRateValue = parseFloat($("#finTotalBenefits").val()) + parseFloat($("#monthHardBenefitSaved").val());
            $("#exitRunRate").val(exitRunRateValue.toFixed(2));
        }
        else {
            $("#exitRunRate").val(0);
            $("#monthHardBenefitSaved").val(0);
        }
    }

    /* Check valid date format. */
    function isValidDate(date) {
        var matches = /^(\d{2})[-\/](\d{2})[-\/](\d{4})$/.exec(date);
        if (matches == null) return false;
        var d = matches[2];
        var m = matches[1] - 1;
        var y = matches[3];
        var composedDate = new Date(y, m, d);
        return composedDate.getDate() == d &&
				composedDate.getMonth() == m &&
				composedDate.getFullYear() == y;
    }

    /* Calculation Financial Hard Benefits */
    function CalculatiOnFinHardBenefits() {
        if ($("#finHardBenefitSaved").val() != '') {
            var z = (parseInt($("#finSoftBenefitSaved").val()) + parseInt($("#finHardBenefitSaved").val()));
            $("#finTotalBenefits").val(z);
        }
        else {
            $("#finTotalBenefits").val(0);
        }
    }

    /* Calculation 12 Month Hard Benefits */
    function CalculatiOnMonthHardBenefits() {
        if ($("#monthSoftBenefitSaved").val() != '') {
            var z = (parseInt($("#monthSoftBenefitSaved").val()) + parseInt($("#monthHardBenefitSaved").val()));
            $("#monthTotalBenefits").val(z);
        }
        else {
            $("#monthTotalBenefits").val(0);
        }
    }

    /* Convert to ISO Datetime */
    function ISODateString(d) {
        function pad(n) { return n < 10 ? '0' + n : n }
        return d.getUTCFullYear() + '-'
        + pad(d.getUTCMonth() + 1) + '-'
        + pad(d.getUTCDate() + 1) + 'T'
        + pad(d.getUTCHours()) + ':'
        + pad(d.getUTCMinutes()) + ':'
        + pad(d.getUTCSeconds()) + 'Z'
    }

    /* Convert to ISO Datetime for Action Date*/
    function ISODateStringActionDate(d) {
        function pad(n) { return n < 10 ? '0' + n : n }
        return d.getUTCFullYear() + '-'
        + pad(d.getUTCMonth() + 1) + '-'
        + pad(d.getUTCDate()) + 'T'
        + pad(d.getUTCHours()) + ':'
        + pad(d.getUTCMinutes()) + ':'
        + pad(d.getUTCSeconds()) + 'Z'
    }

    /* Get all Category */
    function GetAllCategory() {
        var sortedData = [];
        $("#list_IdeaCategory").empty();
        $("#list_IdeaCategory").append("<option value='Benefits'>Select Benefits</option>");
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "LeverDetails",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><OrderBy><FieldRef Name='Title' Ascending='true' /></OrderBy></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='ID' /><FieldRef Name='SubLever2' /></ViewFields>",
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    //CreateOption(document.getElementById("list_IdeaCategory"), $(this).attr("ows_SubLever2"), $(this).attr("ows_ID"));
                    sortedData.push({
                        text: $(this).attr("ows_SubLever2"),
                        value: $(this).attr("ows_ID")
                    });
                });
            }
        });

        sortedData.sort(SortByName);
        for (var i = 0; i < sortedData.length ; i++) {
            CreateOption(document.getElementById("list_IdeaCategory"), sortedData[i].text, sortedData[i].value);
        }
    }
    function SortByName(a, b) {
        var aName = a.text.toLowerCase();
        var bName = b.text.toLowerCase();
        return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
    }

    function GetPrimaryServiceLineAndPrimaryServiceLine() {
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='PrimaryVerticalName' /><FieldRef Name='PrimaryServiceLine' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    PrimaryVerticalName = $(this).attr("ows_PrimaryVerticalName");
                    PrimaryServiceLineName = $(this).attr("ows_PrimaryServiceLine");
                });
            }

        });
    }

    function GetAllVerticalsandServiceLines() {

        if (NewIdeasItemCount == true) {
            $("#UserVertical").empty();
            $("#list_CategoryOther").empty();
        }


        var PrimaryVerticalName;
        var UserVerticalArray = [];
        var UserServiceLineArray = [];
        var PrimaryVerticalNameArray = [];
        var PrimaryServiceLineNameArray = [];

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>",

            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='ServiceLine' /><FieldRef Name='PrimaryVerticalName' /><FieldRef Name='PrimaryServiceLine' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var VerticalName = $(this).attr("ows_VerticalName");
                    var ServiceLine = $(this).attr("ows_ServiceLine");
                    PrimaryVerticalName = $(this).attr("ows_PrimaryVerticalName");
                    var PrimaryServiceLineName = $(this).attr("ows_PrimaryServiceLine");
                    if (ActionClicked == "true") {
                        PrimaryVerticalNameArray.push(ActionClickedVerticalName);
                        PrimaryServiceLineNameArray.push(ActionClickedServiceLine);
                    }
                    else {
                        PrimaryVerticalNameArray.push(PrimaryVerticalName);
                        PrimaryServiceLineNameArray.push(PrimaryServiceLineName);
                    }

                    UserVerticalArray.push(VerticalName);
                    UserServiceLineArray.push(ServiceLine);
                });
            }

        });

        newarrayPrimaryVerticalName = PrimaryVerticalNameArray.concat(UserVerticalArray);
        newarrayPrimaryServiceLineName = PrimaryServiceLineNameArray.concat(UserServiceLineArray);
        // newarrayVertical = jQuery.unique(newarrayPrimaryVerticalName);
        // newarrayServiceLine = jQuery.unique(newarrayPrimaryServiceLineName);

        // var unique = [];
        for (var i = 0 ; i < newarrayPrimaryVerticalName.length ; ++i) {
            if (newarrayVertical.indexOf(newarrayPrimaryVerticalName[i]) == -1)
                newarrayVertical.push(newarrayPrimaryVerticalName[i]);
        }

        for (var i = 0 ; i < newarrayPrimaryServiceLineName.length ; ++i) {
            if (newarrayServiceLine.indexOf(newarrayPrimaryServiceLineName[i]) == -1)
                newarrayServiceLine.push(newarrayPrimaryServiceLineName[i]);
        }


        for (var i = 0; i < newarrayVertical.length; i++) {
            $("#UserVertical").append("<option value='" + newarrayVertical[i] + "'>" + newarrayVertical[i] + "</option>");
            $("#list_CategoryOther").append("<option value='" + newarrayVertical[i] + "'>" + newarrayVertical[i] + "</option>");
        }

        $('#UserServiceLine option').remove();
        $('#list_Status option').remove();

        var UserVerticalArray = [];
        var UserServiceLineArray = [];
        var PrimaryVerticalNameArray = [];
        var PrimaryServiceLineNameArray = [];

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQuery: "<Query><Where><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='ServiceLine' /><FieldRef Name='PrimaryVerticalName' /><FieldRef Name='PrimaryServiceLine' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var VerticalName = $(this).attr("ows_VerticalName");
                    var ServiceLine = $(this).attr("ows_ServiceLine");
                    var PrimaryVerticalName = $(this).attr("ows_PrimaryVerticalName");
                    var PrimaryServiceLineName = $(this).attr("ows_PrimaryServiceLine");

                    if (ActionClicked == "true") {
                        PrimaryVerticalNameArray.push(ActionClickedVerticalName);
                        PrimaryServiceLineNameArray.push(ActionClickedServiceLine);
                    }
                    else {
                        PrimaryVerticalNameArray.push(PrimaryVerticalName);
                        PrimaryServiceLineNameArray.push(PrimaryServiceLineName);
                    }
                    UserVerticalArray.push(VerticalName);
                    UserServiceLineArray.push(ServiceLine);
                });
            }

        });

        newarrayPrimaryServiceLineName = PrimaryServiceLineNameArray.concat(UserServiceLineArray);

        //newarrayServiceLine = jQuery.unique(newarrayPrimaryServiceLineName);
        var newarrayServiceLineUnique = [];
        for (var i = 0 ; i < newarrayPrimaryServiceLineName.length ; ++i) {
            if (newarrayServiceLineUnique.indexOf(newarrayPrimaryServiceLineName[i]) == -1)
                newarrayServiceLineUnique.push(newarrayPrimaryServiceLineName[i]);
        }

        for (var i = 0; i < newarrayServiceLineUnique.length; i++) {
            $("#UserServiceLine").append("<option value='" + newarrayServiceLineUnique[i] + "'>" + newarrayServiceLineUnique[i] + "</option>");
            $("#list_Status").append("<option value='" + newarrayServiceLineUnique[i] + "'>" + newarrayServiceLineUnique[i] + "</option>");

        }


    }


    /* Get all Pending With */
    function GetAllPendingWith() {
        $("#list_PendingWith").empty();
        $("#list_PendingWith").prepend("<option value=''>All</option>").val('');

        var otherThanTSSC = ["Waiting for L1", "Waiting for L2", "Waiting for L3"];
        var onlyTSSC = ["Waiting for F1", "Waiting for F2", "Waiting for F3"];

        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {
            for (i = 0; i < onlyTSSC.length; i++) {
                CreateOption(document.getElementById("list_PendingWith"), onlyTSSC[i], onlyTSSC[i]);
            }
        }
        else {
            for (i = 0; i < otherThanTSSC.length; i++) {
                CreateOption(document.getElementById("list_PendingWith"), otherThanTSSC[i], otherThanTSSC[i]);
            }
        }
    }

    /* Bind dynamic Category for others */
    function CreateOption(dropDownList, text, value) {
        var opt = document.createElement('option');
        opt.value = value;
        opt.text = text;
        dropDownList.options.add(opt);
    }

    /* Fetch Approval Role by User Email */
    function GetApprovalRoleByEmail(userEMail) {	//alert(userEMail);
        var approverRole;
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEMail + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='Role' /></ViewFields>",


            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {

                    approverRole = $(this).attr("ows_Role");

                });
            }
        });

        return approverRole;
    }

    function RestrictCopyPaste() {
        var num = clipboardData.getData('Text')
        if (parseInt(num) != num)
            return false;
    }

    /* Validate all date fields */
    function validate(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\./;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    /* Validate Numeric values only */
    function isNumberKey(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\./;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }

    }

    function CheckDecimal(inputtxt) {
        var decimal = /[0-9]|\./;
        if (inputtxt.match(decimal)) {
            return true;
        }
        else {
            return false;
        }
    }

    /* Validate All Calculations Fields */
    function validateAllCalculationsFields() {
        var hdnIdeaStatus = $('#hdnIdeaStatus').val();
        var status = $('#popupStatus input:radio:checked').val();
        var val = false;
        if (status == "Approve") {
            if (hdnIdeaStatus.indexOf("L3") >= 0 || hdnIdeaStatus == "Rework from F1" || hdnIdeaStatus == "Rework from F2" || hdnIdeaStatus == "Rework from F3") {
                var CFBenefitTypes = '';
                $.each($("input[name='chkcheckbox']:checked"), function () {
                    val = false;

                    if ($(this).val() == 'Soft') {
                        var EffortsSaved = $("#EffortsSaved").val();
                        var PerhourEurocost = $("#PerhourEurocost").val();
                        var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
                        var monthOtherBenefitSaved = $("#monthOtherBenefitSaved").val();

                        if (EffortsSaved == '') {
                            $("#EffortsSaved").focus();

                            $("#errorEffortsSaved").show();
                            return false;
                        } else if (PerhourEurocost == '') {
                            $("#PerhourEurocost").focus();

                            $("#errorPerHourCost").show();
                            return false;
                        } else if (dtActualDateOfCompletion == '') {
                            $("#dtActualDateOfCompletion").focus();

                            $("#errorActualDateOfComp").show();
                            return false;
                        }
                        else if (!isValidDate(dtActualDateOfCompletion)) {
                            $("#dtActualDateOfCompletion").focus();
                            //alert("Actual Date Of Completion is not a date.");
                            $("#valdtActualDateOfCompletion").focus();
                            return false;
                        }
                        else if (monthOtherBenefitSaved == '') {
                            $("#monthOtherBenefitSaved").focus();

                            $("#errorOtherBenefits").show();
                            return false;
                        }

                    }
                    else if ($(this).val() == 'Hard') {
                        var HardTotalBenefits = $("#HardTotalBenefits").val();
                        if (HardTotalBenefits == '') {
                            $("#HardTotalBenefits").focus();

                            $("#errorTotalHardBenefits").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(HardTotalBenefits)) {
                                $("#HardTotalBenefits").focus();
                                $("#valHardTotalBenefits").show();
                                //alert("Please Enter valid data for Hard Total Benefits.");
                                return false;
                            }
                        }

                        var finHardBenefitSaved = $("#finHardBenefitSaved").val();
                        if (finHardBenefitSaved == '') {
                            $("#finHardBenefitSaved").focus();

                            $("#errorImplementation").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(finHardBenefitSaved)) {
                                $("#finHardBenefitSaved").focus();
                                $("#valfinHardBenefitSaved").show();
                                //alert("Please Enter valid data for Implementation Cost.");
                                return false;
                            }
                        }
                    }
                    else if ($(this).val() == 'Partner') {
                        var PartnerTotalBenefits = $("#PartnerTotalBenefits").val();

                        if (PartnerTotalBenefits == '') {
                            $("#PartnerTotalBenefits").focus();

                            $("#errorTotalPartnerBenefit").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(PartnerTotalBenefits)) {
                                $("#PartnerTotalBenefits").focus();
                                $("#valPartnerTotalBenefits").show();
                                //alert("Please Enter valid data for Partner Total Benefits.");
                                return false;
                            }
                        }
                        $("#errorTotalPartnerBenefit").hide();

                    }

                    val = true;

                });

                if (val) {
                    return true;
                }
            }
        }
    }


    /* Validate all fields */
    function validateAllFields() {
        //Added By Suman
        //NikhilD Commented below code
        //$("#vallist_CategoryL1ImprovementLever").hide();
        //NikhilD commented above code
        $("#vallist_CategoryL1OpportunityType").hide();
        $("#valCINonCI").hide();
        $("#valdtL1ExpectedDateCompletion").hide();
        //NikhilD Commented below code
        //$("#vallist_CategoryL2ImprovementLever").hide();
        //NikhilD Commented above code
        $("#vallist_CategoryL2ImplementationLevel").hide();
        $("#vallist_CategoryL2OpportunityType").hide();
        $("#valCINonCIL2").hide();
        $("#valtxt_L2EffortCostInvolved").hide();
        $("#valdtActualDateOfCompletion").hide();
        $("#valHardTotalBenefits").hide();
        $("#valPartnerTotalBenefits").hide();
        $("#valfinHardBenefitSaved").hide();
        $("#errorlist_OpportunityType").hide();


        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        /* Get current login users role by email id */

        var hdnIdeaStatus = $('#hdnIdeaStatus').val();
        var status = $('#popupStatus input:radio:checked').val();
        var val = false;

        if (status == "Approve") {
            if (hdnIdeaStatus.indexOf("L1") >= 0) {
                //Nikhild Commented below code
                //var list_CategoryL1ImprovementLever = $("#list_CategoryL1ImprovementLever").val();
                //if (list_CategoryL1ImprovementLever == '') {
                //    $("#list_CategoryL1ImprovementLever").focus();
                //    $("#vallist_CategoryL1ImprovementLever").show();
                //    //alert("Please Enter Category Improvement Lever.");
                //    return false;
                //}
                //Nikhild Commented above code

                var list_CategoryL1OpportunityType = $("#list_CategoryL1OpportunityType").val();
                if (list_CategoryL1OpportunityType == '') {
                    $("#list_CategoryL1OpportunityType").focus();
                    $("#vallist_CategoryL1OpportunityType").show();
                    //alert("Please Enter Category Opportunity Type.");
                    return false;
                }

                var list_CI_NonCI = $("#list_CI_NonCI").val();
                if (list_CI_NonCI == 'Select') {
                    $("#list_CI_NonCI").focus();
                    $("#valCINonCI").show();

                    return false;
                }

                var dtL1ExpectedDateCompletion = $("#dtL1ExpectedDateCompletion").val();
                if (dtL1ExpectedDateCompletion == '') {
                    $("#dtL1ExpectedDateCompletion").focus();
                    $("#valdtL1ExpectedDateCompletion").show();
                    //alert("Please Enter Expected Date Completion.");
                    return false;
                }

                val = true;
            }
            else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                //NikhilD commented below code
                //var list_CategoryL2ImprovementLever = $("#list_CategoryL2ImprovementLever").val();
                //if (list_CategoryL2ImprovementLever == '') {
                //    $("#list_CategoryL2ImprovementLever").focus();
                //    $("#vallist_CategoryL2ImprovementLever").show();
                //    //alert("Please Enter Category Improvement Lever.");
                //    return false;
                //}
                //NikhilD commented above code

                var list_CategoryL2ImplementationLevel = $("#list_CategoryL2ImplementationLevel").val();
                if (list_CategoryL2ImplementationLevel == '') {
                    $("#list_CategoryL2ImplementationLevel").focus();
                    $("#vallist_CategoryL2ImplementationLevel").show();
                    //alert("Please Enter Category Implementation Level.");
                    return false;
                }

                var list_CategoryL2OpportunityType = $("#list_CategoryL2OpportunityType").val();
                if (list_CategoryL2OpportunityType == '') {
                    $("#list_CategoryL2OpportunityType").focus();
                    $("#vallist_CategoryL2OpportunityType").show();

                    return false;
                }

                var list_CI_NonCI_L2 = $("#list_CI_NonCI_L2").val();
                if (list_CI_NonCI_L2 == 'Select') {
                    $("#list_CI_NonCI_L2").focus();
                    $("#valCINonCIL2").show();

                    return false;
                }




                var txt_L2EffortCostInvolved = $("#txt_L2EffortCostInvolved").val();
                if (txt_L2EffortCostInvolved == '') {
                    $("#txt_L2EffortCostInvolved").focus();
                    $("#valtxt_L2EffortCostInvolved").show();
                    //alert("Please Enter Effort Cost Involved.");
                    return false;
                }

                var dtL2ActualDateCompletion = $("#dtL2ActualDateCompletion").val();
                if (dtL2ActualDateCompletion == '') {
                    $("#dtL2ActualDateCompletion").focus();

                    $("#errorActualDateOfComp").show();
                    return false;
                }

                val = true;
            }
            else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                var count = 0;
                $.each($("input[name='chkcheckbox']"), function () {
                    if ($(this).is(":checked")) {
                        count = parseInt(count) + 1;
                    }
                });

                if (count == 0) {
                    //alert("Please select Benefit Types.");
                    $("#errorCFBenefitTypes").show();
                    return false;
                }
                else { $("#errorCFBenefitTypes").hide(); }

                var opportunityTypeL3 = $("#list_OpportunityType").val();
                if (opportunityTypeL3 == '') {
                    $("#list_OpportunityType").focus()
                    $("#errorlist_OpportunityType").show();
                    return false;
                }


                var CFBenefitTypes = '';
                $.each($("input[name='chkcheckbox']:checked"), function () {
                    val = false;

                    if ($(this).val() == 'Soft') {
                        var EffortsSaved = $("#EffortsSaved").val();
                        var PerhourEurocost = $("#PerhourEurocost").val();
                        var dtActualDateOfCompletion = $("#dtActualDateOfCompletion").val();
                        var monthOtherBenefitSaved = $("#monthOtherBenefitSaved").val();

                        if (EffortsSaved == '') {
                            $("#EffortsSaved").focus();

                            $("#errorEffortsSaved").show();
                            return false;
                        } else if (PerhourEurocost == '') {
                            $("#PerhourEurocost").focus();

                            $("#errorPerHourCost").show();
                            return false;
                        } else if (dtActualDateOfCompletion == '') {
                            $("#dtActualDateOfCompletion").focus();

                            $("#errorActualDateOfComp").show();
                            return false;
                        }
                        else if (!isValidDate(dtActualDateOfCompletion)) {
                            $("#dtActualDateOfCompletion").focus();
                            $("#valdtActualDateOfCompletion").show();
                            //alert("Actual Date Of Completion is not a date.");
                            return false;
                        }
                        else if (monthOtherBenefitSaved == '') {
                            $("#monthOtherBenefitSaved").focus();

                            $("#errorOtherBenefits").show();
                            return false;
                        }

                    }
                    else if ($(this).val() == 'Hard') {
                        var HardTotalBenefits = $("#HardTotalBenefits").val();
                        if (HardTotalBenefits == '') {
                            $("#HardTotalBenefits").focus();

                            $("#errorTotalHardBenefits").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(HardTotalBenefits)) {
                                $("#HardTotalBenefits").focus();
                                $("#valHardTotalBenefits").show();
                                //alert("Please Enter valid data for Hard Total Benefits.");
                                return false;
                            }
                        }

                        var finHardBenefitSaved = $("#finHardBenefitSaved").val();
                        if (finHardBenefitSaved == '') {
                            $("#finHardBenefitSaved").focus();

                            $("#errorImplementation").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(finHardBenefitSaved)) {
                                $("#finHardBenefitSaved").focus();
                                $("#valfinHardBenefitSaved").show();
                                //alert("Please Enter valid data for Implementation Cost.");
                                return false;
                            }
                        }
                    }
                    else if ($(this).val() == 'Partner') {
                        var PartnerTotalBenefits = $("#PartnerTotalBenefits").val();

                        if (PartnerTotalBenefits == '') {
                            $("#PartnerTotalBenefits").focus();

                            $("#errorTotalPartnerBenefit").show();
                            return false;
                        }
                        else {
                            if (!CheckDecimal(PartnerTotalBenefits)) {
                                $("#PartnerTotalBenefits").focus();
                                $("#valPartnerTotalBenefits").show();
                                //alert("Please Enter valid data for Partner Total Benefits.");
                                return false;
                            }
                        }

                        $("#errorTotalPartnerBenefit").hide();
                    }

                    val = true;

                });

            }
            else if (hdnIdeaStatus.indexOf("F1") >= 0 || hdnIdeaStatus.indexOf("F2") >= 0 || hdnIdeaStatus.indexOf("F3") >= 0) {
                val = true;
            }

            return val;

        }
    }

    /* Get New Ideas By Status And Role */
    function GetOtherIdeasByStatusAndRole(approvalDetails, leaderEmail) {
        var query;

        if (approvalDetails.length == 1) {
            var IdeaStatus = "OnHold from " + approvalDetails[0].split('\\')[2];
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
            else {
                query = "<Query><Where><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
        }

        if (approvalDetails.length == 2) {
            //var IdeaStatus = "Waiting for " + approvalDetails[i].split('-')[2];
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
            else {
                query = "<Query><Where><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }

        }

        if (approvalDetails.length == 3) {
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[2].split('\\')[2].indexOf("L3") >= 0)) {
                query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
            else {
                query = "<Query><Where><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
                query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
        }

        if (approvalDetails.length == 4) {
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
            query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
            query += "<And>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq></Or></Or></Or>";
            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
            query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
            query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
            query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }

        if (approvalDetails.length == 5) {

            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
            query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
            query += "<And>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[4].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or>";
            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
            query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
            query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
            query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }

        if (approvalDetails.length == 6) {
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq>";
            query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
            query += "<And>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
            query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[4].split('\\')[2] + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[5].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or></Or>";
            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + approvalDetails[0].split('\\')[3] + "</Value></Eq></And></And></And>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
            query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + approvalDetails[0].split('\\')[0] + "</Value></Eq></And></And></Or>";
            query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
            query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
            query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }



        return query;
    }

    /* Show Idea when Clicked in Take Action */
    function ShowOtherIdea(TakeActionDetails) {
        GetIdeasByIDApproval(TakeActionDetails);
    }


    /* Fetch Idea by Idea ID */
    function GetOnlyIdeasDetailsByID(TakeActionDetails) {
        var getText = "";
        IdeaStatus = TakeActionDetails.split('_')[0];
        IdeaID = TakeActionDetails.split('_')[1];
        RaisedBy = TakeActionDetails.split('_')[2];

        $('#hdnIdeaID').val(IdeaID);
        $('#hdnIdeaStatus').val(IdeaStatus);

        var ChallengeID = 0;
        $('#rdo_Approve').prop('checked', true);


        $("#divL1Approval").hide();
        $("#divL2Approval").hide();
        $("#divCICoreFinancialApproval").hide();

        $("#txtComments").val('');
        $("#txt_L1EffortCostInvolved").val('');
        $("#dtL1ExpectedDateCompletion").val('');

        Approveonclick();

        var method = "GetListItems";

        /*NikhilD commented below code*/
        //var ListName = "VIdea-" + fetchLocationName(locat);
        var ListName = "V-Ideas";
        var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $("#myOnlyIdeaContent").empty();
        $().SPServices
        ({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var id = $(this).attr("ows_ID");
                    var IdeaNumber = $(this).attr("ows_IdeaNumber");
                    var title = $(this).attr("ows_Title");
                    StatusComment = $(this).attr("ows_StatusComment");

                    var Categoryvalue = CheckUndefinedORNull($(this).attr("ows_IdeaLever"));
                    var Goalstatement = CheckUndefinedORNull($(this).attr("ows_GoalStatement"));
                    var Estimatedbenefits = CheckUndefinedORNull($(this).attr("ows_EstimatedBenefits"));
                    var problemstatement = CheckUndefinedORNull($(this).attr("ows_ProblemStatement"));
                    var IdeaAuth = $(this).attr("ows_Author");
                    var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");
                    ChallengeID = Math.round($(this).attr("ows_ChallengeID"));
                    var functionname = $(this).attr("ows_VIdeaType");
                    var attachments = [];
                    var divattach = '';
                    var thisurl = $().SPServices.SPGetCurrentSite() + "/Lists/VIdea/Attachments/" + id + "/";
                    var downloadurl = $().SPServices.SPGetCurrentSite() + "/_layouts/download.aspx?SourceUrl="
                    var RaisedBy = $(this).attr("ows_RaisedBy");
                    var ideaStatus = $(this).attr("ows_IdeaStatus");
                    var ideaServiceLine = CheckUndefinedORNull($(this).attr("ows_IdeaServiceLine"));
                    $('#hdnRaisedBy').val(RaisedBy);


                    if (!Categoryvalue) {
                        Categoryvalue = '';
                    }
                    if (!functionname) {
                        functionname = '';
                    }

                    var att = $(this).attr("ows_Attachments");
                    if (att != "0") {
                        attachments = att.split(";#");
                        for (var i = 0; i < attachments.length; i++) {
                            if (attachments[i]) {
                                attachments[i] = attachments[i].replace(",", "");

                                var filename = attachments[i].substring(attachments[i].lastIndexOf('/') + 1);

                                divattach += "<div><a href='" + downloadurl + attachments[i].replace(/ /g, "%20") + "'>" + filename + "</a></div>";
                            }
                        }
                    }

                    getText = "<div class='popupBigBox'> <div class='overflowHidden'> <button type='button' class='close' data-dismiss='modal'> <img src='/Group/thinkbox/Style library/Images/close_btn.png' /></button></div> <div class='dividerLine'> </div> <div class='popupSmBoxContent text-left' style='height: 300px; overflow-y: auto; overflow-x: hidden;'> <div class='overflowHidden'> <h1 class='col-md-6 col-xs-6 pull-left PNONE'>" + IdeaNumber + ":" + title + "</h1> <div class='right-pop-section pull-right'> <span>Function:" + functionname + "<br> Category:" + Categoryvalue + "<br> By: " + IdeaCreator + "<br> Idea Status: " + ideaStatus + "<br> Service Line: " + ideaServiceLine + "</span></div></div> <br><p> <b>Problem statment : </b> " + problemstatement + "</p><br> <p> <b>Goal statment : </b> " + Goalstatement + "</p> <br><p> <b>Estimated statment : </b> " + Estimatedbenefits + "</p> <br> <p> <div class='attchment-popup'> <div class='col-md-8 col-xs-8 PNONE'> <b>Attached Documents : </b> <br><div class='format'> " + divattach + "</div> </div> </div> </p> </div>";
                });
            }
        });

        $("#myOnlyIdeaContent").append(getText);
        $("#IdeaModalOnlyDetails").modal();
    }

    /* Fetch Idea by Idea ID */
    function GetIdeasByIDApproval(TakeActionDetails) {

        var getText = "";
        IdeaStatus = TakeActionDetails.split('_')[0];
        IdeaID = TakeActionDetails.split('_')[1];
        RaisedBy = TakeActionDetails.split('_')[2];

        if (IdeaStatus.indexOf("L3") >= 0 && RaisedBy.indexOf("Leader") >= 0) {
            var problemStatement = fetchProblemStatement(IdeaID);
            if (problemStatement) {
                $('#hdnIdeaID').val(IdeaID);
                $('#hdnIdeaStatus').val(IdeaStatus);

                var ChallengeID = 0;
                $('#rdo_Approve').prop('checked', true);



                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").hide();

                $("#txtComments").val('');
                $("#txt_L1EffortCostInvolved").val('');
                $("#dtL1ExpectedDateCompletion").val('');

                Approveonclick();

                var method = "GetListItems";

                var ListName = "V-Ideas";

                var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
                var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
                $("#myIdeaContent").empty();
                $().SPServices
                ({
                    operation: method,
                    async: false,

                    listName: ListName,
                    CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
                    CAMLViewFields: "<ViewFields Properties='True' />",
                    CAMLQuery: query,
                    completefunc: function (xData, Status) {
                        $(xData.responseXML).SPFilterNode("z:row").each(function () {
                            var id = $(this).attr("ows_ID");
                            var IdeaNumber = $(this).attr("ows_IdeaNumber");
                            var title = $(this).attr("ows_Title");
                            StatusComment = $(this).attr("ows_StatusComment");

                            var Categoryvalue = CheckUndefinedORNull($(this).attr("ows_IdeaLever"));
                            var Goalstatement = CheckUndefinedORNull($(this).attr("ows_GoalStatement"));
                            var Estimatedbenefits = CheckUndefinedORNull($(this).attr("ows_EstimatedBenefits"));
                            var problemstatement = CheckUndefinedORNull($(this).attr("ows_ProblemStatement"));
                            var IdeaAuth = $(this).attr("ows_Author");
                            var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");
                            ChallengeID = Math.round($(this).attr("ows_ChallengeID"));
                            var functionname = CheckUndefinedORNull($(this).attr("ows_VIdeaType"));
                            var attachments = [];
                            var divattach = '';
                            var thisurl = $().SPServices.SPGetCurrentSite() + "/Lists/VIdea/Attachments/" + id + "/";
                            var downloadurl = $().SPServices.SPGetCurrentSite() + "/_layouts/download.aspx?SourceUrl="
                            var RaisedBy = $(this).attr("ows_RaisedBy");
                            var ideaStatus = $(this).attr("ows_IdeaStatus");
                            var ideaServiceLine = CheckUndefinedORNull($(this).attr("ows_IdeaServiceLine"));
                            $('#hdnRaisedBy').val(RaisedBy);

                            if (!Categoryvalue) {
                                Categoryvalue = '';
                            }
                            if (!functionname) {
                                functionname = '';
                            }

                            var isPrivatePublic = $(this).attr("ows_IdeaScope");
                            $('#hdnPrivatePublic').val(isPrivatePublic);

                            var att = $(this).attr("ows_Attachments");
                            if (att != "0") {
                                attachments = att.split(";#");
                                for (var i = 0; i < attachments.length; i++) {
                                    if (attachments[i]) {
                                        attachments[i] = attachments[i].replace(",", "");
                                        var filename = attachments[i].substring(attachments[i].lastIndexOf('/') + 1);

                                        divattach += "<div><a href='" + downloadurl + attachments[i].replace(" ", "%20") + "'>" + filename + "</a></div>";
                                    }
                                }
                            }

                            if (isPrivatePublic == "Private") {
                                $('ul.om').addClass('swapImg_1_Approval').removeClass('swapImg_2_Approval');
                                $("#idPrivateMessage").show();
                                $("#idPublicMessage").hide();
                            }
                            else if (isPrivatePublic == "Public") {
                                $('ul.om').addClass('swapImg_2_Approval').removeClass('swapImg_1_Approval');
                                $("#idPrivateMessage").hide();
                                $("#idPublicMessage").show();
                            }

                            getText = "<div class='overflowHidden'> <h1 class='col-md-6 col-xs-6 pull-left PNONE'> " + IdeaNumber + " : " + title + "</h1> <div class='right-pop-section pull-right'> <span>Function:" + functionname + "<br> Category:" + Categoryvalue + "<br> By: " + IdeaCreator + "<br> Idea Status: " + ideaStatus + "<br> Service Line: " + ideaServiceLine + "</span></div> </div> <br> <p> <b>Problem statment : </b> " + problemstatement + "</p> <br><p> <b>Goal statment : </b> " + Goalstatement + "</p> <br><p> <b>Estimated statment : </b> " + Estimatedbenefits + "</p> <br><p> <div class='attchment-popup'> <div class='col-md-8 col-xs-8 PNONE'><br> <b>Attached Documents : </b> <br><div class='format'> " + divattach + "</div> </div> </div> </p>";
                        });
                    }
                });


                $("#myIdeaContent").append(getText);
                $("#IdeaModal").modal();
            }
            else {
                //var locationName = fetchLocationName(Location);
                var listid = GetListId("V-Ideas");
                //var locationName = locat;
                window.location.href = "/Group/thinkbox/Pages/AddIdeaDetails.aspx?IdeaListId=" + listid + "&IdeaID=" + IdeaID;
            }
        }
        else {
            $('#hdnIdeaID').val(IdeaID);
            $('#hdnIdeaStatus').val(IdeaStatus);

            var ChallengeID = 0;
            $('#rdo_Approve').prop('checked', true);



            $("#divL1Approval").hide();
            $("#divL2Approval").hide();
            $("#divCICoreFinancialApproval").hide();

            $("#txtComments").val('');
            $("#txt_L1EffortCostInvolved").val('');
            $("#dtL1ExpectedDateCompletion").val('');

            Approveonclick();

            var method = "GetListItems";


            var ListName = "V-Ideas";
            var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
            var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
            $("#myIdeaContent").empty();
            $().SPServices
            ({
                operation: method,
                async: false,

                listName: ListName,
                CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
                CAMLViewFields: "<ViewFields Properties='True' />",
                CAMLQuery: query,
                completefunc: function (xData, Status) {
                    $(xData.responseXML).SPFilterNode("z:row").each(function () {
                        var id = $(this).attr("ows_ID");
                        var IdeaNumber = $(this).attr("ows_IdeaNumber");
                        var title = $(this).attr("ows_Title");
                        StatusComment = $(this).attr("ows_StatusComment");

                        var Categoryvalue = $(this).attr("ows_IdeaLever");
                        var Goalstatement = CheckUndefinedORNull($(this).attr("ows_GoalStatement"));
                        var Estimatedbenefits = CheckUndefinedORNull($(this).attr("ows_EstimatedBenefits"));
                        var problemstatement = CheckUndefinedORNull($(this).attr("ows_ProblemStatement"));
                        var IdeaAuth = $(this).attr("ows_Author");
                        var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");

                        ChallengeID = Math.round($(this).attr("ows_ChallengeID"));
                        var functionname = $(this).attr("ows_VIdeaType");
                        var attachments = [];
                        var divattach = '';
                        var thisurl = $().SPServices.SPGetCurrentSite() + "/Lists/VIdea/Attachments/" + id + "/";
                        var downloadurl = $().SPServices.SPGetCurrentSite() + "/_layouts/download.aspx?SourceUrl="
                        var RaisedBy = $(this).attr("ows_RaisedBy");
                        $('#hdnRaisedBy').val(RaisedBy);

                        var IdeaDesc = CheckUndefinedORNull($(this).attr("ows_IdeaDescription"));
                        var EstimatedBenefitsInCost = Math.round($(this).attr("ows_EstimatedBenefitsInCost"));
                        var EstimatedBenefitsCostCurrency = $(this).attr("ows_EstimatedBenefitsCostCurrency");
                        var EstimatedBenefitsInHours = Math.round($(this).attr("ows_EstimatedBenefitsInHours"));
                        if (isNaN(EstimatedBenefitsInHours)) {
                            EstimatedBenefitsInHours = 0;
                        }
                        var VIdeaType = CheckUndefinedORNull($(this).attr("ows_VIdeaType"));
                        var IdeaServiceLine = CheckUndefinedORNull($(this).attr("ows_IdeaServiceLine"));
                        var IdeaService = CheckUndefinedORNull($(this).attr("ows_IdeaService"));
                        var IdeaLocation = CheckUndefinedORNull($(this).attr("ows_IdeaLocation"));
                        var ideaStatus = CheckUndefinedORNull($(this).attr("ows_IdeaStatus"));
                        var ideaServiceLine = CheckUndefinedORNull($(this).attr("ows_IdeaServiceLine"));

                        if (!Categoryvalue) {
                            Categoryvalue = '';
                        }
                        if (!functionname) {
                            functionname = '';
                        }

                        var isPrivatePublic = $(this).attr("ows_IdeaScope");
                        $('#hdnPrivatePublic').val(isPrivatePublic);

                        var att = $(this).attr("ows_Attachments");
                        if (att != "0") {
                            attachments = att.split(";#");
                            for (var i = 0; i < attachments.length; i++) {
                                if (attachments[i]) {
                                    attachments[i] = attachments[i].replace(",", "");
                                    var filename = attachments[i].substring(attachments[i].lastIndexOf('/') + 1);

                                    divattach += "<div><a href='" + downloadurl + attachments[i].replace(" ", "%20") + "'>" + filename + "</a></div>";
                                }
                            }
                        }

                        if (isPrivatePublic == "Private") {
                            $('ul.om').addClass('swapImg_1_Approval').removeClass('swapImg_2_Approval');
                            $("#idPrivateMessage").show();
                            $("#idPublicMessage").hide();
                        }
                        else if (isPrivatePublic == "Public") {
                            $('ul.om').addClass('swapImg_2_Approval').removeClass('swapImg_1_Approval');
                            $("#idPrivateMessage").hide();
                            $("#idPublicMessage").show();
                        }

                        if (IdeaStatus.indexOf("L1") >= 0) {
                            getText = "<div class='overflowHidden'><div class='right-pop-section pull-right'><span>By: " + IdeaCreator + "</span></div> <p><b> " + IdeaNumber + " : " + title + "</b></p><br> <p><b>Idea Description:</b>" + IdeaDesc + "</p><br><p> <b>Estimated Benefits In Hours:</b>" + EstimatedBenefitsInHours + "</p><br><p><b>Estimated Benefits In Cost:</b>" + EstimatedBenefitsCostCurrency + " " + EstimatedBenefitsInCost + "</p><br><p><b>Service Line:</b>" + IdeaServiceLine + "</p><br><p><b>Service:</b>" + IdeaService + "</p><br><p><b>Location:</b>" + IdeaLocation + "</p>";
                        }
                        else {

                            getText = "<div class='overflowHidden'> <h1 class='col-md-6 col-xs-6 pull-left PNONE'> " + IdeaNumber + " : " + title + "</h1> <div class='right-pop-section pull-right'> <span>Function:" + functionname + "<br> Category:" + Categoryvalue + "<br> By: " + IdeaCreator + "<br> Idea Status: " + ideaStatus + "<br> Service Line: " + ideaServiceLine + "</span></div> </div> <br> <p> <b>Problem statement : </b> " + problemstatement + "</p>  <br> <p> <b>Goal statement : </b> " + Goalstatement + "</p><br><p> <b>Estimated benefits : </b> " + Estimatedbenefits + "</p> <br> <p> <div class='attchment-popup'> <div class='col-md-8 col-xs-8 PNONE'> <b>Attached Documents : </b>  <br> <div class='format'> " + divattach + "</div> </div> </div> </p>";
                        }

                    });
                }
            });


            $("#myIdeaContent").append(getText);
            $("#IdeaModal").modal();
        }



    }

    /* Get List ID */
    function GetListId(ListName) {
        var id = "";
        $().SPServices({
            operation: "GetList",
            listName: ListName,
            async: false,
            completefunc: function (xData, Status) {
                id = $(xData.responseXML).find("List").attr("ID");
            }
        });
        return id;
    }

    /* Fetch and Set Idea by Idea ID for L2 */
    function GetAndSetIdeasByIDForL2(IdeaID) {
        $("#txtComments").val('');
        $('#hdnIdeaID').val(IdeaID);
        var ChallengeID = 0;

        var method = "GetListItems";


        var ListName = "V-Ideas";
        var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $().SPServices
        ({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var ImprovementLeverCategory = $(this).attr("ows_ImprovementLeverCategory");
                    var ImplementationEffortsCategory = $(this).attr("ows_ImplementationEffortsCategory");
                    var OpportunityTypeCategory = $(this).attr("ows_OpportunityTypeCategory");
                    var EffortCostInvolved = $(this).attr("ows_EffortCostInvolved");
                    var CI_NonCI = $(this).attr("ows_CI_x002d_NonCI");

                    //NikhilD commented below code
                    //var dd = document.getElementById("list_CategoryL2ImprovementLever");
                    //for (var i = 0; i < dd.options.length; i++) {
                    //    if (dd.options[i].text === ImprovementLeverCategory) {
                    //        dd.selectedIndex = i;
                    //        break;
                    //    }
                    //}
                    //NikhilD commented below code

                    var dd = document.getElementById("list_CategoryL2ImplementationLevel");

                    if (ImplementationEffortsCategory.indexOf("&lt;") >= 0) {
                        ImplementationEffortsCategory = ImplementationEffortsCategory.replace('&lt;', '<');
                    }
                    else if (ImplementationEffortsCategory.indexOf("&gt;") >= 0) {
                        ImplementationEffortsCategory = ImplementationEffortsCategory.replace('&gt;', '>');
                    }
                    else {
                        ImplementationEffortsCategory = ImplementationEffortsCategory;
                    }
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === ImplementationEffortsCategory) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    var dd = document.getElementById("list_CategoryL2OpportunityType");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === OpportunityTypeCategory) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    var dd = document.getElementById("list_CI_NonCI_L2");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === CI_NonCI) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    $("#txt_L2EffortCostInvolved").val(EffortCostInvolved);

                });
            }
        });
    }


    /* Fetch and Set Idea by Idea ID for L3 */
    function GetAndSetIdeasByIDForL3(IdeaID) {
        var PerHourCost = fetchCostCentrePerHourCost();

        var conversionAmount = fetchDatafromConfigListApproval(currUserLocation);
        conversionRate = conversionAmount;
        if (PerHourCost) {
            $("#PerhourEurocost").val((PerHourCost / conversionAmount).toFixed(2));
        }
        else {
            $("#PerhourEurocost").val(0);
        }
        $("#list_IdeaCategory").prop("disabled", false);
        var method = "GetListItems";

        var ListName = "V-Ideas";
        var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $().SPServices
        ({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var OpportunityTypeCategory = $(this).attr("ows_OpportunityTypeCategory");
                    var ActualDateOfCompletion = $(this).attr("ows_ActualDateOfCompletion");
                    var IdeaCategory = $(this).attr("ows_SubLever2");

                    if ($(this).attr("ows_ActualDateOfCompletion")) {
                        var actualDate = $(this).attr("ows_ActualDateOfCompletion").split(" ")[0];
                        actualDate = actualDate.substr(0, 10).split("-");
                        actualDate = actualDate[1] + "/" + actualDate[2] + "/" + actualDate[0];
                    }
                    else {
                        actualDate = '';
                    }
                    var dd = document.getElementById("list_OpportunityType");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === OpportunityTypeCategory) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    var dd = document.getElementById("list_IdeaCategory");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === IdeaCategory) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    $("#dtActualDateOfCompletion").val(actualDate);
                });
            }
        });
    }

    var myRoom = {
        myAction: function (array) {
            garray = $.grep(array, function (n) {
                return (n);
            });
            //join by ' '  
            return garray.join(',');
        }
    };

    /* Fetch and Set Idea by Idea ID for Financial */
    function GetAndSetIdeasByIDForReworkFromFinacial(IdeaID) {
        var method = "GetListItems";

        var ListName = "V-Ideas";

        var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $().SPServices
        ({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var BenefitTypes = $(this).attr("ows_BenefitTypes");

                    BenefitTypes = BenefitTypes.split(';#');

                    var string = myRoom.myAction(BenefitTypes);

                    var myStringArray = string.split(',');
                    var arrayLength = myStringArray.length;

                    $.each($("input[name='chkcheckbox']"), function (e) {
                        for (var i = 0; i < arrayLength; i++) {
                            if ($(this).val() == myStringArray[i]) {
                                $(this).prop('checked', true);



                                if ($(this).is(":checked") && $(this).val() == "Hard") {
                                    document.getElementById("CFBenefitTypes").disabled = false;
                                    document.getElementById("HardTotalBenefits").disabled = false;
                                    $("#HardTotalBenefits").prop('readonly', false);
                                }
                                else if ($(this).is(":checked") && $(this).val() == "Soft") //if($(this).val() == "Soft")
                                {
                                    document.getElementById("CFBenefitTypes").disabled = false;
                                    $("#EffortsSaved").prop('readonly', false);
                                    document.getElementById("EffortsSaved").disabled = false;
                                    document.getElementById("PerhourEurocost").disabled = false;
                                    $("#PerhourEurocost").prop('readonly', false);
                                    document.getElementById("list_OpportunityType").disabled = false;
                                    document.getElementById("dtActualDateOfCompletion").disabled = false;
                                    document.getElementById("finHardBenefitSaved").disabled = false;
                                    document.getElementById("finHardBenefitSaved").disabled = false;
                                }
                                else if ($(this).is(":checked") && $(this).val() == "Partner") //if($(this).val() == "Partner")
                                {
                                    document.getElementById("CFBenefitTypes").disabled = false;
                                    document.getElementById("PartnerTotalBenefits").disabled = false;
                                    $("#PartnerTotalBenefits").prop('readonly', false);
                                }
                            }
                        }

                    });


                    var HardTotalBenefits = $(this).attr("ows_HardTotalBenefits");
                    var PartnerTotalBenefits = $(this).attr("ows_PartnerTotalBenefits");

                    var EffortsSaved = $(this).attr("ows_EffortsSaved");
                    var PerHourEuroCost = $(this).attr("ows_PerHourEuroCost");
                    var CIFinOpportunityType = $(this).attr("ows_CIFinOpportunityType");

                    var CIFinActualDateOfCompletion;
                    if ($(this).attr("ows_CIFinActualDateOfCompletion")) {
                        CIFinActualDateOfCompletion = $(this).attr("ows_CIFinActualDateOfCompletion");
                        CIFinActualDateOfCompletion = CIFinActualDateOfCompletion.substr(0, 10).split("-");
                        CIFinActualDateOfCompletion = CIFinActualDateOfCompletion[1] + "/" + CIFinActualDateOfCompletion[2] + "/" + CIFinActualDateOfCompletion[0];

                    }
                    else {
                        CIFinActualDateOfCompletion = '';
                    }



                    var FinBenefitPeriod = $(this).attr("ows_FinBenefitPeriod");
                    var FinSoftBenefitSaved = $(this).attr("ows_FinSoftBenefitSaved");
                    var FinHardBenefitSaved = $(this).attr("ows_FinHardBenefitSaved");
                    var FinTotalBenefits = $(this).attr("ows_FinTotalBenefits");

                    var MonBenefitPeriod = $(this).attr("ows_MonBenefitPeriod");
                    var MonSoftBenefitSaved = $(this).attr("ows_MonSoftBenefitSaved");
                    var MonHardBenefitSaved = $(this).attr("ows_MonHardBenefitSaved");
                    var MonTotalBenefits = $(this).attr("ows_MonTotalBenefits");

                    var MonOtherBenefitSaved = $(this).attr("ows_MonOtherBenefitSaved");
                    var HoursSavedInAYear = $(this).attr("ows_HoursSavedInAYear");
                    var FTESaved = $(this).attr("ows_FTESaved");
                    var HeadCountSaved = $(this).attr("ows_HeadCountSaved");



                    $("#HardTotalBenefits").val(HardTotalBenefits);
                    $("#PartnerTotalBenefits").val(PartnerTotalBenefits);


                    $("#EffortsSaved").val(EffortsSaved);
                    $("#PerhourEurocost").val(PerHourEuroCost);

                    var dd = document.getElementById("list_OpportunityType");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === CIFinOpportunityType) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }
                    $("#dtActualDateOfCompletion").val(CIFinActualDateOfCompletion);

                    $("#finBenefitPeriod").val(FinBenefitPeriod);
                    $("#finSoftBenefitSaved").val(FinSoftBenefitSaved);
                    $("#finHardBenefitSaved").val(FinHardBenefitSaved);
                    $("#finTotalBenefits").val(FinTotalBenefits);

                    $("#monthBenefitPeriod").val(MonBenefitPeriod);
                    $("#monthSoftBenefitSaved").val(MonSoftBenefitSaved);
                    $("#monthHardBenefitSaved").val(MonHardBenefitSaved);
                    $("#monthTotalBenefits").val(MonTotalBenefits);

                    $("#monthOtherBenefitSaved").val(MonOtherBenefitSaved);
                    $("#monthHoursSavedInYear").val(HoursSavedInAYear);
                    $("#monthFTESaved").val(FTESaved);
                    $("#monthHeadCountSaved").val(HeadCountSaved);


                });
            }
        });
    }

    /* Fetch and Set Idea by Idea ID for Financial */
    function GetAndSetIdeasByIDForFinancial(IdeaID) {
        var method = "GetListItems";

        var ListName = "V-Ideas";

        var fieldsToRead = "<ViewFields>" + "<FieldRef Name='Title' />" + "</ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $().SPServices
        ({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var BenefitTypes = $(this).attr("ows_BenefitTypes");
                    var IdeaCategory = $(this).attr("ows_SubLever2");

                    BenefitTypes = BenefitTypes.split(';#');

                    var string = myRoom.myAction(BenefitTypes);

                    var myStringArray = string.split(',');
                    var arrayLength = myStringArray.length;

                    $.each($("input[name='chkcheckbox']"), function () {
                        for (var i = 0; i < arrayLength; i++) {
                            if ($(this).val() == myStringArray[i]) {
                                $(this).prop('checked', true);
                            }
                        }

                    });


                    var HardTotalBenefits = $(this).attr("ows_HardTotalBenefits");
                    var PartnerTotalBenefits = $(this).attr("ows_PartnerTotalBenefits");

                    var EffortsSaved = $(this).attr("ows_EffortsSaved");
                    var PerHourEuroCost = $(this).attr("ows_PerHourEuroCost");
                    var CIFinOpportunityType = $(this).attr("ows_CIFinOpportunityType");

                    var CIFinActualDateOfCompletion;
                    if ($(this).attr("ows_CIFinActualDateOfCompletion")) {
                        CIFinActualDateOfCompletion = $(this).attr("ows_CIFinActualDateOfCompletion");

                        CIFinActualDateOfCompletion = CIFinActualDateOfCompletion.substr(0, 10).split("-");
                        CIFinActualDateOfCompletion = CIFinActualDateOfCompletion[1] + "/" + CIFinActualDateOfCompletion[2] + "/" + CIFinActualDateOfCompletion[0];

                    }
                    else {
                        CIFinActualDateOfCompletion = '';
                    }



                    var FinBenefitPeriod = $(this).attr("ows_FinBenefitPeriod");
                    var FinSoftBenefitSaved = $(this).attr("ows_FinSoftBenefitSaved");
                    var FinHardBenefitSaved = $(this).attr("ows_FinHardBenefitSaved");
                    var FinTotalBenefits = $(this).attr("ows_FinTotalBenefits");

                    var MonBenefitPeriod = $(this).attr("ows_MonBenefitPeriod");
                    var MonSoftBenefitSaved = $(this).attr("ows_MonSoftBenefitSaved");
                    var MonHardBenefitSaved = $(this).attr("ows_MonHardBenefitSaved");
                    var MonTotalBenefits = $(this).attr("ows_MonTotalBenefits");

                    var MonOtherBenefitSaved = $(this).attr("ows_MonOtherBenefitSaved");
                    var HoursSavedInAYear = $(this).attr("ows_HoursSavedInAYear");
                    var FTESaved = $(this).attr("ows_FTESaved");
                    var HeadCountSaved = $(this).attr("ows_HeadCountSaved");



                    $("#HardTotalBenefits").val(HardTotalBenefits);
                    $("#PartnerTotalBenefits").val(PartnerTotalBenefits);


                    $("#EffortsSaved").val(EffortsSaved);
                    $("#PerhourEurocost").val(PerHourEuroCost);

                    var dd = document.getElementById("list_OpportunityType");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === CIFinOpportunityType) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    var dd = document.getElementById("list_IdeaCategory");
                    for (var i = 0; i < dd.options.length; i++) {
                        if (dd.options[i].text === IdeaCategory) {
                            dd.selectedIndex = i;
                            break;
                        }
                    }

                    $("#dtActualDateOfCompletion").val(CIFinActualDateOfCompletion);

                    $("#finBenefitPeriod").val(FinBenefitPeriod);
                    $("#finSoftBenefitSaved").val(FinSoftBenefitSaved);
                    $("#finHardBenefitSaved").val(FinHardBenefitSaved);
                    $("#finTotalBenefits").val(FinTotalBenefits);

                    $("#monthBenefitPeriod").val(MonBenefitPeriod);
                    $("#monthSoftBenefitSaved").val(MonSoftBenefitSaved);
                    $("#monthHardBenefitSaved").val(MonHardBenefitSaved);
                    $("#monthTotalBenefits").val(MonTotalBenefits);

                    $("#monthOtherBenefitSaved").val(MonOtherBenefitSaved);
                    $("#monthHoursSavedInYear").val(HoursSavedInAYear);
                    $("#monthFTESaved").val(FTESaved);
                    $("#monthHeadCountSaved").val(HeadCountSaved);


                    var benefitCategory = $(this).attr("ows_BenefitCategory");
                    var exitRunRate = $(this).attr("ows_ExitRunRate");

                    $("#list_CategoryBenefits").prop("disabled", true);

                    $("#list_IdeaCategory").prop("disabled", true);

                    $("#exitRunRate").prop("disabled", true);

                    if (benefitCategory == "One Time") {
                        $("#list_CategoryBenefits option:contains(" + benefitCategory + ")").attr('selected', 'selected');
                    }
                    else {
                        $("#list_CategoryBenefits option:contains(" + benefitCategory + ")").attr('selected', 'selected');
                        $(".exitRunRate").show();
                        $("#exitRunRate").val(exitRunRate);
                    }

                });
            }
        });
    }

    /* Fetch Challenge by Selected Idea*/
    function GetChallengebyID(ChallengeID) {
        var ChallengeTitle;
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Challenges",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + ChallengeID + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='Title' /><FieldRef Name='Author' /><FieldRef Name='Description' /><FieldRef Name='TotalFundings' /></ViewFields>",


            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {

                    ChallengeTitle = $(this).attr("ows_Title");

                });
            }
        });

        return ChallengeTitle;
    }

    function ExpandCollapse() {
        var showChar = 290;
        var ellipsestext = "...";
        var moretext = "Expand";
        var lesstext = "less";
        $(".Expand").each(function () {

            var content = $(this).html();
            if (content.length > showChar) {
                var c = content.substr(0, showChar);
                var h = content.substr(showChar - 1, content.length - showChar);

                var html = '<div class="slide-up">' + content + '&nbsp;&nbsp;</div><span class="ellipseSpan"> ' + ellipsestext + '</span><div class="leaderslide-arrow text-center"><a href="" class="morelink more1">' + moretext + '</a></div>';
                $(this).html(html);
            }
        });

        $(".morelink").click(function () {
            if ($(this).hasClass("more1")) {
                $(this).parent().parent().find('div').first().removeClass("slide-up").addClass("slide-down");
                $(this).removeClass('more1').addClass('less1');
                $(this).parent().parent().find('span').hide();
            }
            else {
                $(this).removeClass('less1').addClass('more1');
                $(this).parent().parent().find('div').first().removeClass("slide-down").addClass("slide-up");
                $(this).parent().parent().find('span').show();

            }
            return false;
        });

    }

    /* Submit Selected Idea (Approve etc) */
    function SubmitIdea() {
        $("#valtxtComments").hide();

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });

        var firstName = $().SPServices.SPGetCurrentUser({ fieldName: "FirstName", debug: false });
        var lastName = $().SPServices.SPGetCurrentUser({ fieldName: "LastName", debug: false });
        var commentorName = firstName + " " + lastName;


        var hdnIdeaStatus = $('#hdnIdeaStatus').val();
        var approvedSuccess = 0;

        var txtComments = $("#txtComments").val();

        var ListName = "V-Ideas";

        if (txtComments != '') {
            var status = $('#popupStatus input:radio:checked').val();

            var hdnIdeaID = $('#hdnIdeaID').val();

            var selectedTab = $('#hdnPrivatePublic').val();


            if (status == "Approve") {
                if (validateAllFields()) {

                    approvedSuccess = 1;
                    if (hdnIdeaStatus == "Rework from F1" || hdnIdeaStatus == "Rework from F2" || hdnIdeaStatus == "Rework from F3") {
                        var CFBenefitTypes = '';
                        $.each($("input[name='chkcheckbox']:checked"), function () {

                            if (CFBenefitTypes == '') {
                                CFBenefitTypes = ';#' + $(this).val();
                            }
                            else {
                                CFBenefitTypes = CFBenefitTypes + ';#' + $(this).val();
                            }

                            if ($(this).val() == 'Soft') {
                                AllCalculationsOnSubmit();
                            }

                        });
                        CFBenefitTypes = CFBenefitTypes + ';#';


                        var HardTotalBenefits = $("#HardTotalBenefits").val();
                        var PartnerTotalBenefits = $("#PartnerTotalBenefits").val();

                        var EffortsSaved = $("#EffortsSaved").val();
                        var PerhourEurocost = $('#PerhourEurocost').val();
                        var OpportunityTypeCategory = $("#list_OpportunityType option:selected").text();


                        var finBenefitPeriod = $("#finBenefitPeriod").val();
                        var finSoftBenefitSaved = $("#finSoftBenefitSaved").val();
                        var finHardBenefitSaved = $("#finHardBenefitSaved").val();
                        var finTotalBenefits = $("#finTotalBenefits").val();


                        var monthBenefitPeriod = $("#monthBenefitPeriod").val();
                        var monthSoftBenefitSaved = $("#monthSoftBenefitSaved").val();
                        var monthHardBenefitSaved = $("#monthHardBenefitSaved").val();
                        var monthTotalBenefits = $("#monthTotalBenefits").val();
                        var monthOtherBenefitSaved = $("#monthOtherBenefitSaved").val();


                        var monthHoursSavedInYear = $("#monthHoursSavedInYear").val();
                        var monthFTESaved = $("#monthFTESaved").val();
                        var monthHeadCountSaved = $("#monthHeadCountSaved").val();

                        /*--------------------------------Rishi Code Start-------------------------------------------*/

                        totalHardBenefitsLocalCurrency = HardTotalBenefits * conversionRate;
                        totalPartnerBenefitsLocalCurrency = PartnerTotalBenefits * conversionRate;
                        perHourCostLocalCurrency = PerhourEurocost * conversionRate;
                        softBenefitsSavedLocalCurrency = finSoftBenefitSaved * conversionRate;
                        monthSoftBenefitSavedLocalCurrency = monthSoftBenefitSaved * conversionRate;
                        implementationCostLocalCurrency = finHardBenefitSaved * conversionRate;
                        otherBenefitsLocalCurrency = monthOtherBenefitSaved * conversionRate;
                        totalBenefitsLocalCurrency = finTotalBenefits * conversionRate;
                        spillOverBenefitsLocalCurrency = monthHardBenefitSaved * conversionRate;
                        monthTotalBenefitsLocalCurrency = monthTotalBenefits * conversionRate;


                        var exitRunRate = $("#exitRunRate").val();
                        var selCatBenValue = $('#list_CategoryBenefits :selected').text();
                        var categoryBenefits = selCatBenValue;


                        /*--------------------------------Rishi Code End---------------------------------------------*/


                        var dtActualDateOfCompletion = $('#dtActualDateOfCompletion').val();
                        if ($('#dtActualDateOfCompletion').val()) {
                            dtActualDateOfCompletion = dtActualDateOfCompletion + " 00:00:00";
                            dtActualDateOfCompletion = new Date(dtActualDateOfCompletion);
                            dtActualDateOfCompletion = ISODateString(dtActualDateOfCompletion);
                        }

                        var L3ActionDate = new Date();
                        L3ActionDate = ISODateStringActionDate(L3ActionDate);

                        var L3Owner = userEmail; //"Waiting for L3";
                        var L3Comment = txtComments;

                        var ideaStatus = '';

                        if (hdnIdeaStatus == "Rework from F1") {
                            ideaStatus = "Waiting for F1";
                        }
                        else if (hdnIdeaStatus == "Rework from F2") {
                            ideaStatus = "Waiting for F2";
                        }
                        else if (hdnIdeaStatus == "Rework from F3") {
                            ideaStatus = "Waiting for F3";
                        }
                        else {
                            ideaStatus = "Waiting for F1";
                        }

                        //var getApprovalLevel = CheckUndefinedORNull(ideaStatus.split(' ')[2]);
                        var getApprovalLevel = "L3";

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: [["IdeaScope", selectedTab], ["IdeaStatus", ideaStatus],
                             ["HardTotalBenefits", HardTotalBenefits], ["PartnerTotalBenefits", PartnerTotalBenefits],
                             ["EffortsSaved", EffortsSaved], ["PerHourEuroCost", PerhourEurocost], ["CIFinOpportunityType", OpportunityTypeCategory], ["CIFinActualDateOfCompletion", dtActualDateOfCompletion],
                             ["FinBenefitPeriod", finBenefitPeriod], ["FinSoftBenefitSaved", finSoftBenefitSaved], ["FinHardBenefitSaved", finHardBenefitSaved], ["FinTotalBenefits", finTotalBenefits],
                             ["MonBenefitPeriod", monthBenefitPeriod], ["MonSoftBenefitSaved", monthSoftBenefitSaved], ["MonHardBenefitSaved", monthHardBenefitSaved], ["MonTotalBenefits", monthTotalBenefits],
                             ["MonOtherBenefitSaved", monthOtherBenefitSaved], ["HoursSavedInAYear", monthHoursSavedInYear], ["FTESaved", monthFTESaved], ["HeadCountSaved", monthHeadCountSaved], ["BenefitTypes", CFBenefitTypes],
                             ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment],
                             ["ConversionRate", conversionRate],
                             ["HardBenefitsLocalCurrency", totalHardBenefitsLocalCurrency],
                             ["PartnerBenefitsLocalCurrency", totalPartnerBenefitsLocalCurrency],
                             ["HourCostLocalCurrency", perHourCostLocalCurrency],
                             ["SoftBenefitsSavedLocalCurrency", softBenefitsSavedLocalCurrency],
                             ["MonSoftBenefitSavedLocalCurrency", monthSoftBenefitSavedLocalCurrency],
                             ["ImplementationCostLocalCurrency", implementationCostLocalCurrency],
                             ["OtherBenefitsLocalCurrency", otherBenefitsLocalCurrency],
                             ["TotalBenefitsLocalCurrency", totalBenefitsLocalCurrency],
                             ["SpillOverBenefitsLocalCurrency", spillOverBenefitsLocalCurrency],
                             ["MonTotBenefitsLocalCurrency", monthTotalBenefitsLocalCurrency],
                             ["ExitRunRate", exitRunRate],
                             ["BenefitCategory", categoryBenefits]
                            ],
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                if (roleApprover == "Approver")
                                {
                                var UserVertical = document.getElementById("UserVertical");
                                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                var UserServiceLine = document.getElementById("UserServiceLine");
                                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                localStorage.setItem("ActionClicked", true);
                                localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                }
                                //////NikhilD Added below code for the latest changes
                            }
                        });


                    }
                    else if (hdnIdeaStatus.indexOf("L1") >= 0) {
                        //NikhilD commented below code
                        //var ImprovementLeverCategory = $("#list_CategoryL1ImprovementLever option:selected").text();
                        //NikhilD Commented above code
                        var ImplementationEffortsCategory = $("#list_CategoryL1ImplementationLevel option:selected").text();

                        if (ImplementationEffortsCategory) {
                            ImplementationEffortsCategory = ImplementationEffortsCategory.replace(/</g, '&' + 'amp;' + 'lt;');
                            ImplementationEffortsCategory = ImplementationEffortsCategory.replace(/>/g, '&' + 'amp;' + 'gt;');
                        }

                        var OpportunityTypeCategory = $("#list_CategoryL1OpportunityType option:selected").text();
                        var txt_L1EffortCostInvolved = $('#txt_L1EffortCostInvolved').val();
                        var dtL1ExpectedDateCompletion = $('#dtL1ExpectedDateCompletion').val();

                        dtL1ExpectedDateCompletion = dtL1ExpectedDateCompletion + " 00:00:00";
                        dtL1ExpectedDateCompletion = new Date(dtL1ExpectedDateCompletion);
                        dtL1ExpectedDateCompletion = ISODateString(dtL1ExpectedDateCompletion);

                        var L1ActionDate = new Date();
                        L1ActionDate = ISODateStringActionDate(L1ActionDate);

                        var L1Owner = userEmail; //"Waiting for L1";
                        var L1Comment = txtComments;

                        var CI_NonCI = $("#list_CI_NonCI option:selected").text();

                        var getApprovalLevel = CheckUndefinedORNull(hdnIdeaStatus.split(' ')[2]);

                        var ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", "Approved by L1"], ["ImplementationEffortsCategory", ImplementationEffortsCategory], ["OpportunityTypeCategory", OpportunityTypeCategory], ["EffortCostInvolved", txt_L1EffortCostInvolved], ["ExpectedDateOfCompletion", dtL1ExpectedDateCompletion], ["L1ActionDate", L1ActionDate], ["L1Owner", L1Owner], ["L1Comment", L1Comment], ["CI_x002d_NonCI", CI_NonCI], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L1Comment]];

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: ValuePairs,
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                if (roleApprover == "Approver") {
                                    var UserVertical = document.getElementById("UserVertical");
                                    var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                    var UserServiceLine = document.getElementById("UserServiceLine");
                                    var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                    localStorage.setItem("ActionClicked", true);
                                    localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                    localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                    //////NikhilD Added below code for the latest changes
                                }
                            }
                        });


                    }
                    else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                        //NikhilD commented below code
                        //var ImprovementLeverCategory = $("#list_CategoryL2ImprovementLever option:selected").text();
                        //NikhilD commented above code
                        var ImplementationEffortsCategory = $("#list_CategoryL2ImplementationLevel option:selected").text();

                        if (ImplementationEffortsCategory) {
                            ImplementationEffortsCategory = ImplementationEffortsCategory.replace(/</g, '&' + 'amp;' + 'lt;');
                            ImplementationEffortsCategory = ImplementationEffortsCategory.replace(/>/g, '&' + 'amp;' + 'gt;');
                        }

                        var OpportunityTypeCategory = $("#list_CategoryL2OpportunityType option:selected").text();
                        var txt_L2EffortCostInvolved = $('#txt_L2EffortCostInvolved').val();
                        var dtL2ActualDateCompletion = $('#dtL2ActualDateCompletion').val();

                        dtL2ActualDateCompletion = dtL2ActualDateCompletion + " 00:00:00";
                        dtL2ActualDateCompletion = new Date(dtL2ActualDateCompletion);
                        dtL2ActualDateCompletion = ISODateString(dtL2ActualDateCompletion);

                        var L2ActionDate = new Date();
                        L2ActionDate = ISODateStringActionDate(L2ActionDate);

                        var L2Owner = userEmail; //"Waiting for L2";
                        var L2Comment = txtComments;

                        var CI_NonCI = $("#list_CI_NonCI_L2 option:selected").text();

                        var getApprovalLevel = CheckUndefinedORNull(hdnIdeaStatus.split(' ')[2]);

                        var ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", "Waiting for L3"], ["ImplementationEffortsCategory", ImplementationEffortsCategory], ["OpportunityTypeCategory", OpportunityTypeCategory], ["EffortCostInvolved", txt_L2EffortCostInvolved], ["ActualDateOfCompletion", dtL2ActualDateCompletion], ["L2ActionDate", L2ActionDate], ["L2Owner", L2Owner], ["L2Comment", L2Comment], ["CI_x002d_NonCI", CI_NonCI], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L2Comment]];



                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: ValuePairs,//[["IdeaScope", selectedTab],["IdeaStatus", status],["ImprovementLeverCategory", ImprovementLeverCategory],["ImplementationEffortsCategory", ImplementationEffortsCategory], ["OpportunityTypeCategory", OpportunityTypeCategory], ["EffortCostInvolved", txt_L1EffortCostInvolved], ["ActualDateOfCompletion", dtL2ActualDateCompletion], ["StatusComment", txtComments]],
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                if (roleApprover == "Approver") {
                                    var UserVertical = document.getElementById("UserVertical");
                                    var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                    var UserServiceLine = document.getElementById("UserServiceLine");
                                    var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                    localStorage.setItem("ActionClicked", true);
                                    localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                    localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                    //////NikhilD Added below code for the latest changes
                                }
                            }
                        });

                    }
                    else if (hdnIdeaStatus.indexOf("L3") >= 0) //|| hdnIdeaStatus.indexOf("Financial") >= 0)
                    {
                        var hdnRaisedBy = $('#hdnRaisedBy').val();

                        var CFBenefitTypes = '';
                        $.each($("input[name='chkcheckbox']:checked"), function () {
                            //CFBenefitTypes.push(';#' + $(this).val());
                            if (CFBenefitTypes == '') {
                                CFBenefitTypes = ';#' + $(this).val();
                            }
                            else {
                                CFBenefitTypes = CFBenefitTypes + ';#' + $(this).val();
                            }

                            if ($(this).val() == 'Soft') {
                                AllCalculationsOnSubmit();
                            }

                        });
                        CFBenefitTypes = CFBenefitTypes + ';#';


                        var HardTotalBenefits = $("#HardTotalBenefits").val();
                        var PartnerTotalBenefits = $("#PartnerTotalBenefits").val();

                        var EffortsSaved = $("#EffortsSaved").val();
                        var PerhourEurocost = $('#PerhourEurocost').val();

                        var IdeaCategory = $("#list_IdeaCategory option:selected").text();
                        var OpportunityTypeCategory = $("#list_OpportunityType option:selected").text();

                        var finBenefitPeriod = $("#finBenefitPeriod").val();
                        var finSoftBenefitSaved = $("#finSoftBenefitSaved").val();
                        var finHardBenefitSaved = $("#finHardBenefitSaved").val();
                        var finTotalBenefits = $("#finTotalBenefits").val();


                        var monthBenefitPeriod = $("#monthBenefitPeriod").val();
                        var monthSoftBenefitSaved = $("#monthSoftBenefitSaved").val();
                        var monthHardBenefitSaved = $("#monthHardBenefitSaved").val();
                        var monthTotalBenefits = $("#monthTotalBenefits").val();
                        var monthOtherBenefitSaved = $("#monthOtherBenefitSaved").val();


                        var monthHoursSavedInYear = $("#monthHoursSavedInYear").val();
                        var monthFTESaved = $("#monthFTESaved").val();
                        var monthHeadCountSaved = $("#monthHeadCountSaved").val();

                        /*--------------------------------Rishi Code Start-------------------------------------------*/

                        totalHardBenefitsLocalCurrency = HardTotalBenefits * conversionRate;
                        totalPartnerBenefitsLocalCurrency = PartnerTotalBenefits * conversionRate;
                        perHourCostLocalCurrency = PerhourEurocost * conversionRate;
                        softBenefitsSavedLocalCurrency = finSoftBenefitSaved * conversionRate;
                        monthSoftBenefitSavedLocalCurrency = monthSoftBenefitSaved * conversionRate;
                        implementationCostLocalCurrency = finHardBenefitSaved * conversionRate;
                        otherBenefitsLocalCurrency = monthOtherBenefitSaved * conversionRate;
                        totalBenefitsLocalCurrency = finTotalBenefits * conversionRate;
                        spillOverBenefitsLocalCurrency = monthHardBenefitSaved * conversionRate;
                        monthTotalBenefitsLocalCurrency = monthTotalBenefits * conversionRate;

                        var exitRunRate = $("#exitRunRate").val();
                        var selCatBenValue = $('#list_CategoryBenefits :selected').text();
                        var categoryBenefits = selCatBenValue;

                        /*--------------------------------Rishi Code End---------------------------------------------*/

                        var dtActualDateOfCompletion = $('#dtActualDateOfCompletion').val();
                        if ($('#dtActualDateOfCompletion').val()) {
                            dtActualDateOfCompletion = dtActualDateOfCompletion + " 00:00:00";
                            dtActualDateOfCompletion = new Date(dtActualDateOfCompletion);
                            dtActualDateOfCompletion = ISODateString(dtActualDateOfCompletion);
                        }

                        var L3ActionDate = new Date();
                        L3ActionDate = ISODateStringActionDate(L3ActionDate);

                        var L3Owner = userEmail; //"Waiting for L3";
                        var L3Comment = txtComments;

                        var ideaStatus = '';

                        var UserVertical = document.getElementById("UserVertical");
                        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;

                        var GlobalverticalName = GetVerticalNameByID(hdnIdeaID);

                        // if (hdnRaisedBy == "Leader" && Vertical != "Technology SSC" && UserVerticalValue != "Technology SSC") {
                        if ((hdnRaisedBy == "Leader" && GlobalverticalName != "Technology SSC") || (hdnRaisedBy == "Leader" && GlobalverticalName != "TSSI - Networks") || (UserVerticalValue != "Technology SSC") && (UserVerticalValue != "TSSI - Networks")) {
                            ideaStatus = "Completed";
                        }
                        else {
                            if (hdnIdeaStatus == "Rework from F1") {
                                ideaStatus = "Waiting for F1";
                            }
                            else if (hdnIdeaStatus == "Rework from F2") {
                                ideaStatus = "Waiting for F2";
                            }
                            else if (hdnIdeaStatus == "Rework from F3") {
                                ideaStatus = "Waiting for F3";
                            }
                            else {
                                ideaStatus = "Waiting for F1";
                            }
                        }

                        var getApprovalLevel = CheckUndefinedORNull(ideaStatus.split(' ')[2]);

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: [["IdeaScope", selectedTab], ["SubLever2", IdeaCategory], ["IdeaStatus", ideaStatus],
                             ["HardTotalBenefits", HardTotalBenefits], ["PartnerTotalBenefits", PartnerTotalBenefits],
                             ["EffortsSaved", EffortsSaved], ["PerHourEuroCost", PerhourEurocost], ["CIFinOpportunityType", OpportunityTypeCategory], ["CIFinActualDateOfCompletion", dtActualDateOfCompletion],
                             ["FinBenefitPeriod", finBenefitPeriod], ["FinSoftBenefitSaved", finSoftBenefitSaved], ["FinHardBenefitSaved", finHardBenefitSaved], ["FinTotalBenefits", finTotalBenefits],
                             ["MonBenefitPeriod", monthBenefitPeriod], ["MonSoftBenefitSaved", monthSoftBenefitSaved], ["MonHardBenefitSaved", monthHardBenefitSaved], ["MonTotalBenefits", monthTotalBenefits],
                             ["MonOtherBenefitSaved", monthOtherBenefitSaved], ["HoursSavedInAYear", monthHoursSavedInYear], ["FTESaved", monthFTESaved], ["HeadCountSaved", monthHeadCountSaved], ["BenefitTypes", CFBenefitTypes],
                             ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment],
                             ["ConversionRate", conversionRate],
                             ["HardBenefitsLocalCurrency", totalHardBenefitsLocalCurrency],
                             ["PartnerBenefitsLocalCurrency", totalPartnerBenefitsLocalCurrency],
                             ["HourCostLocalCurrency", perHourCostLocalCurrency],
                             ["SoftBenefitsSavedLocalCurrency", softBenefitsSavedLocalCurrency],
                             ["MonSoftBenefitSavedLocalCurrency", monthSoftBenefitSavedLocalCurrency],
                             ["ImplementationCostLocalCurrency", implementationCostLocalCurrency],
                             ["OtherBenefitsLocalCurrency", otherBenefitsLocalCurrency],
                             ["TotalBenefitsLocalCurrency", totalBenefitsLocalCurrency],
                             ["SpillOverBenefitsLocalCurrency", spillOverBenefitsLocalCurrency],
                             ["MonTotBenefitsLocalCurrency", monthTotalBenefitsLocalCurrency],
                             ["ExitRunRate", exitRunRate],
                             ["BenefitCategory", categoryBenefits]
                            ],
                            completefunc: function (xData, Status) {
                                //alert(hdnIdeaID);
                                //////NikhilD Added below code for the latest changes
                                var UserVertical = document.getElementById("UserVertical");
                                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                var UserServiceLine = document.getElementById("UserServiceLine");
                                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                localStorage.setItem("ActionClicked", true);
                                localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                //////NikhilD Added below code for the latest changes
                            }
                        });

                    }
                    else if (hdnIdeaStatus.indexOf("F1") >= 0) {

                        var F1ActionDate = new Date();
                        F1ActionDate = ISODateStringActionDate(F1ActionDate);
                        var F1Owner = userEmail; //"Waiting for F1";
                        var F1Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(hdnIdeaStatus.split(' ')[2]);

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: [["IdeaStatus", "Waiting for F2"], ["F1ActionDate", F1ActionDate], ["F1Owner", F1Owner], ["F1Comment", F1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F1Comment]],
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                var UserVertical = document.getElementById("UserVertical");
                                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                var UserServiceLine = document.getElementById("UserServiceLine");
                                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                localStorage.setItem("ActionClicked", true);
                                localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                //////NikhilD Added below code for the latest changes
                            }
                        });

                    }
                    else if (hdnIdeaStatus.indexOf("F2") >= 0) {

                        var F2ActionDate = new Date();
                        F2ActionDate = ISODateStringActionDate(F2ActionDate);
                        var F2Owner = userEmail; //"Waiting for F2";
                        var F2Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(hdnIdeaStatus.split(' ')[2]);

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: [["IdeaStatus", "Waiting for F3"], ["F2ActionDate", F2ActionDate], ["F2Owner", F2Owner], ["F2Comment", F2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F2Comment]],
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                var UserVertical = document.getElementById("UserVertical");
                                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                var UserServiceLine = document.getElementById("UserServiceLine");
                                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                localStorage.setItem("ActionClicked", true);
                                localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                //////NikhilD Added below code for the latest changes
                            }
                        });

                    }
                    else if (hdnIdeaStatus.indexOf("F3") >= 0) {
                        var F3ActionDate = new Date();
                        F3ActionDate = ISODateStringActionDate(F3ActionDate);
                        var F3Owner = userEmail; //"Waiting for F3";
                        var F3Comment = txtComments;


                        var getApprovalLevel = CheckUndefinedORNull(hdnIdeaStatus.split(' ')[2]);

                        $().SPServices({
                            operation: "UpdateListItems",
                            async: false,
                            batchCmd: "Update",
                            listName: ListName,
                            ID: hdnIdeaID,
                            valuepairs: [["IdeaStatus", "Completed"], ["F3ActionDate", F3ActionDate], ["F3Owner", F3Owner], ["F3Comment", F3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F3Comment]],
                            completefunc: function (xData, Status) {
                                //////NikhilD Added below code for the latest changes
                                var UserVertical = document.getElementById("UserVertical");
                                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                                var UserServiceLine = document.getElementById("UserServiceLine");
                                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                                localStorage.setItem("ActionClicked", true);
                                localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                                localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                                //////NikhilD Added below code for the latest changes
                            }
                        });

                    }
                }
            }
            else if (status == "Reject") {

                approvedSuccess = 1;
                var IdeaStatus = '';
                var ValuePairs = '';
                if (hdnIdeaStatus.indexOf("L1") >= 0) {
                    IdeaStatus = "Rejected at L1";
                    var L1ActionDate = new Date();
                    L1ActionDate = ISODateStringActionDate(L1ActionDate);
                    var L1Owner = userEmail; //IdeaStatus;
                    var L1Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L1ActionDate", L1ActionDate], ["L1Owner", L1Owner], ["L1Comment", L1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L1Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                    IdeaStatus = "Rejected at L2";
                    var L2ActionDate = new Date();
                    L2ActionDate = ISODateStringActionDate(L2ActionDate);
                    var L2Owner = userEmail; //IdeaStatus;
                    var L2Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L2ActionDate", L2ActionDate], ["L2Owner", L2Owner], ["L2Comment", L2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L2Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                    IdeaStatus = "Rejected at L3";
                    var L3ActionDate = new Date();
                    L3ActionDate = ISODateStringActionDate(L3ActionDate);
                    var L3Owner = userEmail; //IdeaStatus;
                    var L3Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F1") >= 0) {
                    IdeaStatus = "Rejected at F1";
                    var F1ActionDate = new Date();
                    F1ActionDate = ISODateStringActionDate(F1ActionDate);
                    var F1Owner = userEmail; //IdeaStatus;
                    var F1Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F1ActionDate", F1ActionDate], ["F1Owner", F1Owner], ["F1Comment", F1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F1Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F2") >= 0) {
                    IdeaStatus = "Rejected at F2";
                    var F2ActionDate = new Date();
                    F2ActionDate = ISODateStringActionDate(F2ActionDate);
                    var F2Owner = userEmail; //IdeaStatus;
                    var F2Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F2ActionDate", F2ActionDate], ["F2Owner", F2Owner], ["F2Comment", F2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F2Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F3") >= 0) {
                    IdeaStatus = "Rejected at F3";
                    var F3ActionDate = new Date();
                    F3ActionDate = ISODateStringActionDate(F3ActionDate);
                    var F3Owner = userEmail; //IdeaStatus;
                    var F3Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F3ActionDate", F3ActionDate], ["F3Owner", F3Owner], ["F3Comment", F3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F3Comment]];
                }

                $().SPServices({
                    operation: "UpdateListItems",
                    async: false,
                    batchCmd: "Update",
                    listName: ListName,
                    ID: hdnIdeaID,
                    valuepairs: ValuePairs,
                    completefunc: function (xData, Status) {
                        //////NikhilD Added below code for the latest changes
                        var UserVertical = document.getElementById("UserVertical");
                        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                        var UserServiceLine = document.getElementById("UserServiceLine");
                        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                        localStorage.setItem("ActionClicked", true);
                        localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                        localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                        //////NikhilD Added below code for the latest changes
                    }
                });

            }
            else if (status == "Rework") {

                approvedSuccess = 1;
                var IdeaStatus = '';
                var ValuePairs = '';
                if (hdnIdeaStatus.indexOf("L1") >= 0) {
                    IdeaStatus = "Rework from L1";
                    var L1ActionDate = new Date();
                    L1ActionDate = ISODateStringActionDate(L1ActionDate);
                    var L1Owner = userEmail; //IdeaStatus;
                    var L1Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L1ActionDate", L1ActionDate], ["L1Owner", L1Owner], ["L1Comment", L1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L1Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                    IdeaStatus = "Rework from L2";
                    var L2ActionDate = new Date();
                    L2ActionDate = ISODateStringActionDate(L2ActionDate);
                    var L2Owner = userEmail; //IdeaStatus;
                    var L2Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L2ActionDate", L2ActionDate], ["L2Owner", L2Owner], ["L2Comment", L2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L2Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                    IdeaStatus = "Rework from L3";
                    var L3ActionDate = new Date();
                    L3ActionDate = ISODateStringActionDate(L3ActionDate);
                    var L3Owner = userEmail; //IdeaStatus;
                    var L3Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F1") >= 0) {
                    if (hdnIdeaStatus.indexOf("Rework") >= 0) {
                        IdeaStatus = "Rework from L3";
                        var L3ActionDate = new Date();
                        L3ActionDate = ISODateStringActionDate(L3ActionDate);
                        var L3Owner = userEmail; //IdeaStatus;
                        var L3Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                    }
                    else {
                        IdeaStatus = "Rework from F1";
                        var F1ActionDate = new Date();
                        F1ActionDate = ISODateStringActionDate(F1ActionDate);
                        var F1Owner = userEmail; //IdeaStatus;
                        var F1Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F1ActionDate", F1ActionDate], ["F1Owner", F1Owner], ["F1Comment", F1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F1Comment]];
                    }
                }
                else if (hdnIdeaStatus.indexOf("F2") >= 0) {
                    if (hdnIdeaStatus.indexOf("Rework") >= 0) {
                        IdeaStatus = "Rework from L3";
                        var L3ActionDate = new Date();
                        L3ActionDate = ISODateStringActionDate(L3ActionDate);
                        var L3Owner = userEmail; //IdeaStatus;
                        var L3Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                    }
                    else {
                        IdeaStatus = "Rework from F2";
                        var F2ActionDate = new Date();
                        F2ActionDate = ISODateStringActionDate(F2ActionDate);
                        var F2Owner = userEmail; //IdeaStatus;
                        var F2Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F2ActionDate", F2ActionDate], ["F2Owner", F2Owner], ["F2Comment", F2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F2Comment]];
                    }
                }
                else if (hdnIdeaStatus.indexOf("F3") >= 0) {
                    if (hdnIdeaStatus.indexOf("Rework") >= 0) {
                        IdeaStatus = "Rework from L3";
                        var L3ActionDate = new Date();
                        L3ActionDate = ISODateStringActionDate(L3ActionDate);
                        var L3Owner = userEmail; //IdeaStatus;
                        var L3Comment = txtComments;

                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                    }
                    else {

                        IdeaStatus = "Rework from F3";
                        var F3ActionDate = new Date();
                        F3ActionDate = ISODateStringActionDate(F3ActionDate);
                        var F3Owner = userEmail; //IdeaStatus;
                        var F3Comment = txtComments;


                        var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);

                        ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F3ActionDate", F3ActionDate], ["F3Owner", F3Owner], ["F3Comment", F3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F3Comment]];
                    }
                }

                $().SPServices({
                    operation: "UpdateListItems",
                    async: false,
                    batchCmd: "Update",
                    listName: ListName,
                    ID: hdnIdeaID,
                    valuepairs: ValuePairs,
                    completefunc: function (xData, Status) {
                        //////NikhilD Added below code for the latest changes
                        var UserVertical = document.getElementById("UserVertical");
                        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                        var UserServiceLine = document.getElementById("UserServiceLine");
                        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                        localStorage.setItem("ActionClicked", true);
                        localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                        localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                        //////NikhilD Added below code for the latest changes
                    }
                });

            }
            else if (status == "On Hold") {

                approvedSuccess = 1;
                var IdeaStatus = '';
                var ValuePairs = '';
                if (hdnIdeaStatus.indexOf("L1") >= 0) {
                    IdeaStatus = "OnHold from L1";
                    var L1ActionDate = new Date();
                    L1ActionDate = ISODateStringActionDate(L1ActionDate);
                    var L1Owner = userEmail; //IdeaStatus;
                    var L1Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L1ActionDate", L1ActionDate], ["L1Owner", L1Owner], ["L1Comment", L1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L1Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                    IdeaStatus = "OnHold from L2";
                    var L2ActionDate = new Date();
                    L2ActionDate = ISODateStringActionDate(L2ActionDate);
                    var L2Owner = userEmail; //IdeaStatus;
                    var L2Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L2ActionDate", L2ActionDate], ["L2Owner", L2Owner], ["L2Comment", L2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L2Comment]];
                }
                else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                    IdeaStatus = "OnHold from L3";
                    var L3ActionDate = new Date();
                    L3ActionDate = ISODateStringActionDate(L3ActionDate);
                    var L3Owner = userEmail; //IdeaStatus;
                    var L3Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["L3ActionDate", L3ActionDate], ["L3Owner", L3Owner], ["L3Comment", L3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + L3Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F1") >= 0) {
                    IdeaStatus = "OnHold from F1";
                    var F1ActionDate = new Date();
                    F1ActionDate = ISODateStringActionDate(F1ActionDate);
                    var F1Owner = userEmail; //IdeaStatus;
                    var F1Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F1ActionDate", F1ActionDate], ["F1Owner", F1Owner], ["F1Comment", F1Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F1Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F2") >= 0) {
                    IdeaStatus = "OnHold from F2";
                    var F2ActionDate = new Date();
                    F2ActionDate = ISODateStringActionDate(F2ActionDate);
                    var F2Owner = userEmail; //IdeaStatus;
                    var F2Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F2ActionDate", F2ActionDate], ["F2Owner", F2Owner], ["F2Comment", F2Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F2Comment]];
                }
                else if (hdnIdeaStatus.indexOf("F3") >= 0) {
                    IdeaStatus = "OnHold from F3";
                    var F3ActionDate = new Date();
                    F3ActionDate = ISODateStringActionDate(F3ActionDate);
                    var F3Owner = userEmail; //IdeaStatus;
                    var F3Comment = txtComments;

                    var getApprovalLevel = CheckUndefinedORNull(IdeaStatus.split(' ')[2]);


                    ValuePairs = [["IdeaScope", selectedTab], ["IdeaStatus", IdeaStatus], ["F3ActionDate", F3ActionDate], ["F3Owner", F3Owner], ["F3Comment", F3Comment], ["StatusComment", "~Owner :` " + getApprovalLevel + " ~Name : `" + commentorName + " ~Action : `" + status + " ~^Comments : `" + F3Comment]];
                }

                $().SPServices({
                    operation: "UpdateListItems",
                    async: false,
                    batchCmd: "Update",
                    listName: ListName,
                    ID: hdnIdeaID,
                    valuepairs: ValuePairs,
                    completefunc: function (xData, Status) {
                        //////NikhilD Added below code for the latest changes
                        var UserVertical = document.getElementById("UserVertical");
                        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                        var UserServiceLine = document.getElementById("UserServiceLine");
                        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                        localStorage.setItem("ActionClicked", true);
                        localStorage.setItem("ActionClickedVerticalName", UserVerticalValue);
                        localStorage.setItem("ActionClickedServiceLine", UserServiceLineValue);
                        //////NikhilD Added below code for the latest changes
                    }
                });

            }

            if (approvedSuccess == 1) {
                $("#txtComments").val('');
                $("#IdeaModal").modal('hide');

                var hdnNewOtherIdeas = $('#hdnNewOtherIdeas').val();

                if (hdnNewOtherIdeas == "New Idea") {
                    GetNewIdeas();
                }
                else if (hdnNewOtherIdeas == "Other Idea") {
                    //  GetOtherIdeas();
                }

                window.location.href = "/group/ThinkBox/Pages/ApprovalIdeas.aspx";

                ExpandCollapse();
            }
        }
        else {

            $("#txtComments").focus();
            $("#valtxtComments").show();

            //alert("Comment is Mandatory.");
        }
    }

    function GetOtherIdeasAll() {

        GetFilteredDataOtherIdeas();

        if (PrimaryVerticalName != undefined) {
            var approvalDetails = new Array();
            approvalDetails = GetAllApprovalDetailsVerticalandServiceLine(approvalDetails);
            if (approvalDetails.length != 0) {
                MyFilteredOtherIdeas();
            }
            else {
                $("#OtherIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
            }
        }
        $(".paginationjs").pagination('destroy');
        MyFilteredOtherIdeas();

    }

    //GetFilterDataOtherIdeas

    function GetFilteredDataOtherIdeas() {
        $(".paginationjs").pagination('destroy');
       
        var otherText = $('#txtOtIdea').val();

        var approvalDetails = new Array();
        approvalDetails = GetAllApprovalDetails(approvalDetails);
        var i, len;
        len = approvalDetails.length;

        for (i = 0, len; i < len; i++) {
            if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                checkL3 = "exists";
            }
        }

        if ((PrimaryVerticalName == "Technology SSC" || PrimaryVerticalName == "TSSI - Networks") && (checkL3)) {
            var OtherCategory = document.getElementById("list_CategoryOther");
            var VerticalValue = OtherCategory.options[OtherCategory.selectedIndex].text;
            var ServiceLine = document.getElementById("list_Status");
            var ServiceLineValue = ServiceLine.options[ServiceLine.selectedIndex].text;
        }

        var OtherStatus = document.getElementById("list_PendingWith");
        var statusName = OtherStatus.options[OtherStatus.selectedIndex].text;

        var fromDateOther = $("#fromDateOther").val(); //.datepicker({ dateFormat: 'dd,MM,yyyy' }).val();
        var toDateOther = $("#toDateOther").val(); //.datepicker({ dateFormat: 'dd,MM,yyyy' }).val();	

        if (isValidDate(fromDateOther)) {

            var fieldsToRead = "<ViewFields>" +
                                   "<FieldRef Name='LinkTitle' />" +
                                   "<FieldRef Name='IdeaDescription' />" +
                                   "<FieldRef Name='ID' />" +
                                   "<FieldRef Name='TotalInvestors' />" +
                                   "<FieldRef Name='TotalFundings' />" +
                                   "<FieldRef Name='Created' />" +
                                   "<FieldRef Name='Modified' />" +
                                   "<FieldRef Name='ManagerID' />" +
                                   "<FieldRef Name='IdeaStatus' />" +
                                   "<FieldRef Name='Author' />" +
                                   "<FieldRef Name='IdeaNumber' />" +
                                   "<FieldRef Name='RaisedBy' />" +
                                   "</ViewFields>";

            if (isValidDate(toDateOther)) {

                if ((fromDateOther) && (toDateOther)) {

                    if (VerticalValue == "Technology SSC" || VerticalValue == "TSSI - Networks") {
                        var approvalDetails = new Array();
                        approvalDetails = GetAllApprovalDetailsVerticalandServiceLine(approvalDetails);
                        if (approvalDetails.length != 0) {
                            var method = "GetListItems";

                            var ListName = "V-Ideas";
                            /*var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Created' />" +
                                "<FieldRef Name='Modified' />" +
                                "<FieldRef Name='ManagerID' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                "</ViewFields>";*/
                            $("#OtherIdeasTable").empty();

                            var query = GetOtherIdeasByStatusAndRoleFilter(approvalDetails, VerticalValue, statusName, ServiceLineValue);

                            $().SPServices({
                                operation: method,
                                async: false,
                                listName: ListName,
                                CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                                CAMLViewFields: fieldsToRead,
                                CAMLQuery: query,

                                completefunc: function (xData, Status) {
                                    arrGetFilteredOtherDataNewIdeas = [];
                                    if ($(xData.responseXML).SPFilterNode("z:row").length > 0) {
                                        $(xData.responseXML).SPFilterNode("z:row").each(function () {
                                            if (fromDateOther && toDateOther) {
                                                var CreatedDate = $(this).attr("ows_Created").split(" ")[0];
                                                CreatedDate = CreatedDate.substr(0, 10).split("-");
                                                CreatedDate = CreatedDate[1] + "/" + CreatedDate[2] + "/" + CreatedDate[0];

                                                if (Date.parse(CreatedDate) >= Date.parse(fromDateOther) && Date.parse(CreatedDate) <= Date.parse(toDateOther)) // && IdeaStatus = selectedText)
                                                {
                                                    var IdeaNumber = $(this).attr("ows_IdeaNumber");
                                                    var IdeaAuth = $(this).attr("ows_Author");
                                                    var GetFilteredDataOtherIdeas = {

                                                        "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                                        "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                                        "IdeaId": $(this).attr("ows_ID"),
                                                        "TotalInvestors": Math.round($(this).attr("ows_TotalInvestors")),
                                                        "TotalFundings": Math.round($(this).attr("ows_TotalFundings")),
                                                        "Modified": $(this).attr("ows_Modified"),
                                                        "ManagerID": $(this).attr("ows_ManagerID"),
                                                        "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                                        "IdeaAuth": $(this).attr("ows_Author"),
                                                        "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                                        "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                                        "RaisedBy": $(this).attr("ows_RaisedBy"),

                                                    };
                                                    arrGetFilteredOtherDataNewIdeas.push(GetFilteredDataOtherIdeas);
                                                }
                                            }

                                        });
                                    }
                                }
                            });
                        } else {
                            $("#OtherIdeasTable").empty();
                        }
                    } else {

                        var manager = $().SPServices.SPGetCurrentUser({
                            fieldName: "AccountName",
                            debug: false
                        });

                        if (approvalDetails.length == 0) {
                            var query;

                            if (statusName == "Reject") {
                                query = "<Query><Where><And><Or><And>";
                                query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L1</Value></Eq></And>";
                                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L2</Value></Eq></Or>";
                                query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq></And></Where><OrderBy><FieldRef Name='Modified' Ascending='False' /></OrderBy></Query>";
                            } else if (statusName == "On Hold") {
                                query = "<Query><Where><And><Or><And>";
                                query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Onhold from L1</Value></Eq></And>";
                                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Onhold from L2</Value></Eq></Or>";
                                query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq></And></Where><OrderBy><FieldRef Name='Modified' Ascending='False' /></OrderBy></Query>";
                            }

                            var method = "GetListItems";
                            var ListName = "V-Ideas";

                            /*var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Created' />" +
                                "<FieldRef Name='Modified' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='ManagerID' />" +
                                "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                "</ViewFields>";*/

                            $("#OtherIdeasTable").empty();

                            $().SPServices({
                                operation: method,
                                async: false,
                                listName: ListName,
                                CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                                CAMLViewFields: fieldsToRead,
                                CAMLQuery: query,

                                completefunc: function (xData, Status) {
                                    arrGetFilteredOtherDataNewIdeas = [];
                                    $(xData.responseXML).SPFilterNode("z:row").each(function () {
                                        if (fromDateOther && toDateOther) {
                                            var CreatedDate = $(this).attr("ows_Created").split(" ")[0];
                                            CreatedDate = CreatedDate.substr(0, 10).split("-");
                                            CreatedDate = CreatedDate[1] + "/" + CreatedDate[2] + "/" + CreatedDate[0];

                                            if (Date.parse(CreatedDate) >= Date.parse(fromDateOther) && Date.parse(CreatedDate) <= Date.parse(toDateOther)) // && IdeaStatus = selectedText)
                                            {

                                                var IdeaNumber = $(this).attr("ows_IdeaNumber");
                                                var IdeaAuth = $(this).attr("ows_Author");
                                                var GetFilteredDataOtherIdeas = {

                                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                                    "IdeaId": $(this).attr("ows_ID"),
                                                    "TotalInvestors": Math.round($(this).attr("ows_TotalInvestors")),
                                                    "TotalFundings": Math.round($(this).attr("ows_TotalFundings")),
                                                    "Modified": $(this).attr("ows_Modified"),
                                                    "ManagerID": $(this).attr("ows_ManagerID"),
                                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                                    "IdeaAuth": $(this).attr("ows_Author"),
                                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                                    "RaisedBy": $(this).attr("ows_RaisedBy"),

                                                };

                                                arrGetFilteredOtherDataNewIdeas.push(GetFilteredDataOtherIdeas);

                                            }
                                        }

                                    });
                                }
                            });

                        }
                        if (PrimaryVerticalName != undefined) {
                            var approvalDetails = new Array();
                            approvalDetails = GetAllApprovalDetailsVerticalandServiceLine(approvalDetails);
                        } else if ((PrimaryVerticalName != "Technology SSC" || PrimaryVerticalName != "TSSI - Networks") && (checkL3)) {
                            var approvalDetails = new Array();
                            approvalDetails = GetAllApprovalDetailsVerticalandServiceLine(approvalDetails);
                        }
                        if (approvalDetails.length != 0) {
                            var OtherCategory = document.getElementById("list_CategoryOther");
                            var VerticalValue = OtherCategory.options[OtherCategory.selectedIndex].text;

                            var ServiceLine = document.getElementById("list_Status");
                            var ServiceLineValue = ServiceLine.options[ServiceLine.selectedIndex].text;

                            var query = GetOtherIdeasByStatusAndRoleFilterForManager(approvalDetails, VerticalValue, statusName, ServiceLineValue);
                            var method = "GetListItems";
                            var ListName = "V-Ideas";

                            /*var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Created' />" +
                                "<FieldRef Name='Modified' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='ManagerID' />" +
                                "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                "</ViewFields>";*/

                            $("#OtherIdeasTable").empty();

                            $().SPServices({
                                operation: method,
                                async: false,
                                listName: ListName,
                                CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                                CAMLViewFields: fieldsToRead,
                                CAMLQuery: query,

                                completefunc: function (xData, Status) {
                                    arrGetFilteredOtherDataNewIdeas = [];
                                    $(xData.responseXML).SPFilterNode("z:row").each(function () {
                                        if (fromDateOther && toDateOther) {
                                            var CreatedDate = $(this).attr("ows_Created").split(" ")[0];
                                            CreatedDate = CreatedDate.substr(0, 10).split("-");
                                            CreatedDate = CreatedDate[1] + "/" + CreatedDate[2] + "/" + CreatedDate[0];

                                            if (Date.parse(CreatedDate) >= Date.parse(fromDateOther) && Date.parse(CreatedDate) <= Date.parse(toDateOther)) // && IdeaStatus = selectedText)
                                            {

                                                var IdeaNumber = $(this).attr("ows_IdeaNumber");
                                                var IdeaAuth = $(this).attr("ows_Author");
                                                var GetFilteredDataOtherIdeas = {

                                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                                    "IdeaId": $(this).attr("ows_ID"),
                                                    "TotalInvestors": Math.round($(this).attr("ows_TotalInvestors")),
                                                    "TotalFundings": Math.round($(this).attr("ows_TotalFundings")),
                                                    "Modified": $(this).attr("ows_Modified"),
                                                    "ManagerID": $(this).attr("ows_ManagerID"),
                                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                                    "IdeaAuth": $(this).attr("ows_Author"),
                                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                                    "RaisedBy": $(this).attr("ows_RaisedBy"),
                                                };
                                                arrGetFilteredOtherDataNewIdeas.push(GetFilteredDataOtherIdeas);
                                            }
                                        }
                                    });
                                }
                            });
                        }
                    }
                } else {
                    //alert("Date range is mandatory.");
                    $("#valfromDateOther").show();
                    $("#valfromDateOther").text("Date range is mandatory.");
                }
                ExpandCollapse();
            } else {
                $("#valtoDateOther").show();
                $("#valtoDateOther").text("To date is not valid date.");
                //alert("To date is not valid date.");
            }
        } else {
            //alert("Select date range.");
            $("#valfromDateOther").show();
            $("#valfromDateOther").text("Select date range.");
        }
    }


    /* Get filtered Other Ideas*/
    function GetFilteredDataNewIdeas() {
	
	
        query2 = "";
        if ($(".paginationjs").html() != '') {
            $(".paginationjs").pagination('destroy');
        }
        $("#NewIdeasTable").empty();
        var newNextDayFilteredDateTime = ISODateStringChal(new Date(new Date().setDate(new Date().getDate() + 1)));
        arrGetFilteredDataNewIdeas = [];
        NewArrGetFilteredDataNewIdeas = [];

        IsfilteredData = true;
        var UserVertical = document.getElementById("UserVertical");
        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
        var UserServiceLine = document.getElementById("UserServiceLine");
        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

        if (Vertical == UserVerticalValue) {
            var data = "";
            var UniuqueapprovalDetails = new Array();

            UniuqueapprovalDetails = GetAllApprovalDetailsByVerticalAndServiceLine();

            if (UniuqueapprovalDetails.length != 0) {

                var ListName = "V-Ideas";
                var method = "GetListItems";
                var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='IdeaLever' />" +
                                "<FieldRef Name='VIdeaType' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='VerticalName' />" +
                                "<FieldRef Name='Modified' />" +
                                "<FieldRef Name='ProblemStatement' />" +
                                "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                "<FieldRef Name='IdeaServiceLine' />" +
                                "</ViewFields>";

                var query = '';

                var approvalDetails = new Array();
                approvalDetails = GetAllApprovalDetails(approvalDetails);

                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }
                else {
                    crossFunctionText = "o";
                }

                var query1 = "";
                //var checkL3 = "";
                var i, len;
                var end = "";
                len = approvalDetails.length;
                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                var UniuqueapprovalDetails = new Array();
                UniuqueapprovalDetails = GetAllApprovalDetailsByVerticalAndServiceLine();
                var j, uniqueLen;
                uniqueLen = UniuqueapprovalDetails.length;

                if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {
                    for (j = 0, uniqueLen; j < uniqueLen; j++) {
                        if (UniuqueapprovalDetails[j].split('\\')[2].indexOf("L3") >= 0) {
                            checkL3 = "exists";
                        }
                        if (j == 0 || j == uniqueLen - 1) {
                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location == "All") {
                                    query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And>";
                                }
                                else {

                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And></And>";
                                }

                            }

                            else {
                                if (UniuqueapprovalDetails[j].split('\\')[2] == "L1") {
                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else if (Location == "All") {
                                    query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else {
                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                }


                            }
                        }
                        else {
                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location == "All") {
                                    query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And>";
                                }
                                else {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And></And>";
                                }
                            }
                            else {
                                if (UniuqueapprovalDetails[j].split('\\')[2] == "L1") {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else if (Location == "All") {
                                    query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }

                                else {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                }
                            }
                        }
                        if (j < uniqueLen - 1) {
                            end += "</Or>";
                        }

                    }

                }
                else {
                    for (j = 0, uniqueLen; j < uniqueLen; j++) {
                        if (UniuqueapprovalDetails[j].split('\\')[2].indexOf("L3") >= 0) {
                            checkL3 = "exists";
                        }
                        if (j == 0 || j == uniqueLen - 1) {
                            query1 += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                        }
                        else {
                            query1 += "<Or><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                        }
                        if (j < uniqueLen - 1) {
                            end += "</Or>";
                        }
                    }
                }
                query1 += end;


                if ($("#txtSearch").val() != "") {
                    query2 = "<And><Or><Contains><FieldRef Name='Title' /><Value Type='Text'>" + $('#txtSearch').val() + "</Value></Contains><Eq><FieldRef Name='ID' /><Value Type='Number'>" + $('#txtSearch').val() + "</Value></Eq></Or>";
                }

                for (j = 0, uniqueLen; j < uniqueLen; j++) {
                    if (checkL3 == "exists") {


                        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {

                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }

                            query = query + query1 + "</And>";

                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location != "All") {
                                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                                }

                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And></Or></Or>";

                                if (Location != "All") {
                                    query += "</And></Or>";
                                }
                                else {
                                    query += "</Or>";
                                }
                            }
                            else {
                                if (Location != "All") {
                                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                                }

                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And></Or></Or>";
                                if (Location != "All") {
                                    query += "</And></Or>";
                                }
                                else {
                                    query += "</Or>";
                                }
                            }

                        }
                        else {
                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }

                            query = query + query1 + "</And>";

                            query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                            query += "<And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                            query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                            query += "<And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                            query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                            query += "<And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></Or></Or></Or></And>";

                            query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[5] + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></And></And></Or>";
                        }

                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                        query += "</And></And>";
                        query += "</And>";
                        query += "</Or></Or></Or>";

                        query += "</Or>";

                        if ($("#txtSearch").val() != "") {
                            query += "</And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                        else {
                            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                    }
                    else {

                        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {
                            query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }
                            query = query + query1 + "</And>";

                        }
                        else {
                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }
                            query = query + query1 + "</And>";

                            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></And></And></Or>";
                        }

                        query += "<And><Or><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq></Or>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></Or>";

                        if ($("#txtSearch").val() != "") {
                            query += "</And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                        else {
                            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                    }
                }

                $().SPServices({
                    operation: method,
                    async: false,
                    listName: ListName,
                    CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                    CAMLViewFields: fieldsToRead,
                    CAMLQuery: query,
                    completefunc: function (xData, Status) {
                        arrGetFilteredDataNewIdeas = [];
                        if ($(xData.responseXML).SPFilterNode("z:row").length > 0) {
                            IsClicked = true;
                            $(xData.responseXML).SPFilterNode("z:row").each(function () {

                                var IdeaNumber = $(this).attr("ows_IdeaNumber");

                                var IdeaAuth = $(this).attr("ows_Author");
                                var GetFilteredDataNewIdeas = {

                                    "RaisedBy": $(this).attr("ows_RaisedBy"),
                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                    "IdeaId": $(this).attr("ows_ID"),
                                    "Modified": $(this).attr("ows_Modified"),
                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                    "IdeaAuth": $(this).attr("ows_Author"),
                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                    "IdeaCategory": $(this).attr("ows_IdeaLever"),
                                    "IdeaFunction": $(this).attr("ows_VIdeaType"),
                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                    "VIdeaType": $(this).attr("ows_VIdeaType"),
                                    "IdeaServiceLine": $(this).attr("ows_IdeaServiceLine"),
                                };
                                arrGetFilteredDataNewIdeas.push(GetFilteredDataNewIdeas);
                            });
                        }
                    }
                });
            }
            else {
                $("#NewIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
            }
        }
        else {
            var data = "";
            var manager = $().SPServices.SPGetCurrentUser({
                fieldName: "AccountName",
                debug: false
            });

            var method = "GetListItems";
            var ListName = "V-Ideas";

            var UniuqueapprovalDetails = new Array();

            UniuqueapprovalDetails = GetAllApprovalDetailsByVerticalAndServiceLine();

            if (UniuqueapprovalDetails.length != 0) {

                var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='IdeaLever' />" +
                                "<FieldRef Name='VIdeaType' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='VerticalName' />" +
                                 "<FieldRef Name='Modified' />" +
                                 "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                 "<FieldRef Name='IdeaServiceLine' />" +
                                "</ViewFields>";
                $("#NewIdeasTable").empty();

                var query = '';
                var approvalDetails = new Array();
                approvalDetails = GetAllApprovalDetails(approvalDetails);

                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }
                else {
                    crossFunctionText = "o";
                }
                var query1 = "";
                var checkL3 = "";
                var i, len;
                var end = "";
                len = approvalDetails.length;
                var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
                var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

                var UniuqueapprovalDetails = new Array();
                UniuqueapprovalDetails = GetAllApprovalDetailsByVerticalAndServiceLine();
                var j, uniqueLen;
                uniqueLen = UniuqueapprovalDetails.length;

                if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {
                    for (j = 0, uniqueLen; j < uniqueLen; j++) {
                        if (UniuqueapprovalDetails[j].split('\\')[2].indexOf("L3") >= 0) {
                            checkL3 = "exists";
                        }
                        if (j == 0 || j == uniqueLen - 1) {
                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location == "All") {
                                    query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And>";
                                }
                                else {

                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And></And>";
                                }
                            }
                            else {
                                if (UniuqueapprovalDetails[j].split('\\')[2] == "L1") {
                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else if (Location == "All") {
                                    query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else {
                                    query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                }


                            }
                        }
                        else {
                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location == "All") {
                                    query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And>";
                                }
                                else {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></And></And>";
                                }
                            }
                            else {
                                if (UniuqueapprovalDetails[j].split('\\')[2] == "L1") {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }
                                else if (Location == "All") {
                                    query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And>";
                                }

                                else {
                                    query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                }
                            }
                        }
                        if (j < uniqueLen - 1) {
                            end += "</Or>";
                        }

                    }

                }

                else {
                    for (j = 0, uniqueLen; j < uniqueLen; j++) {
                        if (UniuqueapprovalDetails[j].split('\\')[2].indexOf("L3") >= 0) {
                            checkL3 = "exists";
                        }
                        if (j == 0 || j == uniqueLen - 1) {
                            query1 += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";

                        }
                        else {
                            query1 += "<Or><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                        }
                        if (j < uniqueLen - 1) {
                            end += "</Or>";
                        }
                    }
                }
                query1 += end;

                if ($("#txtSearch").val() != "") {
                    query2 = "<And><Or><Contains><FieldRef Name='Title' /><Value Type='Text'>" + $('#txtSearch').val() + "</Value></Contains><Eq><FieldRef Name='ID' /><Value Type='Number'>" + $('#txtSearch').val() + "</Value></Eq></Or>";
                }


                for (j = 0, uniqueLen; j < uniqueLen; j++) {
                    if (checkL3 == "exists") {

                        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {

                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }

                            query = query + query1 + "</And>";

                            if (UniuqueapprovalDetails[j].split('\\')[3] == "Accelerate") {
                                if (Location != "All") {
                                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                                }

                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And></Or></Or>";

                                if (Location != "All") {
                                    query += "</And></Or>";
                                }
                                else {
                                    query += "</Or>";
                                }
                            }
                            else {
                                if (Location != "All") {
                                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                                }

                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And>";
                                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq>";
                                query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></And></And></Or></Or>";
                                if (Location != "All") {
                                    query += "</And></Or>";
                                }
                                else {
                                    query += "</Or>";
                                }
                            }

                        }
                        else {
                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";

                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }

                            query = query + query1 + "</And>";
                            query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                            query += " <And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                            query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                            query += " <And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And>";
                            query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                            query += " <And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            query += "<Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[1] + "</Value></Eq></And>";
                            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And></Or></Or></Or></And>";

                            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + UniuqueapprovalDetails[j].split('\\')[5] + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></And></And></And></Or>";
                        }

                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                        query += "</And></And>";
                        query += "</And>";
                        query += "</Or></Or></Or>";

                        query += "</Or>";

                        if ($("#txtSearch").val() != "") {
                            query += "</And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                        else {
                            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                    }

                    else {

                        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {
                            query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }
                            query = query + query1 + "</And>";

                        }
                        else {
                            query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
                            if (uniqueLen > 1) {
                                query += "<Or>";
                            }
                            query = query + query1 + "</And>";

                            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                            query += "<And><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></And></And></Or>";
                        }

                        query += "<And><Or><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq></Or>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + UniuqueapprovalDetails[j].split('\\')[2] + "</Value></Eq></And></Or>";

                        if ($("#txtSearch").val() != "") {
                            query += "</And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                        else {
                            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                        }
                    }
                }

                $().SPServices({
                    operation: method,
                    async: false,
                    listName: ListName,
                    CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                    CAMLViewFields: fieldsToRead,
                    CAMLQuery: query,

                    completefunc: function (xData, Status) {
                        arrGetFilteredDataNewIdeas = [];
                        if ($(xData.responseXML).SPFilterNode("z:row").length > 0) {
                            IsClicked = true;
                            $(xData.responseXML).SPFilterNode("z:row").each(function () {
                                var IdeaNumber = $(this).attr("ows_IdeaNumber");
                                var IdeaAuth = $(this).attr("ows_Author");
                                var GetFilteredDataNewIdeas = {

                                    "RaisedBy": $(this).attr("ows_RaisedBy"),
                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                    "IdeaId": $(this).attr("ows_ID"),
                                    "Modified": $(this).attr("ows_Modified"),
                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                    "IdeaAuth": $(this).attr("ows_Author"),
                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                    "IdeaCategory": $(this).attr("ows_IdeaLever"),
                                    "IdeaFunction": $(this).attr("ows_VIdeaType"),
                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                    "VIdeaType": $(this).attr("ows_VIdeaType"),
                                    "IdeaServiceLine": $(this).attr("ows_IdeaServiceLine"),
                                };
                                arrGetFilteredDataNewIdeas.push(GetFilteredDataNewIdeas);
                            });

                        }

                    }

                });
            }
            else {
                $("#NewIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
            }
        }
        MyFilteredDataNewIdeas();
    }

    function MyFilteredOtherIdeas() {
        var data = "";

        $.each(arrGetFilteredOtherDataNewIdeas, function (index, value) {


            var IdeaTitle = value.IdeaTitle;
            var IdeaDesc = value.IdeaDesc;
            var IdeaId = value.IdeaId;
            var IdeaNumber = value.IdeaNumber;

            var totalInvestors = value.TotalInvestors;
            var totalInvestment = value.TotalFundings;
            var IdeaAuth = value.IdeaAuth;
            var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");
            var IdeaStatus = value.IdeaStatus;
            var RaisedBy = value.RaisedBy;


            var passActionDetails = "" + IdeaStatus + "_" + IdeaId + "_" + RaisedBy + "";

            if (isNaN(totalInvestors)) {
                totalInvestors = 0;
            }
            if (isNaN(totalInvestment)) {
                totalInvestment = 0;
            }

            if (IdeaStatus.indexOf("L1") >= 0) {
                if (IdeaStatus == "Completed") {
                    data += "<div class='pi-content'><div style='width:73%' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center label-coins'><p><span style='width:70px;' class='tagideatxt'>Investors</span>:<b> " + totalInvestors + " </b> </p><p><span style='width:70px;' class='tagideatxt'>Coins</span>:<b> " + totalInvestment + " </b> </p><p style='width:158px !important;'><span style='width:'>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment' style='width:inherit'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p></div></div>";
                }
                else {
                    data += "<div class='pi-content'><div style='width:73%' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center label-coins'><p><span style='width:70px;' class='tagideatxt'>Investors</span>:<b> " + totalInvestors + " </b> </p><p><span style='width:70px;' class='tagideatxt'>Coins</span>:<b> " + totalInvestment + " </b> </p><p style='width:158px !important;'><span style='width:'>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment' style='width:inherit'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowOtherIdea(\"" + passActionDetails + "\")'>  Take Action</div></div></div>";
                }

            }
            else {
                if (IdeaStatus == "Completed") {
                    data += "<div class='pi-content'><div style='width:73%' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowOnlyIdeaDetails(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center label-coins'><p><span style='width:70px;' class='tagideatxt'>Investors</span>:<b> " + totalInvestors + " </b> </p><p><span style='width:70px;' class='tagideatxt'>Coins</span>:<b> " + totalInvestment + " </b> </p><p style='width:158px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment' style='width:158px;text-align:center;'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p></div></div>";
                }
                else {
                    data += "<div class='pi-content'><div style='width:73%' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowOnlyIdeaDetails(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center label-coins'><p><span style='width:70px;' class='tagideatxt'>Investors</span>:<b> " + totalInvestors + " </b> </p><p><span style='width:70px;' class='tagideatxt'>Coins</span>:<b> " + totalInvestment + " </b> </p><p style='width:158px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment' style='width:158px;text-align:center;'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowOtherIdea(\"" + passActionDetails + "\")'> Take Action</div></div></div>";
                }

            }

        });
        if (data) {
            $("#OtherIdeasTable").empty();
            var html2 = data;

            if ($(html2).length > 0) {
                $('.paginationjs').pagination({
                    dataSource: generateData2($(html2).length, html2),
                    pageSize: 5,
                    sync: false,
                    showPageNumbers: false,
                    showNavigator: true,
                    callback: function (data, pagination) {
                        var pgNumber = pagination.pageNumber;
                        var dtLen = $(html2).length;
                        if (dtLen < 6) {
                            $('.paginationjs li').hide();
                        }
                        if (pgNumber == pagination.totalPage) {
                            $('.paginationjs li:last').hide();
                        }
                        if (pgNumber == 1) {
                            $('.paginationjs li:first').hide();
                        }
                        $("<p class='pgNumber'>" + pgNumber + "</p>").insertAfter($('.paginationjs li:first'));
                        $("#OtherIdeasTable").html(data);

                        $('.paginationjs-nav').hide();
                    }
                })
            }
            else {
                $('.paginationjs ').hide();
            }

        }
        else {
            $("#OtherIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
        }

    }

    /* Validate Date Copy and Paste*/
    function checkDate(input) {
        var validformat = /^\d{2}\/\d{2}\/\d{4}$/ //Basic check for format validity
        var returnval = false
        if (!validformat.test(input.value))

            returnval == false
        else { //Detailed check for valid date ranges
            var monthfield = input.value.split("/")[0]
            var dayfield = input.value.split("/")[1]
            var yearfield = input.value.split("/")[2]
            var dayobj = new Date(yearfield, monthfield - 1, dayfield)
            if ((dayobj.getMonth() + 1 != monthfield) || (dayobj.getDate() != dayfield) || (dayobj.getFullYear() != yearfield))

                returnval == false
            else
                returnval = true
        }

        return returnval
    }

    /* Get Other Ideas By Status And Role Filter*/

    function GetOtherIdeasByStatusAndRoleFilter(approvalDetails, VerticalValue, statusName, ServiceLineValue) {
        var query = "";
        query2 = "";
        var qryEnd = "";

        var otherText = $('#txtOtIdea').val();

        if (otherText != "") {
            query2 = "<And><Or><Contains><FieldRef Name='Title' /><Value Type='Text'>" + otherText + "</Value></Contains><Eq><FieldRef Name='ID' /><Value Type='Number'>" + otherText + "</Value></Eq></Or>";
            qryEnd = "</And>";
        }

        if (statusName == "Reject") {
            if (approvalDetails.length == 1) {
                var IdeaStatus = "Rejected at " + approvalDetails[0].split('\\')[2];
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 2) {
                var crossFunctionText = '';

                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }
                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 3) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[2].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 4) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[3].split('\\')[2] + "</Value></Eq></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }

            if (approvalDetails.length == 5) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[4].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }

            if (approvalDetails.length == 6) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[4].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[5].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
        } else if (statusName == "On Hold") {
            if (approvalDetails.length == 1) {
                var IdeaStatus = "OnHold from " + approvalDetails[0].split('\\')[2];
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 2) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 3) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[2].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

                } else {
                    query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 4) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";


                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }

            if (approvalDetails.length == 5) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }
                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[4].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";


                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }

            if (approvalDetails.length == 6) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }
                query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                query += "<And>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[3].split('\\')[2] + "</Value></Eq>";
                query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[4].split('\\')[2] + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[5].split('\\')[2] + "</Value></Eq></Or></Or></Or></Or></Or>";
                query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";


                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
        } else if (statusName == "Completed") {
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }

            query = "<Query><Where>" + query2 + "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
            query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Completed</Value></Contains>";
            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";

            query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }
        return query;
    }

    /* Get Other Ideas By Status And Role Filter*/
    function GetOtherIdeasByStatusAndRoleFilterForManager(approvalDetails, VerticalValue, statusName, ServiceLineValue) {
        var query = "";
        query2 = "";
        var qryEnd = "";

        var otherText = $('#txtOtIdea').val();

        if (otherText != "") {
            query2 = "<And><Or><Contains><FieldRef Name='Title' /><Value Type='Text'>" + otherText + "</Value></Contains><Eq><FieldRef Name='ID' /><Value Type='Number'>" + otherText + "</Value></Eq></Or>";
            qryEnd = "</And>";
        }

        if (statusName == "Reject") {
            if (approvalDetails.length == 1) {
                var IdeaStatus = "Rejected at " + approvalDetails[0].split('\\')[2];
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 2) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 3) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[2].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected at " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rejected</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }
        }

        else if (statusName == "On Hold") {
            if (approvalDetails.length == 1) {
                var IdeaStatus = "OnHold from " + approvalDetails[0].split('\\')[2];
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Contains>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 2) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }

            if (approvalDetails.length == 3) {
                var crossFunctionText = '';
                if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                    crossFunctionText = "Cross function";
                }

                if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[2].split('\\')[2].indexOf("L3") >= 0)) {
                    query = "<Query><Where>" + query2 + "<Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>0</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Author' /><Value Type='Text'>" + leaderEmail + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from L3</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

                }
                else {
                    query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
                    query += "<And>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold from " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>OnHold</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
                    query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                }
            }
        }

        else if (statusName == "Completed") {
            var crossFunctionText = '';
            if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                crossFunctionText = "Cross function";
            }
            query = "<Query><Where>" + query2 + "<Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq>";
            query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value></Eq>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Completed</Value></Contains>";
            query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And></And></And>";
            query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Completed</Value></Contains>";
            query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
            query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq></And></And></Or>";
            query += qryEnd + "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }
        return query;
    }

    /* Show New Idea Details Only For L1 */
    function ShowNewIdeaDetailsOnlyForL1(TakeActionDetails) {
        var getText = "";
        IdeaStatus = TakeActionDetails.split('_')[0];
        IdeaID = TakeActionDetails.split('_')[1];
        RaisedBy = TakeActionDetails.split('_')[2];

        $("#myOnlyIdeaContent").empty();

        var ListName = "V-Ideas";
        var getText = "";
        var ChallengeID = 0;
        var sid = IdeaID;
        var method = "GetListItems";


        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + sid + "</Value></Eq></Where></Query>";

        $().SPServices({
            operation: method,
            async: false,

            listName: ListName,
            CAMLQueryOptions: "<QueryOptions><IncludeAttachmentUrls>TRUE</IncludeAttachmentUrls><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLViewFields: "<ViewFields Properties='True' />",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var id = $(this).attr("ows_ID");
                    var title = $(this).attr("ows_Title");
                    var IdeaNumber = $(this).attr("ows_IdeaNumber");
                    var IdeaDesc = CheckUndefinedORNull($(this).attr("ows_IdeaDescription"));
                    var EstimatedBenefitsInCost = Math.round($(this).attr("ows_EstimatedBenefitsInCost"));
                    var EstimatedBenefitsCostCurrency = $(this).attr("ows_EstimatedBenefitsCostCurrency");
                    var EstimatedBenefitsInHours = Math.round($(this).attr("ows_EstimatedBenefitsInHours"));
                    if (isNaN(EstimatedBenefitsInHours)) {
                        EstimatedBenefitsInHours = 0;
                    }

                    var VIdeaType = CheckUndefinedORNull($(this).attr("ows_VIdeaType"));

                    var IdeaServiceLine = CheckUndefinedORNull($(this).attr("ows_IdeaServiceLine"));
                    var IdeaService = CheckUndefinedORNull($(this).attr("ows_IdeaService"));
                    var IdeaLocation = CheckUndefinedORNull($(this).attr("ows_IdeaLocation"));


                    ChallengeID = Math.round($(this).attr("ows_ChallengeID")); //alert(ChallengeID);							

                    if (VIdeaType == "Cross function") {
                        if (EstimatedBenefitsCostCurrency == "SEL") {
                            EstimatedBenefitsCostCurrency = "";
                        }

                        getText = "<div class='popupBigBox'><div class='overflowHidden'> <button type='button' class='close' data-dismiss='modal'> <img src='/Group/thinkbox/Style library/Images/close_btn.png' /></button></div> <div class='dividerLine'> </div> <div class='popupSmBoxContent text-left' style='height: 300px; overflow-y: auto; overflow-x: hidden;'><p><b>" + IdeaNumber + " : " + title + "</b></p><br> <p><b>Idea Description:</b>" + IdeaDesc + "</p><br><p> <b>Estimated Benefits In Hours:</b>" + EstimatedBenefitsInHours + "</p><br><p><b>Estimated Benefits In Cost:</b>" + EstimatedBenefitsCostCurrency + " " + EstimatedBenefitsInCost + "</p>";

                    }
                    else {
                        getText = "<div class='popupBigBox'> <div class='overflowHidden'> <button type='button' class='close' data-dismiss='modal'> <img src='/Group/thinkbox/Style library/Images/close_btn.png' /></button></div> <div class='dividerLine'> </div> <div class='popupSmBoxContent text-left' style='height: 300px; overflow-y: auto; overflow-x: hidden;'><p><b>" + IdeaNumber + " : " + title + "</b></p><br> <p><b>Idea Description:</b>" + IdeaDesc + "</p><br><p> <b>Estimated Benefits In Hours:</b>" + EstimatedBenefitsInHours + "</p><br><p><b>Estimated Benefits In Cost:</b>" + EstimatedBenefitsCostCurrency + " " + EstimatedBenefitsInCost + "</p><br><p><b>Service Line:</b>" + IdeaServiceLine + "</p><br><p><b>Service:</b>" + IdeaService + "</p><br><p><b>Location:</b>" + IdeaLocation + "</p>";
                    }

                });
            }
        });

        var getTextNew = GetChallengebyIdeaIDNew(ChallengeID, "idea");
        if (getTextNew != undefined) {
            getText = getText + getTextNew;
        }

        $("#myOnlyIdeaContent").append(getText);
        $("#IdeaModalOnlyDetails").modal();
    }

    function GetChallengebyIdeaIDNew(ChallengeID, action) {
        var appendText;
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Challenges",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + ChallengeID + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='Title' /><FieldRef Name='Author' /><FieldRef Name='Description' /><FieldRef Name='TotalFundings' /></ViewFields>",
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var ChallengeID = $(this).attr("ows_ID");
                    var ChallengeTitle = $(this).attr("ows_Title");
                    var ChallengeDesc = $(this).attr("ows_Description");
                    var TotalFundings = Math.round($(this).attr("ows_TotalFundings"));
                    var ChallengeAuth = $(this).attr("ows_Author");
                    var ChallengeCreator = (ChallengeAuth.split('#')[5]).replace(/,,/g, ",");
                    if (action == 'idea') {

                        appendText = "<div class='taggedIdea'> <p>This Idea is tagged to:</p> <div class='grayBGChallenge'><p><b>Challenge " + ChallengeID + " : " + ChallengeTitle + " </b></p> <p><b class='inLineTxt'>Description:</b> " + ChallengeDesc + "</p> </div> </div> </div>";

                    }
                    else {

                        appendText = "<table class='table table-bordered'><tbody><tr><td><div><b>Challenge " + ChallengeID + ":" + ChallengeTitle + "</b></div><div>" + ChallengeDesc + "</div><div>By: " + ChallengeCreator + "</div></td><td><div>Ideas Tagged:taggedIdea</div><div>Ideas funded:fundedIdeas</div><div>Investment:" + TotalFundings + "</div></td></tr></div></div>";

                    }

                });
            }
        });
        return appendText;
    }

    /* Show All New Ideas */
    function GetNewIdeas() {

        if ($(".paginationjs").html() != '') {
            $(".paginationjs").pagination('destroy');
        }

        if (currentPageNo == 1) {
            jQuery('#pgBtnPrevious').hide();
        }

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });

        if (Vertical == "Technology SSC" || Vertical == "TSSI - Networks") {

            if (NewIdeasItemCount == true) {
                NewIdeascamlrowlimit = 100;
            }
            else {
                NewIdeascamlrowlimit = 5;
            }

            var data = "";
            var checkL3 = "";
            var approvalDetails = new Array();
            approvalDetails = GetAllApprovalDetailsByVerticalAndServiceLine(approvalDetails);
            var i, len;
            len = approvalDetails.length;

            for (i = 0, len; i < len; i++) {
                if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                    checkL3 = "exists";
                }
            }

            if ((PrimaryVerticalName != "Technology SSC" && PrimaryVerticalName != "TSSI - Networks") && (!checkL3)) {
                $("#MyIdeaTable").hide();
            }

            if (approvalDetails.length != 0) {

                var ListName = "V-Ideas";
                var method = "GetListItems";
                var fieldsToRead = "<ViewFields>" +
                                "<FieldRef Name='LinkTitle' />" +
                                "<FieldRef Name='IdeaDescription' />" +
                                "<FieldRef Name='ID' />" +
                                "<FieldRef Name='TotalInvestors' />" +
                                "<FieldRef Name='TotalFundings' />" +
                                "<FieldRef Name='Author' />" +
                                "<FieldRef Name='IdeaLever' />" +
                                "<FieldRef Name='VIdeaType' />" +
                                "<FieldRef Name='IdeaStatus' />" +
                                "<FieldRef Name='VerticalName' />" +
                                "<FieldRef Name='Modified' />" +
                                "<FieldRef Name='ProblemStatement' />" +
                                "<FieldRef Name='IdeaNumber' />" +
                                "<FieldRef Name='RaisedBy' />" +
                                "<FieldRef Name='IdeaServiceLine' />" +
                                "</ViewFields>";


                var query = GetNewIdeasByStatusAndRole(approvalDetails, PrimaryVerticalName, PrimaryServiceLineName, leaderEmail);

                $().SPServices({
                    operation: method,
                    async: false,
                    listName: ListName,
                    CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                    CAMLViewFields: fieldsToRead,
                    CAMLRowLimit: NewIdeascamlrowlimit,
                    CAMLQuery: query,
                    completefunc: function (xData, Status) {
                        arrGetnewIdeas = [];
                        if ($(xData.responseXML).SPFilterNode("z:row").length > 0) {
                            $(xData.responseXML).SPFilterNode("z:row").each(function () {

                                var IdeaNumber = $(this).attr("ows_IdeaNumber");

                                var IdeaAuth = $(this).attr("ows_Author");
                                var IdeaStatus = $(this).attr("ows_IdeaStatus");
                                var IdeaId = $(this).attr("ows_ID");
                                var RaisedBy = $(this).attr("ows_RaisedBy");

                                var objGetNewIdeas = {
                                    "RaisedBy": $(this).attr("ows_RaisedBy"),
                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                    "IdeaId": $(this).attr("ows_ID"),
                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                    "Modified": $(this).attr("ows_Modified"),
                                    "IdeaAuth": $(this).attr("ows_Author"),
                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                    "IdeaCategory": $(this).attr("ows_IdeaLever"),
                                    "IdeaFunction": $(this).attr("ows_VIdeaType"),
                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                    "VIdeaType": $(this).attr("ows_VIdeaType"),
                                    "IdeaServiceLine": $(this).attr("ows_IdeaServiceLine"),
                                };
                                arrGetnewIdeas.push(objGetNewIdeas);
                            });
                        }

                    }
                });
            }
        }
        else {

            var checkL3 = "";
            var approvalDetails = new Array();
            approvalDetails = GetAllApprovalDetails(approvalDetails);
            var i, len;
            len = approvalDetails.length;

            for (i = 0, len; i < len; i++) {
                if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                    checkL3 = "exists";
                }
            }
            if ((PrimaryVerticalName != "Technology SSC" || PrimaryVerticalName != "TSSI - Networks") && (!checkL3)) {
                $("#MyIdeaTable").hide();
            }
            var data = "";


            var manager = $().SPServices.SPGetCurrentUser({
                fieldName: "AccountName",
                debug: false
            });


            if (NewIdeasItemCount == true) {
                NewIdeascamlrowlimit = 100;
            }
            else {
                NewIdeascamlrowlimit = 5;
            }


            //manager = manager.split('\\')[1];

            //query += "<And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>"+ manager +"</Value></Contains>";					
            //query += "<Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
            //query += "</And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

            var method = "GetListItems";
            var ListName = "V-Ideas";
            var fieldsToRead = "<ViewFields>" +
                            "<FieldRef Name='LinkTitle' />" +
                            "<FieldRef Name='IdeaDescription' />" +
                            "<FieldRef Name='ID' />" +
                            "<FieldRef Name='TotalInvestors' />" +
                            "<FieldRef Name='TotalFundings' />" +
                            "<FieldRef Name='Author' />" +
                            "<FieldRef Name='IdeaLever' />" +
                            "<FieldRef Name='VIdeaType' />" +
                            "<FieldRef Name='IdeaStatus' />" +
                            "<FieldRef Name='VerticalName' />" +
                            "<FieldRef Name='Modified' />" +
                            "<FieldRef Name='CrossFunction' />" +
                            "<FieldRef Name='IdeaNumber' />" +
                            "<FieldRef Name='RaisedBy' />" +
                            "<FieldRef Name='IdeaServiceLine' />" +
                            "</ViewFields>";
            //$("#NewIdeasTable").empty();

            var query = '';
            var approvalDetails = new Array();
            // approvalDetails = GetAllApprovalDetails(approvalDetails);
            if (checkL3) {
                approvalDetails = GetAllApprovalDetailsVerticalandServiceLine(approvalDetails);
            }

            if (approvalDetails.length != 0) {

                if (approvalDetails.length == 1) {
                    var IdeaStatus = "Waiting for " + approvalDetails[0].split('\\')[2];
                    var crossFunctionText = '';
                    if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                        crossFunctionText = "Cross function";
                    }

                    if (approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) {
                        query = "<Query><Where>";
                        query += "<Or><Or><And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Contains>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Eq></And>";
                        query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                        query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq></And></And></And></And>"
                        query += "</Or>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                        query += "</And></And>";
                        query += "</And>";
                        query += "</Or></Or></Or>";
                        query += "</Or></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                    }
                    else {
                        query = "<Query><Where>";
                        query += "<Or><And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Contains>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + IdeaStatus + "</Value></Eq></And>";
                        query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                        query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq></And></And></Or>";
                        query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                    }
                }
                else if (approvalDetails.length == 2) {
                    var crossFunctionText = '';
                    if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                        crossFunctionText = "Cross function";
                    }

                    if ((approvalDetails[0].split('\\')[2].indexOf("L3") >= 0) || (approvalDetails[1].split('\\')[2].indexOf("L3") >= 0)) {
                        query = "<Query><Where>";
                        query += "<Or><Or><And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Contains>";
                        query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or></And>";
                        query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                        query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq></And></And></Or>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<Or>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                        query += "</And>";
                        query += "</And>";
                        query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                        query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                        query += "</And></And>";
                        query += "</And>";
                        query += "</Or></Or></Or>";

                        query += "</Or></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                    }
                    else {
                        query = "<Query><Where>";
                        query += "<Or><And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Contains>";
                        query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[1].split('\\')[2] + "</Value></Eq></Or></And>";
                        query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                        query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                        query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq></And></And></Or>";
                        query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
                    }

                }
                else if (approvalDetails.length == 3) {

                    var crossFunctionText = '';
                    if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
                        crossFunctionText = "Cross function";
                    }

                    query = "<Query><Where>";
                    query += "<Or><Or><And><Contains><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Contains>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[0].split('\\')[2] + "</Value></Eq>";
                    query += "<Or><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[1].split('\\')[2] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for " + approvalDetails[2].split('\\')[2] + "</Value></Eq></Or></Or></And>";
                    query += "<And><Contains><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting</Value></Contains>";
                    query += "<And><Eq><FieldRef Name='VIdeaType' /><Value Type='Text'>" + crossFunctionText + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq></And></And></Or>";
                    query += "<Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                    query += "</And>";
                    query += "</And>";
                    query += "<Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                    query += "</And>";
                    query += "</And>";
                    query += "<Or>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                    query += "</And>";
                    query += "</And>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                    query += "</And></And>";
                    query += "</And>";
                    query += "</Or></Or></Or>";

                    query += "</Or></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

                }
            }
            else if ((PrimaryVerticalName != "Technology SSC" || PrimaryVerticalName != "TSSI - Networks") && (!checkL3)) {
                
				if($('#txtSearch').val()!=""){
					query = "<Query><Where><And>";
				}else{
					query = "<Query><Where>";
				}
				
                /*query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L1</Value></Eq></And>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L2</Value></Eq></Or>";
                query += "<Eq><FieldRef Name='ManagerID' /><Value Type='Text'>" + manager + "</Value></Eq></And>";
				*/
				query += "<Or><And><Eq><FieldRef Name='ManagerID' /><Value Type='Text'>"+ manager +"</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L2</Value></Eq></And><And><Eq><FieldRef Name='ManagerID' /><Value Type='Text'>"+ manager +"</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L1</Value></Eq></And></Or>";
				
				if($('#txtSearch').val()!=""){
					query += "<Or><Contains><FieldRef Name='Title' /><Value Type='Text'>" + $('#txtSearch').val() + "</Value></Contains><Eq><FieldRef Name='ID' /><Value Type='Number'>" + $('#txtSearch').val() + "</Value></Eq></Or></And>";
				}
				query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False' /></OrderBy></Query>";
            }
            if (query) {

                $().SPServices({
                    operation: method,
                    async: false,
                    listName: ListName,
                    CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
                    CAMLViewFields: fieldsToRead,
                    CAMLRowLimit: NewIdeascamlrowlimit,
                    CAMLQuery: query,

                    completefunc: function (xData, Status) {
                        arrGetnewIdeas = [];
                        if ($(xData.responseXML).SPFilterNode("z:row").length > 0) {
                            $(xData.responseXML).SPFilterNode("z:row").each(function () {

                                var IdeaNumber = $(this).attr("ows_IdeaNumber");

                                var IdeaAuth = $(this).attr("ows_Author");
                                var IdeaStatus = $(this).attr("ows_IdeaStatus");
                                var IdeaId = $(this).attr("ows_ID");
                                var RaisedBy = $(this).attr("ows_RaisedBy");

                                var objGetNewIdeas = {
                                    "RaisedBy": $(this).attr("ows_RaisedBy"),
                                    "IdeaTitle": $(this).attr("ows_LinkTitle"),
                                    "IdeaDesc": $(this).attr("ows_IdeaDescription"),
                                    "IdeaId": $(this).attr("ows_ID"),
                                    "IdeaNumber": $(this).attr("ows_IdeaNumber"),
                                    "Modified": $(this).attr("ows_Modified"),
                                    "IdeaAuth": $(this).attr("ows_Author"),
                                    "IdeaCreator": (IdeaAuth.split('#')[5]).replace(/,,/g, ","),
                                    "IdeaCategory": $(this).attr("ows_IdeaLever"),
                                    "IdeaFunction": $(this).attr("ows_VIdeaType"),
                                    "IdeaStatus": $(this).attr("ows_IdeaStatus"),
                                    "VIdeaType": $(this).attr("ows_VIdeaType"),
                                    "IdeaServiceLine": $(this).attr("ows_IdeaServiceLine"),

                                };
                                arrGetnewIdeas.push(objGetNewIdeas);

                            });
                        }
                    }

                });
            }
            else {
                $("#NewIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
            }

        }
    }

    function MyNewIdeas() {
        var data = "";

        $.each(arrGetnewIdeas, function (index, value) {

            var RaisedBy = value.RaisedBy;
            var IdeaTitle = value.IdeaTitle;
            var IdeaDesc = value.IdeaDesc;
            var IdeaId = value.IdeaId;
            var IdeaNumber = value.IdeaNumber;
            var IdeaAuth = value.IdeaAuth;
            var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");
            var IdeaCategory = value.IdeaCategory;
            var IdeaFunction = value.IdeaFunction;
            var IdeaStatus = value.IdeaStatus;
            var VIdeaType = value.VIdeaType;
            var IdeaServiceLine = value.IdeaServiceLine;


            var passActionDetails = "" + IdeaStatus + "_" + IdeaId + "_" + RaisedBy + "";

            var problemStatement = fetchProblemStatement(IdeaId);

            if (!IdeaCategory) {
                IdeaCategory = '';
            }
            if (!VIdeaType) {
                VIdeaType = '';

            }

            if (IdeaStatus == "Rework from F1" || IdeaStatus == "Rework from F2" || IdeaStatus == "Rework from F3") {
                data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowOnlyIdeaDetails(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p style='width:172px !important;'><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
            }
            else {
                if (IdeaStatus.indexOf("L1") >= 0) {
                    data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
                }
                else {
                    if (problemStatement) {
                        data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowOnlyIdeaDetails(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
                    }
                    else {
                        data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
                    }
                }
            }

        });
        if (data) {

            IsNewIdeasdataloaded = true;

            var html = data;
            NewIdeaLoadedData = $(html);
            if ($(html).length > 0) {
                $('.paginationjs').pagination({
                    dataSource: generateData($(html).length, html),
                    pageSize: 5,
                    showPageNumbers: false,
                    showNavigator: true,
                    callback: function (data, pagination) {
                        var pgNumber = pagination.pageNumber;
                        var dtLen = $(html).length;
                        if (dtLen < 6) {
                            $('.paginationjs li').hide();
                        }
                        if (pgNumber == pagination.totalPage) {
                            $('.paginationjs li:last').hide();
                        }
                        if (pgNumber == 1) {
                            $('.paginationjs li:first').hide();
                        }
                        $("<p class='pgNumber'>" + pgNumber + "</p>").insertAfter($('.paginationjs li:first'));
                        $("#NewIdeasTable").html(data);

                        $('.paginationjs-nav').hide();
                    }
                })
            }
            else {
                $('.paginationjs ').hide();
            }
        }
        else {
            $("#NewIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
        }

    }


    function ShowInvestorComments(ideaId) {
        $("#showinvestmentContent").empty();
        param = ideaId.split(';');
        var comments = GetIdeaGroupedComments(param[0]);
        if (comments.length == 69) {
            comments = "No existing entries.";
        }
        $("#showinvestmentContent").append(comments);
        $('.popupSmBox').parent().parent().parent().css('width', '600px');
        $('#showInvestmentDetails').modal();

    }

    /* Show Investment Details in table view */
    function GetIdeaGroupedComments(ideaId) {
        var gettext = "";
        var method = "GetVersionCollection";

        var list = "V-Ideas";
        var fieldsToRead = "<ViewFields></ViewFields>";
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + ideaId + "</Value></Eq></Where></Query>";
        gettext = "<div class='table-wrapper'><div class='table-responsive'>";
        $().SPServices({
            operation: method,
            async: false,

            strlistID: list,
            strlistItemID: ideaId,
            strFieldName: "StatusComment",
            completefunc: function (xData, Status) {
                $(xData.responseText).find("Version").each(function (i) {
                    var commentString = jQuery($(this).attr("StatusComment")).text().replace(/\~/g, "<b>");
                    commentString = commentString.replace(/\`/g, "</b>");
                    commentString = commentString.replace(/\^/g, "<br/>");
                    gettext += "<p>" + commentString + "</br><b>Modified:</b> " + $(xData.responseText).find("Version").attr('modified').split('T')[0] + "</p>";
                });
            }
        });
        gettext = gettext + "</div></div>";
        return gettext;
    };


    function MyFilteredDataNewIdeas() {
        var data = "";

        $.each(arrGetFilteredDataNewIdeas, function (index, value) {

            var RaisedBy = value.RaisedBy;
            var IdeaTitle = value.IdeaTitle;
            var IdeaDesc = value.IdeaDesc;
            var IdeaId = value.IdeaId;
            var IdeaNumber = value.IdeaNumber;
            var IdeaAuth = value.IdeaAuth;
            var IdeaCreator = (IdeaAuth.split('#')[5]).replace(/,,/g, ",");
            var IdeaCategory = value.IdeaCategory;
            var IdeaFunction = value.IdeaFunction;
            var IdeaStatus = value.IdeaStatus;
            var VIdeaType = value.VIdeaType;
            var IdeaServiceLine = value.IdeaServiceLine;

            var passActionDetails = "" + IdeaStatus + "_" + IdeaId + "_" + RaisedBy + "";

            var problemStatement = fetchProblemStatement(IdeaId);

            if (!IdeaCategory) {
                IdeaCategory = '';
            }
            if (!VIdeaType) {
                VIdeaType = '';

            }

            var passActionDetails = "" + IdeaStatus + "_" + IdeaId + "_" + RaisedBy + "";

            var problemStatement = fetchProblemStatement(IdeaId);

            if (!IdeaCategory) {
                IdeaCategory = '';
            }
            if (!VIdeaType) {
                VIdeaType = '';
            }

            if (IdeaStatus == "Rework from F1" || IdeaStatus == "Rework from F2" || IdeaStatus == "Rework from F3") {
                data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowOnlyIdeaDetails(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p style='width:172px !important;'><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
            }
            else if (IdeaStatus.indexOf("L1") >= 0) {
                data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
            }
            else if (IdeaStatus.indexOf("L2") >= 0) {
                data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
            }
            else {
                data += "<div class='pi-content'><div style='width:72%!important;' class='col-md-9 col-xs-9 PD-XS-RT border-right MR-SM-RT content-left-section height150'><h1><a href='#' onclick='ShowNewIdeaDetailsOnlyForL1(\"" + passActionDetails + "\")'>" + IdeaNumber + " : " + IdeaTitle + "</a></h1><p>" + IdeaDesc + "</p><div class='bottom-link'></div></div><div class='col-md-pull-4 col-xs-pull-3 rght-PI text-center long-label'><p style='width:172px !important;'><span class='tagideatxt'>ServiceLine&nbsp;:</span> <b> " + IdeaServiceLine + " </b></p><p><span class='tagideatxt'>Function&nbsp;:</span> <b> " + VIdeaType + " </b> </p></p><p style='width:172px !important;'><span>IdeaStatus&nbsp;:</span> <b> " + IdeaStatus + " </b> </p><p class='show-comment'><a href='#' id='' onclick='ShowInvestorComments(\"" + IdeaId + "\")')' >Show Comments</a></p><div type='button' id='Button1" + IdeaId + "' class='bttnComman bttnPurple' onclick='ShowNewIdea(\"" + passActionDetails + "\")'> <span class='leftTop'></span> <span class='rightTop'></span> <span class='rightBottom'></span> <span class='leftBottom'></span> Take Action</div></div></div>";
            }
        });
        if (data) {
            $("#NewIdeasTable").empty();
            var html1 = data;

            if ($(html1).length > 0) {
                $('.paginationjs').pagination({
                    dataSource: generateData1($(html1).length, html1),
                    pageSize: 5,
                    sync: false,
                    showPageNumbers: false,
                    showNavigator: true,
                    callback: function (data, pagination) {
                        var pgNumber = pagination.pageNumber;
                        var dtLen = $(html1).length;
                        if (dtLen < 6) {
                            $('.paginationjs li').hide();
                        }
                        if (pgNumber == pagination.totalPage) {
                            $('.paginationjs li:last').hide();
                        }
                        if (pgNumber == 1) {
                            $('.paginationjs li:first').hide();
                        }
                        $("<p class='pgNumber'>" + pgNumber + "</p>").insertAfter($('.paginationjs li:first'));
                        $("#NewIdeasTable").html(data);

                        $('.paginationjs-nav').hide();
                    }
                })
            }
            else {
                $('.paginationjs ').hide();
            }

        }
        else {
            $("#NewIdeasTable").html("<div class='EmptyMsg'>No Ideas Available ...</div>");
        }

    }

    /* Get New Ideas By Status And Role */
    function GetNewIdeasByStatusAndRole(approvalDetails, PrimaryVerticalName, PrimaryServiceLineName, leaderEmail) {

        var query;

        var crossFunctionText = '';
        if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
            crossFunctionText = "Cross function";
        }
        else {
            crossFunctionText = "o";
        }
        var query1 = "";
        var checkL3 = "";
        var i, len;
        var end = "";
        len = approvalDetails.length;

        for (i = 0, len; i < len; i++) {
            if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                checkL3 = "exists";
            }
            if (i == 0 || i == len - 1) {
                if (approvalDetails[i].split('\\')[3] == "Accelerate") {
                    if (Location == "All") {
                        query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq></And></And>";
                    }
                    else {

                        query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq></And></And></And>";
                    }

                }

                else {
                    if (approvalDetails[i].split('\\')[2] == "L1") {
                        query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And>";
                    }
                    else if (Location == "All") {
                        query1 += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And>";
                    }
                    else {
                        query1 += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And></And>";
                    }


                }
            }
            else {
                if (approvalDetails[i].split('\\')[3] == "Accelerate") {
                    if (Location == "All") {
                        query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq></And></And>";
                    }
                    else {
                        query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq></And></And></And>";
                    }
                }
                else {
                    if (approvalDetails[i].split('\\')[2] == "L1") {
                        query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And>";
                    }
                    else if (Location == "All") {
                        query1 += "<Or><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And>";
                    }

                    else {
                        query1 += "<Or><And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq><And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And></And>";
                    }
                }
            }
            if (i < len - 1) {
                end += "</Or>";
            }


        }
        query1 += end;
        for (i = 0, len; i < len; i++) {
            if (checkL3 == "exists") {

                query = "<Query><Where><Or><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                if (len > 1) {
                    query += "<Or>";
                }
                query = query + query1 + "</And>";
                if (approvalDetails[i].split('\\')[3] == "Accelerate") {
                    if (Location != "All") {
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                    }

                    query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                    query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And>";
                    query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>Non-CI</Value></Eq></And></And></And></Or></Or>";

                    if (Location != "All") {
                        query += "</And></Or>";
                    }
                    else {
                        query += "</Or>";
                    }
                }
                else {
                    if (Location != "All") {
                        query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                    }

                    query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F1</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And></And>";
                    query += "<Or><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F2</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And></And>";
                    query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Rework from F3</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq>";
                    query += "<And><Eq><FieldRef Name='CI_x002d_NonCI' /><Value Type='Text'>CI</Value></Eq>";
                    query += "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + PrimaryServiceLineName + "</Value></Eq></And></And></And></And></Or></Or>";
                    if (Location != "All") {
                        query += "</And></Or>";
                    }
                    else {
                        query += "</Or>";
                    }
                }

                query += "<Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                query += "</And>";
                query += "</And>";
                query += "<Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                query += "</And>";
                query += "</And>";

                //query += "<Or>";
                //query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                //query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                //query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for F1</Value></Eq>";
                //query += "</And>";
                //query += "</And>";

                //query += "<Or>";
                //query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                //query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                //query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for F2</Value></Eq>";
                //query += "</And>";
                //query += "</And>";

                //query += "<Or>";
                //query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                //query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq>";
                //query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for F3</Value></Eq>";
                //query += "</And>";
                //query += "</And>";

                query += "<Or>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq>";
                query += "</And>";
                query += "</And>";
                query += "<And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='Location' /><Value Type='Text'>" + Location + "</Value></Eq>";
                query += "<And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>Waiting for L3</Value></Eq><Eq><FieldRef Name='RaisedBy' /><Value Type='Choice'>Leader</Value></Eq>";
                query += "</And></And>";
                query += "</And>";
                query += "</Or></Or></Or>";


                query += "</Or>";
                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
            else {
                query = "<Query><Where><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + PrimaryVerticalName + "</Value></Eq>";
                if (len > 1) {
                    query += "<Or>";
                }
                query = query + query1 + "</And>";

                query += "<And><Or><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>All</Value></Eq>";
                query += "<Eq><FieldRef Name='Location' /><Value Type='Text'>All</Value></Eq></Or>";
                query += "<Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq></And></Or>";

                query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
            }
        }

        return query;

    }

    function GetNewIdeasByUserVerticalAndServiceLine(approvalDetails, UserVerticalValue, UserServiceLineValue, leaderEmail) {
        var query;


        //var IdeaStatus = "Waiting for " + approvalDetails[0].split('\\')[2];
        var crossFunctionText = '';
        if (approvalDetails[0].split('\\')[4].indexOf(1) >= 0) {
            crossFunctionText = "Cross function";
        }
        else {
            crossFunctionText = "Own function";
        }
        var query1 = "";
        var checkL3 = "";
        var i, len;
        var end = "";
        len = approvalDetails.length;

        for (i = 0, len; i < len; i++) {
            if (approvalDetails[i].split('\\')[2].indexOf("L3") >= 0) {
                checkL3 = "exists";
            }
            if (i == 0 || i == len - 1) {
                query1 += "<And><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And><Lt><FieldRef Name='Modified' /><Value IncludeTimeValue='True' Type='DateTime'>" + nextDayDateTime + "</Value></Lt></And>";

            }
            else {
                query1 += "<Or><And><And><Eq><FieldRef Name='IdeaLocation' /><Value Type='Text'>" + approvalDetails[i].split('\\')[1] + "</Value></Eq><And><Eq><FieldRef Name='IdeaStatus' /><Value Type='Choice'>" + "Waiting for " + approvalDetails[i].split('\\')[2] + "</Value></Eq><Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And></And><Lt><FieldRef Name='Modified' /><Value IncludeTimeValue='True' Type='DateTime'>" + nextDayDateTime + "</Value></Lt></And>";
            }
            if (i < len - 1) {
                end += "</Or>";
            }


        }
        query1 += end;
        if (checkL3 == "exists") {

            var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;
            var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;

            query = "<Query> <Where>" +
                 "<And><And>" +
             "<And><Eq>  <FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value> </Eq>" +
             "<Eq><FieldRef Name='IdeaLocation' /> <Value Type='Text'>" + approvalDetails[0].split('\\')[1] + "</Value> </Eq> </And>" +
             "<Eq><FieldRef Name='IdeaServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And><Lt><FieldRef Name='Modified' /><Value IncludeTimeValue='True' Type='DateTime'>" + nextDayDateTime + "</Value></Lt></And></Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";

        }
        else {
            query = "<Query><Where><Or><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq>";
            if (len > 1) {
                query += "<Or>";
            }
            query = query + query1 + "</And>";

            query += "</Where><OrderBy><FieldRef Name='Modified' Ascending='False'/></OrderBy></Query>";
        }

        return query;
    }
    /* Get All Approval Roles */
    function GetAllApprovalRoles() {
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var approvalRoles = new Array();

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='Role' /></ViewFields>",

            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    approvalRoles.push($(this).attr("ows_Role"));
                });
            }
        });

        return approvalRoles;
    }


    function GetAllApprovalDetailsVerticalandServiceLine() {

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var OtherCategory = document.getElementById("list_CategoryOther");
        var VerticalValue = OtherCategory.options[OtherCategory.selectedIndex].text;

        var ServiceLine = document.getElementById("list_Status");
        var ServiceLineValue = ServiceLine.options[ServiceLine.selectedIndex].text;

        var VerticalandServiceLine = new Array();

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><And><And><And><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + VerticalValue + "</Value></Eq><Eq><FieldRef Name='ServiceLine' /><Value Type='Text'>" + ServiceLineValue + "</Value></Eq></And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></And><Eq><FieldRef Name='Location0' /><Value Type='Text'>" + Location + "</Value></Eq></And></Where></Query>",

            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='Location' /><FieldRef Name='Role' /><FieldRef Name='ServiceLine' /><FieldRef Name='CrossFunction' /><FieldRef Name='Location0' /></ViewFields>",

            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    VerticalandServiceLine.push($(this).attr("ows_VerticalName") + "\\" + $(this).attr("ows_Location") + "\\" + $(this).attr("ows_Role") + "\\" + $(this).attr("ows_ServiceLine") + "\\" + $(this).attr("ows_CrossFunction") + "\\" + $(this).attr("ows_Location0"));
                });
            }
        });

        return VerticalandServiceLine;
    }

    /* Get All Approval Details */
    function GetAllApprovalDetails() {
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var approvalDetails = new Array();

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='Location0' /><Value Type='Text'>" + Location + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='Location' /><FieldRef Name='Role' /><FieldRef Name='ServiceLine' /><FieldRef Name='CrossFunction' /><FieldRef Name='Location0' /></ViewFields>",

            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    approvalDetails.push($(this).attr("ows_VerticalName") + "\\" + $(this).attr("ows_Location") + "\\" + $(this).attr("ows_Role") + "\\" + $(this).attr("ows_ServiceLine") + "\\" + $(this).attr("ows_CrossFunction") + "\\" + $(this).attr("ows_Location0"));
                });
            }
        });

        return approvalDetails;
    }

    function GetAllApprovalDetailsForNonTSSC() {
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var approvalDetails = new Array();

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><And><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='Location0' /><Value Type='Text'>" + Location + "</Value></Eq></And> <Eq> <FieldRef Name='PrimaryVerticalName' /><Value Type='Text'>" + Vertical + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='Location' /><FieldRef Name='Role' /><FieldRef Name='ServiceLine' /><FieldRef Name='CrossFunction' /><FieldRef Name='Location0' /></ViewFields>",

            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    approvalDetails.push($(this).attr("ows_VerticalName") + "\\" + $(this).attr("ows_Location") + "\\" + $(this).attr("ows_Role") + "\\" + $(this).attr("ows_ServiceLine") + "\\" + $(this).attr("ows_CrossFunction") + "\\" + $(this).attr("ows_Location0"));
                });
            }
        });

        return approvalDetails;
    }


    function GetAllApprovalDetailsByVerticalAndServiceLine() {
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var approvalDetails = new Array();
        var UserVertical = document.getElementById("UserVertical");
        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
        var UserServiceLine = document.getElementById("UserServiceLine");
        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><And><And><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And><Eq><FieldRef Name='ServiceLine' /><Value Type='Text'>" + UserServiceLineValue + "</Value></Eq></And><Eq><FieldRef Name='Location0' /><Value Type='Text'>" + Location + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='Location' /><FieldRef Name='Role' /><FieldRef Name='ServiceLine' /><FieldRef Name='CrossFunction' /><FieldRef Name='Location0' /></ViewFields>",

            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    approvalDetails.push($(this).attr("ows_VerticalName") + "\\" + $(this).attr("ows_Location") + "\\" + $(this).attr("ows_Role") + "\\" + $(this).attr("ows_ServiceLine") + "\\" + $(this).attr("ows_CrossFunction") + "\\" + $(this).attr("ows_Location0"));
                });
            }
        });

        return approvalDetails;
    }

    /* Show New Idea when Clicked in Take Action */
    function ShowNewIdea(TakeActionDetails) {
        GetIdeasByIDApproval(TakeActionDetails);
    }

    /* Show New Idea when Clicked on Idea Title*/
    function ShowOnlyIdeaDetails(TakeActionDetails) {
        GetOnlyIdeasDetailsByID(TakeActionDetails);
    }

    /* Fetch Location Name from Config List */
    function fetchLocationName(location) {
        var locationName;
        var query = "<Query><Where><Eq><FieldRef Name='Key' /><Value Type='Text'>" + location + "</Value></Eq></Where></Query>";
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Configuration List",
            CAMLViewFields: "<ViewFields><FieldRef Name='Key' /><FieldRef Name='Value' /></ViewFields>",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {

                    locationName = $(this).attr("ows_Value");

                });
            }
        });
        return locationName;
    }

    /* Fetch Problem Statement */
    function fetchProblemStatement(IdeaID) {

        var ListName = "V-Ideas";
        var problemStatement;
        var query = "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Number'>" + IdeaID + "</Value></Eq></Where></Query>";
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: ListName,
            CAMLViewFields: "<ViewFields><FieldRef Name='ProblemStatement' /></ViewFields>",
            CAMLQuery: query,
            CAMLRowLimit: 1,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    problemStatement = $(this).attr("ows_ProblemStatement");
                });
            }
        });
        return problemStatement;
    }

    /* Get all Improvement Lever */
    function GetAllImprovementLever() {
        //NikhilD commented below code
        //$("#list_CategoryL1ImprovementLever").empty();
        //$("#list_CategoryL1ImprovementLever").prepend("<option value=''> </option>").val('');
        //NikhilD commented above code
        //NikhilD commented below code
        //$("#list_CategoryL2ImprovementLever").empty();
        //$("#list_CategoryL2ImprovementLever").prepend("<option value=''> </option>").val('');
        //NikhilD commented above code

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Category",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",

            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ParentCategory' /><Value Type='Text'>ImprovementLever</Value></Eq></Where><OrderBy><FieldRef Name='ChildCategory' Ascending='true' /></OrderBy></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='ID' /><FieldRef Name='ParentCategory' /><FieldRef Name='ChildCategory' /><FieldRef Name='ModuleName' /><FieldRef Name='Scope' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    //Nikhild Commented below code
                    // CreateOption(document.getElementById("list_CategoryL1ImprovementLever"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                    //Nikhild Commented above code
                    //NikhilD commented below code
                    //CreateOption(document.getElementById("list_CategoryL2ImprovementLever"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                    //NikhilD commented below code

                });
            }
        });
    }

    /* Get all Implementation Efforts */
    function GetAllImplementationEfforts() {

        $("#list_CategoryL1ImplementationLevel").empty();
        $("#list_CategoryL1ImplementationLevel").prepend("<option value=''> </option>").val('');
        $("#list_CategoryL2ImplementationLevel").empty();
        $("#list_CategoryL2ImplementationLevel").prepend("<option value=''> </option>").val('');

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Category",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ParentCategory' /><Value Type='Text'>ImplementationEfforts</Value></Eq></Where><OrderBy><FieldRef Name='ChildCategory' Ascending='true' /></OrderBy></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='ID' /><FieldRef Name='ParentCategory' /><FieldRef Name='ChildCategory' /><FieldRef Name='ModuleName' /><FieldRef Name='Scope' /></ViewFields>",


            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    CreateOption(document.getElementById("list_CategoryL1ImplementationLevel"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                    CreateOption(document.getElementById("list_CategoryL2ImplementationLevel"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));

                });
            }
        });
    }

    /* Get all Opportunity Type */
    function GetAllOpportunityType() {

        $("#list_CategoryL1OpportunityType").empty();
        $("#list_CategoryL1OpportunityType").prepend("<option value=''> </option>").val('');
        $("#list_CategoryL2OpportunityType").empty();
        $("#list_CategoryL2OpportunityType").prepend("<option value=''> </option>").val('');
        $("#list_OpportunityType").empty();
        $("#list_OpportunityType").prepend("<option value=''> </option>").val('');


        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Category",
            CAMLQueryOptions: "<QueryOptions><ExpandUserField>True</ExpandUserField></QueryOptions>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ParentCategory' /><Value Type='Text'>OpportunityType</Value></Eq></Where><OrderBy><FieldRef Name='ChildCategory' Ascending='true' /></OrderBy></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='ID' /><FieldRef Name='ParentCategory' /><FieldRef Name='ChildCategory' /><FieldRef Name='ModuleName' /><FieldRef Name='Scope' /></ViewFields>",


            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    CreateOption(document.getElementById("list_CategoryL1OpportunityType"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                    CreateOption(document.getElementById("list_CategoryL2OpportunityType"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                    CreateOption(document.getElementById("list_OpportunityType"), $(this).attr("ows_ChildCategory"), $(this).attr("ows_ID"));
                });
            }
        });
    }

    /* Clear Al L3 Financial Controls */
    function DisabledAllL3FinancialControls() {

        document.getElementById("CFBenefitTypes").disabled = true;

        $("#HardTotalBenefits").prop('readonly', true);
        $("#PartnerTotalBenefits").prop('readonly', true);

        $("#EffortsSaved").prop('readonly', true);
        $("#PerhourEurocost").prop('readonly', true);
        $("#dtActualDateOfCompletion").prop('readonly', true);
        document.getElementById("dtActualDateOfCompletion").disabled = true;
        document.getElementById("list_OpportunityType").disabled = true;

        $("#finBenefitPeriod").prop('readonly', true);
        $("#monthBenefitPeriod").prop('readonly', true);
        $("#finSoftBenefitSaved").prop('readonly', true);
        $("#monthSoftBenefitSaved").prop('readonly', true);

        $("#finHardBenefitSaved").prop('readonly', true);
        $("#monthHardBenefitSaved").prop('readonly', true);

        $("#finTotalBenefits").prop('readonly', true);
        $("#monthOtherBenefitSaved").prop('readonly', true);

        $("#monthTotalBenefits").prop('readonly', true);
        $("#monthHoursSavedInYear").prop('readonly', true);

        $("#monthFTESaved").prop('readonly', true);
        $("#monthHeadCountSaved").prop('readonly', true);
    }

    /* Clear Al L3 Financial Controls */
    function ClearAllL3FinancialControls() {
        $('input[name="chkcheckbox"]').attr('checked', false);

        $("#HardTotalBenefits").val('');
        $("#PartnerTotalBenefits").val('');

        $("#EffortsSaved").val('');
        $("#PerhourEurocost").val('');
        $("#dtActualDateOfCompletion").val('');

        $("#finBenefitPeriod").val('');
        $("#monthBenefitPeriod").val('');
        $("#finSoftBenefitSaved").val('');
        $("#monthSoftBenefitSaved").val('');

        $("#finHardBenefitSaved").val('');
        $("#monthHardBenefitSaved").val('');

        $("#finTotalBenefits").val('');
        $("#monthOtherBenefitSaved").val('');

        $("#monthTotalBenefits").val('');
        $("#monthHoursSavedInYear").val('');

        $("#monthFTESaved").val('');
        $("#monthHeadCountSaved").val('');
    }

    /* Get Cost Centre ID */
    function fetchCostCentreID() {
        var CostCentreID;
        var listName;
        if (Location == "India") {
            listName = "EmployeeDetails";
        }
        else if (Location == "Egypt") {
            listName = "Employee Egypt";
        }
        else if (Location == "Romania") {
            listName = "Employee Romania";
        }

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: listName,
            CAMLViewFields: "<ViewFields><FieldRef Name='Level_x0020_06_x0020__x003a__x00' /><FieldRef Name='Cost_x0020_Centre_x0020_ID'/><FieldRef Name='Employee_x0020_Code'/></ViewFields>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='Title' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>",
            CAMLRowLimit: 1,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    CostCentreID = $(this).attr("ows_Cost_x0020_Centre_x0020_ID");
                });
            }
        });
        return CostCentreID;
    }

    $("#HardTotalBenefits").on("keyup", function () {
        $("#errorTotalHardBenefits").hide();
    });
    $("#finHardBenefitSaved").on("keyup", function () {
        $("#errorImplementation").hide();
    });
    $("#EffortsSaved").on("keyup", function () {
        $("#errorEffortsSaved").hide();
    });
    $("#PartnerTotalBenefits").on("keyup", function () {
        $("#errorTotalPartnerBenefit").hide();
    });
    $("#PerhourEurocost").on("keyup", function () {
        $("#errorPerHourCost").hide();
    });
    $("#monthOtherBenefitSaved").on("keyup", function () {
        $("#errorOtherBenefits").hide();
    });
    $("#dtL2ActualDateCompletion").on("keyup", function () {
        $("#errorAtualDateOfComp").hide();
    });
    $("#txtComments").on("keyup", function () {
        $("#errorCommentsBox").hide();
    });

    /* Get Cost Centre Per Hour Cost */
    function fetchCostCentrePerHourCost() {
        var CostCentreID = fetchCostCentreID();
        CostCentreID = CostCentreID.split('/')[1];

        var perHourCost;

        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "CostCenterDetails",
            CAMLViewFields: "<ViewFields><FieldRef Name='CostCentreID' /><FieldRef Name='PerHourCost' /></ViewFields>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='CostCentreID' /><Value Type='Text'>" + CostCentreID + "</Value></Eq></Where></Query>",
            CAMLRowLimit: 1,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {

                    perHourCost = Math.abs(($(this).attr("ows_PerHourCost")));

                });
            }
        });
        return perHourCost;
    }

    /*Check if Role is of DR*/
    function checkDr() {
        var reportingManager = "";
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        var query = "<Query><Where><Eq><FieldRef Name='EmployeeEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>";
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Direct Reportees",
            CAMLViewFields: "<ViewFields><FieldRef Name='ReportingtoEmail' /></ViewFields>",
            CAMLQuery: query,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {

                    reportingManager = $(this).attr("ows_ReportingtoEmail");

                });
            }
        });
        return reportingManager;
    }

    /*Check if Leader Role Email is of leader*/

    function checkIfLeaderApproval() {
        var leaderEmail;
        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Leaders",
            CAMLViewFields: "<ViewFields><FieldRef Name='Email' /></ViewFields>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq></Where></Query>",
            CAMLRowLimit: 1,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    //var role = ($(this).attr("ows_Leadertype"));
                    leaderEmail = ($(this).attr("ows_Email"));

                });
            }
        });
        return leaderEmail;
    }

    /* Fetch Data fom Configuration List */
    function fetchDatafromConfigListApproval(key) {
        var valueGBP = "";
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Configuration List",
            CAMLViewFields: "<ViewFields><FieldRef Name='Key' /><FieldRef Name='Value' /></ViewFields>",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='Key' /><Value Type='Text'>" + key + "</Value></Eq></Where></Query>",
            CAMLRowLimit: 1,
            completefunc: function (xData, Status) {
                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    valueGBP = $(this).attr("ows_Value");
                });
            }
        });

        return valueGBP;

    }

    var generateData = function (number, html) {
        var result = [];

        for (var i = 0; i < number; i++) {
            result.push($(html)[i]);
        }

        return result;
    };

    var generateData1 = function (number, html1) {
        var result = [];

        for (var i = 0; i < number; i++) {
            result.push($(html1)[i]);
        }

        return result;
    };

    var generateData2 = function (number, html2) {
        var result = [];

        for (var i = 0; i < number; i++) {
            result.push($(html2)[i]);
        }

        return result;
    };


    $("#list_CategoryBenefits").change(function () {
        var selCatBenValue = $('#list_CategoryBenefits :selected').text();
        if (selCatBenValue == "Recurring") {
            $(".exitRunRate").show();
        }
        else {
            $(".exitRunRate").hide();
        }

    });

    $("#UserVertical").change(function () {

        var UserVertical = document.getElementById("UserVertical");
        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
        var UserServiceLine = document.getElementById("UserServiceLine");
        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;
        $('#UserServiceLine option').remove();

        var UserVerticalArray = [];
        var UserServiceLineArray = [];
        var PrimaryVerticalNameArray = [];
        var PrimaryServiceLineNameArray = [];

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQuery: "<Query><Where><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='ServiceLine' /><FieldRef Name='PrimaryVerticalName' /><FieldRef Name='PrimaryServiceLine' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var VerticalName = $(this).attr("ows_VerticalName");
                    var ServiceLine = $(this).attr("ows_ServiceLine");
                    var PrimaryVerticalName = $(this).attr("ows_PrimaryVerticalName");
                    var PrimaryServiceLineName = $(this).attr("ows_PrimaryServiceLine");

                    PrimaryVerticalNameArray.push(PrimaryVerticalName);
                    PrimaryServiceLineNameArray.push(PrimaryServiceLineName);
                    UserVerticalArray.push(VerticalName);
                    UserServiceLineArray.push(ServiceLine);
                });
            }

        });

        newarrayPrimaryVerticalName = PrimaryVerticalNameArray.concat(UserVerticalArray);
        newarrayPrimaryServiceLineName = UserServiceLineArray;
        //  newarrayVertical = jQuery.unique(newarrayPrimaryVerticalName);
        //  newarrayServiceLine = jQuery.unique(newarrayPrimaryServiceLineName);
        var newarrayServiceLine = [];
        for (var i = 0 ; i < newarrayPrimaryServiceLineName.length ; ++i) {
            if (newarrayServiceLine.indexOf(newarrayPrimaryServiceLineName[i]) == -1)
                newarrayServiceLine.push(newarrayPrimaryServiceLineName[i]);
        }

        for (var i = 0; i < newarrayServiceLine.length; i++) {
            $("#UserServiceLine").append("<option value='" + newarrayServiceLine[i] + "'>" + newarrayServiceLine[i] + "</option>");

        }
        //NikhilD call method for New Task
        GetFilteredData();
        //NikhilD call method for New Task
    });

    $("#list_CategoryOther").change(function () {

        var UserVertical = document.getElementById("list_CategoryOther");
        var UserVerticalValue = UserVertical.options[UserVertical.selectedIndex].text;
        var UserServiceLine = document.getElementById("list_Status");
        var UserServiceLineValue = UserServiceLine.options[UserServiceLine.selectedIndex].text;

        $('#list_Status option').remove();
        var UserVerticalArray = [];
        var UserServiceLineArray = [];
        var PrimaryVerticalNameArray = [];
        var PrimaryServiceLineNameArray = [];

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "Approver Details",
            CAMLQuery: "<Query><Where><And><Eq><FieldRef Name='ApproverEmail' /><Value Type='Text'>" + userEmail + "</Value></Eq><Eq><FieldRef Name='VerticalName' /><Value Type='Text'>" + UserVerticalValue + "</Value></Eq></And></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /><FieldRef Name='ServiceLine' /><FieldRef Name='PrimaryVerticalName' /><FieldRef Name='PrimaryServiceLine' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    var VerticalName = $(this).attr("ows_VerticalName");
                    var ServiceLine = $(this).attr("ows_ServiceLine");
                    var PrimaryVerticalName = $(this).attr("ows_PrimaryVerticalName");
                    var PrimaryServiceLineName = $(this).attr("ows_PrimaryServiceLine");

                    PrimaryVerticalNameArray.push(PrimaryVerticalName);
                    PrimaryServiceLineNameArray.push(PrimaryServiceLineName);
                    UserVerticalArray.push(VerticalName);
                    UserServiceLineArray.push(ServiceLine);
                });
            }

        });

        newarrayPrimaryVerticalName = PrimaryVerticalNameArray.concat(UserVerticalArray);
        newarrayPrimaryServiceLineName = UserServiceLineArray;
        //newarrayVertical = jQuery.unique(newarrayPrimaryVerticalName);
        //newarrayServiceLine = jQuery.unique(newarrayPrimaryServiceLineName);
        var newarrayServiceLine = [];
        for (var i = 0 ; i < newarrayPrimaryServiceLineName.length ; ++i) {
            if (newarrayServiceLine.indexOf(newarrayPrimaryServiceLineName[i]) == -1)
                newarrayServiceLine.push(newarrayPrimaryServiceLineName[i]);
        }


        for (var i = 0; i < newarrayServiceLine.length; i++) {

            $("#list_Status").append("<option value='" + newarrayServiceLine[i] + "'>" + newarrayServiceLine[i] + "</option>");
        }


    });

    $("#UserServiceLine").change(function () {

        GetFilteredData();
    });
    //NikhilD added method for Task Id 322
    function Approveonclick() {

        var userEmail = $().SPServices.SPGetCurrentUser({ fieldName: "Email", debug: false });


        var status = $('#popupStatus input:radio:checked').val();

        var hdnIdeaID = $('#hdnIdeaID').val();
        var hdnIdeaStatus = $('#hdnIdeaStatus').val();


        if (status == "Approve") {
            GetAllImprovementLever();
            GetAllImplementationEfforts();
            GetAllOpportunityType();

            if (hdnIdeaStatus == "Rework from F1" || hdnIdeaStatus == "Rework from F2" || hdnIdeaStatus == "Rework from F3") {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").show();
                GetAndSetIdeasByIDForReworkFromFinacial(hdnIdeaID);
            }
            else if (hdnIdeaStatus.indexOf("L1") >= 0) {
                $("#divL1Approval").show();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").hide();
            }
            else if (hdnIdeaStatus.indexOf("L2") >= 0) {
                $("#divL2Approval").show();
                $("#divL1Approval").hide();
                $("#divCICoreFinancialApproval").hide();

                GetAndSetIdeasByIDForL2(hdnIdeaID);

            }
            else if (hdnIdeaStatus.indexOf("L3") >= 0) {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").show();
                $("#btnCalculate").prop('disabled', true);

                ClearAllL3FinancialControls();
                GetAndSetIdeasByIDForL3(hdnIdeaID);

                document.getElementById("EffortsSaved").disabled = true;

                document.getElementById("list_OpportunityType").disabled = false;
                document.getElementById("dtActualDateOfCompletion").disabled = true;
                document.getElementById("HardTotalBenefits").disabled = true;
                document.getElementById("PartnerTotalBenefits").disabled = true;

            }
            else if (hdnIdeaStatus.indexOf("F1") >= 0 || hdnIdeaStatus.indexOf("F2") >= 0 || hdnIdeaStatus.indexOf("F3") >= 0) {
                $("#divL1Approval").hide();
                $("#divL2Approval").hide();
                $("#divCICoreFinancialApproval").show();

                ClearAllL3FinancialControls();
                GetAndSetIdeasByIDForFinancial(hdnIdeaID);
                DisabledAllL3FinancialControls();

            }
        }
        else if (status == "Reject") {
            $("#divL1Approval").hide();
            $("#divL2Approval").hide();
            $("#divCICoreFinancialApproval").hide();
        }
        else if (status == "Rework") {
            $("#divL1Approval").hide();
            $("#divL2Approval").hide();
            $("#divCICoreFinancialApproval").hide();
        }
        else if (status == "On Hold") {
            $("#divL1Approval").hide();
            $("#divL2Approval").hide();
            $("#divCICoreFinancialApproval").hide();
        }

    }
    //NikhilD added method for Task Id 322
    //NikhilD added method 
    function GetVerticalNameByID(hdnIdeaID) {
        var VerticalName = "";
        $().SPServices({
            operation: "GetListItems",
            async: false,
            listName: "V-Ideas",
            CAMLQuery: "<Query><Where><Eq><FieldRef Name='ID' /><Value Type='Counter'>" + hdnIdeaID + "</Value></Eq></Where></Query>",
            CAMLViewFields: "<ViewFields><FieldRef Name='VerticalName' /></ViewFields>",

            completefunc: function (xData, Status) {

                $(xData.responseXML).SPFilterNode("z:row").each(function () {
                    VerticalName = $(this).attr("ows_VerticalName");

                });
            }

        });
        return VerticalName;
    }
    //NikhilD added method 
</script>
<head><title>ApprovalNewOtherIdeas</title></head>
